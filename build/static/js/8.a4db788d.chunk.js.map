{"version":3,"sources":["assets/images/logo.png","containers/UserLayout/UserAvtar.js","assets/images/logo-icon.png","containers/AdminLayout/_adminNav.js","containers/AdminLayout/_recruitmentAdminNav.js","containers/AdminLayout/_recruitmentTeamNav.js","containers/AdminLayout/_marketingTeamNav.js","views/AdminDashboard/Dashboard/NewUsersData.js","views/AdminDashboard/Dashboard/NewApplicationData.js","views/AdminDashboard/Dashboard/Dashboard.js","views/AdminDashboard/Organization/OrganizationData.js","views/AdminDashboard/Organization/Organization.js","views/AdminDashboard/Users/UsersData.js","views/AdminDashboard/Users/Users.js","views/AdminDashboard/Users/User.js","views/AdminDashboard/Organization/Enquiry/EnquiryListData.js","views/AdminDashboard/Organization/Enquiry/EnquiryListing.js","views/AdminDashboard/Subscription/SubscriptionData.js","views/AdminDashboard/Subscription/AdvertiserSubscription.js","views/AdminDashboard/ChangePassword/ChangePassword.js","views/AdminDashboard/UserTransactions/UserTransactionData.js","views/AdminDashboard/UserTransactions/UserTransactionList.js","views/AdminDashboard/SubscribedUsers/SubscribedAdvertiserListData.js","views/AdminDashboard/SubscribedUsers/SubscribedAdvertiserList.js","views/AdminDashboard/SubscribedUsers/SubscribedOwnerListData.js","views/AdminDashboard/SubscribedUsers/SubscribedOwnerList.js","views/AdminDashboard/VaApplications/VaApplicationData.js","views/AdminDashboard/VaApplications/ApplicationLists..js","views/AdminDashboard/VaApplications/EditVaApplication.js","views/AdminDashboard/Organization/VaRequest/VaRequestData.js","views/AdminDashboard/Organization/VaRequest/VaRequestListing.js","views/AdminDashboard/ScheduledBooking/ScheduledBookingData.js","views/AdminDashboard/ScheduledBooking/ScheduledBooking.js","views/AdminDashboard/Organization/VaRequest/VaMemberList.js","views/AdminDashboard/Organization/VaRequest/AssignRequest.js","views/AdminDashboard/Organization/VaTask/VaTaskData.js","views/AdminDashboard/Organization/VaTask/VaTaskListing.js","views/AdminDashboard/NewsletterSubscriber/SubscribersData.js","views/AdminDashboard/NewsletterSubscriber/NewsletterSubscribersList.js","views/AdminDashboard/Organization/VaTimesheet/VaTimesheetData.js","views/AdminDashboard/Organization/VaTimesheet/VaTimesheetList.js","views/AdminDashboard/Organization/Billing/BillingData.js","views/AdminDashboard/Organization/Billing/BillingList.js","views/AdminDashboard/VaApplications/AddVaApplication.js","routes/adminRoutes.js","containers/AdminLayout/DefaultFooter.js","containers/AdminLayout/DefaultHeader.js","containers/AdminLayout/AdminLayout.js","views/Formerrors/Formerrors.js"],"names":["module","exports","UserAvtar","props","arrName","localStorage","getItem","split","firstName","slice","join","lastName","length","className","substring","items","name","url","icon","NewUserData","state","buttonProcessing","rowIndex","dataTableItem","console","log","this","data","rowsItem","entries","i","userData","userInfo","SNo","profileId","organizationName","userName","userEmail","email","phoneNumber","address","status","createdAt","Date","toLocaleDateString","push","list","map","user","key","to","Component","NewApplicationData","mobileNumber","skypeID","socialMediaID","createdDate","Dashboard","loading","dashBoardStats","organizationCount","usersCount","foodTruckCount","enquiryCount","userList","enquiryList","vaApplicationList","setState","commonService","getAPIWithAccessToken","then","res","undefined","toast","error","message","dashData","lineGraphLabels","foodTruckGraph","labels","foodTruckData","enquiryData","enquiryGraph","responseData","profileList","requestList","role","Row","Col","xs","sm","lg","src","height","alt","Card","title","CardBody","noThrow","OrganizationData","editOrganizationAction","deleteOrganizationAction","orgnization","orgInfo","authId","columns","label","options","filter","sort","download","customBodyRender","value","tableMeta","updateValue","disabled","onClick","editOrganizationItem","href","window","confirm","deleteOrganizationItem","search","searchOpen","print","downloadOptions","filename","separator","responsive","selectableRows","textLabels","body","noMatch","dataTableLoadingStatus","toolTip","columnHeaderTooltip","column","fixedHeaderOptions","xAxis","yAxis","Organization","changeHandler","event","target","formField","validateField","toggle","modal","changeStatusBtn","formValid","organization_name","first_name","last_name","address2","city","country","postalCode","formErrors","changeFilterHandler","filterItem","setFilterFromDate","date","filterFormField","filterFrom","setFilterToDate","filterTo","resetfilterOragnization","filter_organization_id","filterOrgName","filterMobile","filterStatus","custom_search","organizationList","formProccessing","filterLocation","handleEditOrganization","bind","submitHandler","handleDeleteOrganization","filterOragnizationList","organizationQuery","newFromDate","getFormatDate","newToDate","catch","err","response","clear","history","preventDefault","formInputField","formData","organizationInfo","putAPIWithAccessToken","success","postAPIWithAccessToken","fieldName","fieldValidationErrors","contact_person","validateForm","statusBtn","Button","type","size","changeProfileStatus","formdata","deleteAPIWithAccessToken","getFullYear","toString","getMonth","getDate","loaderElement","Loader","processingBtnText","CardHeader","color","md","FormGroup","Label","htmlFor","Input","id","placeholder","onChange","selected","dateFormat","Modal","isOpen","ModalHeader","Form","onSubmit","noValidate","ModalBody","required","ModalFooter","UsersData","editUserAction","deleteUserAction","charAt","toUpperCase","editUserRow","deleteUserRow","Users","userType","resetfilterForm","filterPhone","profileImage","latitude","longitude","handleEditUser","filterUserList","handleDeleteUser","filterQuery","delFormData","User","profileInfo","params","match","EnquiryListData","deleteEnquiryAction","enquiry","resInfo","contactPerson","phone","subject","indexVal","enquiryId","deleteEnquiryItem","EnquiryListing","enquiryLists","filterContactPerson","filterPhoneNumber","handleDeleteEnquiry","filterEnquiryList","filterEmail","SubscriptionData","editSubscriptionAction","deleteSubscriptionAction","plan","pmon","planVariation","pyear","planId","planName","amount","userAccess","advertisementAccess","description","action","editSubscriptionItem","AdvertiserSubscription","isValid","validity","valid","validationMessage","plan_name","monthlyAmount","yearlyAmount","duration","plan_type","isTrail","trail_days","planList","handleEditSubscription","Number","planInfo","errorMessage","changeSubscriptionStatus","handleDeleteSubscription","FormFeedback","pattern","ChangePassword","old_password","new_password","confirm_password","TransactionData","editDataAction","subscriberId","transactionId","invoiceId","isPaid","TransactionLists","transactionProfileId","planDuration","planTypeLabel","startDate","endDate","dataLists","handleEditData","foodtruckId","itemLists","filter_foodTruckId","strWalkQuery","listItem","rowData","statusLabel","SubscribedAdvertiserListData","display","SubscribedAdvertiserList","SubscribedOwnerListData","SubscribedOwnerList","VaApplicationData","deleteItemAction","item","itemInfo","vaApplicationId","skillSet1","rateSkill1","skillSet2","rateSkill2","skillSet3","rateSkill3","deleteItem","ApplicationList","filterFirstName","filterSkill","filterRating","itemList","filterApplicationId","handleDeleteRecord","filterItemList","min","max","skillArr","EditVaApplication","handleSkillChange","e","prevState","checkboxes","handleAudioFileChange","audioFile","files","handleResumeCVeChange","resumeCV","handleIntentLetterChange","intentLetter","handleInternetSpeedScreenshotChange","internetSpeedScreenshot","dropDownOpen","changeApplicationStatus","requestStatus","statusFormData","toLowerCase","authInfo","getApplicationInfo","deleteFormdata","platform","portfolioLink","skillSet","referenceName","referenceEmail","notes","applicationFiles","successMessage","errors","submitFormData","appDetail","audioFileName","resumeCVName","intentLetterName","internetSpeedScreenshotName","changeFoodTruckStatus","FormData","append","scrollTo","formIsValid","RegExp","test","invalid","step","skill","index","rel","data-multiple-caption","xmlns","width","viewBox","d","ButtonDropdown","DropdownToggle","caret","DropdownMenu","DropdownItem","VaRequestData","editItemAction","Store","vaType","vaRequestId","natureOfBusiness","engagementType","numberOfVA","style","editStoreItem","deleteStoreItem","SetOrganizationDropDownItem","VaRequestListing","organizationId","engagementDescription","filterVaType","filterEngagementType","filter_address","handleDeleteItem","handleEditItem","truckName","latLng","lat","lng","ScheduledBookingData","companyName","scheduledOn","scheduledDate","year","month","day","scheduledTime","bookingId","ScheduledBooking","bookingList","VAMemberList","handleChange","checkedItems","checkAll","checked","info","indexOf","splice","assignUser","authIds","clientId","AssignRequest","emailOrName","filterVaMemberList","getRequestInfo","readOnly","InputGroup","InputGroupAddon","addonType","VaTaskData","projectId","vaName","SetVaDropDownItem","vaUserInfo","vaInfo","SetClientDropDownItem","vaClientInfo","clientInfo","VaTaskListing","taskId","vaAuthId","filterProjectId","filterTitle","clientList","vaLists","filterVaAuth","vaListItem","clientListItem","vaTaskId","SubscribersData","sno","NewsletterSubscribersList","VaTimesheetData","taskName","billingHours","clientName","editDataItem","deleteDataItem","VaTimesheetList","filterClientId","vaTitle","BillingData","payInvoiceAction","billingDuration","billingFrom","billingTo","invoiceAttachment","payInvoiceItem","BillingList","changeInvoiceHandler","invoiceField","billingPeriod","billingDate","invoiceToggle","invoiceModal","invoiceClientId","billingFromDate","billingToDate","billingDescription","setBillingFromDate","setBillingToDate","payInvoiceAdmin","submitInvoiceHandler","rowList","invoiceFormProccessing","invoiveInputField","requestInfo","location","redirectUrl","adminRoutes","path","exact","component","UsersList","UserDetails","postAPI","AdvertiserPlans","UserTransactionList","SubscribersList","DefaultFooter","children","Fragment","defaultProps","DefaultHeader","mobile","full","logo","minimized","sygnet","Nav","navbar","UncontrolledDropdown","nav","direction","right","header","tag","onLogout","AdminLayout","fixed","fallback","signOut","navConfig","adminNavigation","router","recruitmentAdminNavigation","recruitmentTeamNavigation","marketingTeamNavigation","appRoutes","Container","fluid","route","idx","render","from","FormErrors","Object","keys","reqFieldName","replace"],"mappings":"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","file":"static/js/8.a4db788d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c9b8fdf3.png\";","import React from 'react';\r\nimport \"./UserAvtar.css\";\r\n\r\nconst UserAvtar = (props) => {\r\n  let name = localStorage.getItem( 'userName' );\r\n  let arrName = name.split(\" \");\r\n  let firstName = arrName.slice(0, 1).join(' ');\r\n  let lastName = arrName.slice(1, arrName.length).join(' ');\r\n  return (\r\n    <div className=\"profileImage\">{firstName.substring(0, 1)+''+lastName.substring(0, 1)}</div>\r\n  );\r\n}\r\n\r\nexport default UserAvtar;\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-icon.d9c9e702.png\";","export default {\r\n  items: [\r\n    {\r\n      name: 'Dashboard',\r\n      url: '/admin/dashboard',\r\n      icon: 'icon-speedometer',\r\n    },\r\n    {\r\n      name: 'Clients',\r\n      url: '/admin/organization',\r\n      icon: 'icon-people',   \r\n    },\r\n    {\r\n      name: 'VA Requests',\r\n      url: '/admin/va-request',\r\n      icon: 'fa fa-list',\r\n    },\r\n    {\r\n      name: 'Discovery Call',      \r\n      icon: 'fa fa-calendar-o',\r\n      url: '/admin/scheduled-booking',\r\n    },\r\n    {\r\n      name: 'eBook Downloads',      \r\n      icon: 'fa fa-book',\r\n      url: '/admin/newsletter',\r\n    },\r\n    {\r\n      name: 'Contact Inquiries',      \r\n      icon: 'icon-envelope',\r\n      url: '/admin/enquiries',\r\n    },\r\n    {\r\n      name: 'VA Applications',      \r\n      icon: 'fa fa-file-o',\r\n      url: '/admin/va-application',\r\n    },\r\n    {\r\n      name: 'VA Tasks',      \r\n      icon: 'fa fa-tasks',\r\n      url: '/admin/va-task',\r\n    },\r\n    {\r\n      name: 'VA Timesheet',\r\n      url: '/admin/timesheet',\r\n      icon: 'fa fa-clock-o',\r\n    },\r\n    {\r\n      name: 'Billing',\r\n      url: '/admin/billing',\r\n      icon: 'fa fa-credit-card',\r\n    },\r\n    {\r\n      name: 'Transactions',\r\n      url: '/admin/transactions',\r\n      icon: 'fa fa-dollar',\r\n    },\r\n    {\r\n      name: 'Admins',\r\n      url: '/admin/users',\r\n      icon: 'icon-user',   \r\n    },\r\n    \r\n  ],\r\n};\r\n","export default {\r\n  items: [\r\n    {\r\n      name: 'VA Requests',\r\n      url: '/admin/va-request',\r\n      icon: 'fa fa-list',\r\n    },\r\n    {\r\n      name: 'VA Applications',      \r\n      icon: 'fa fa-file-o',\r\n      url: '/admin/va-application',\r\n    }  \r\n  ],\r\n};\r\n","export default {\r\n  items: [\r\n    {\r\n      name: 'VA Requests',\r\n      url: '/admin/va-request',\r\n      icon: 'fa fa-list',\r\n    },\r\n  ]\r\n};","export default {\r\n  items: [\r\n    {\r\n      name: 'Discovery Call',      \r\n      icon: 'fa fa-calendar-o',\r\n      url: '/admin/scheduled-booking',\r\n    },\r\n    {\r\n      name: 'eBook Downloads',      \r\n      icon: 'fa fa-book',\r\n      url: '/admin/newsletter',\r\n    },  \r\n  ]\r\n};","import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\n//import { Button } from 'reactstrap';\r\n\r\nclass NewUserData extends Component{\r\n    constructor(props){\r\n        super(props);   \r\n        this.state = {\r\n          buttonProcessing: false,\r\n          rowIndex: '',\r\n          dataTableItem: []\r\n        };\r\n        \r\n      }\r\n\r\n    render(){\r\n        console.log(this.props.data);\r\n        let rowsItem = []; \r\n        for(const [i, userData] of this.props.data.entries()){\r\n            let userInfo = {\r\n                SNo:i,\r\n                profileId:userData.profileId,\r\n                organizationName: userData.organizationName,\r\n                userName: userData.firstName+' '+userData.lastName,  \r\n                userEmail: userData.email,\r\n                phoneNumber: userData.phoneNumber || \" \",\r\n                address: userData.address || \" \",\r\n                status: userData.status ? \"Active\" : \"Inactive\",   \r\n                createdAt: (new Date(userData.createdAt)).toLocaleDateString(\"en-US\"),\r\n              }      \r\n              rowsItem.push(userInfo);\r\n        }\r\n        \r\n        let list = rowsItem.map(user =>{\r\n            return (\r\n                <tr key={user.SNo}>\r\n                    <td>{user.organizationName}</td>\r\n                    <td>{user.userName}</td>\r\n                    <td>{user.userEmail}</td>\r\n                    <td>{user.phoneNumber}</td>\r\n                    <td>{user.address}</td>\r\n                    <td>{user.status}</td>\r\n                    <td className=\"text-center\">\r\n                        <Link className=\"btn-edit\" to={`/admin/user/${user.profileId}`} ><i className=\"fa fa-eye\"></i> </Link>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n            \r\n            <div className=\"table-responsive card-table\">\r\n                <table>\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th>Organization</th>\r\n                            <th>User</th>\r\n                            <th>Email</th>\r\n                            <th>Phone Number</th>\r\n                            <th>Address</th>\r\n                            <th>Status</th>\r\n                            <th className=\"text-center\">#</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{list}</tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default NewUserData;","import React, { Component } from 'react';\r\n//import {Link} from 'react-router-dom';\r\n\r\nclass NewApplicationData extends Component{\r\n    constructor(props){\r\n        super(props);   \r\n        this.state = {\r\n          buttonProcessing: false,\r\n          rowIndex: '',\r\n          dataTableItem: []\r\n        };\r\n        \r\n      }\r\n\r\n    render(){\r\n        let rowsItem = []; \r\n        for(const [i, userData] of this.props.data.entries()){\r\n            let userInfo = {\r\n                SNo:i,\r\n                userName: userData.firstName+' '+userData.lastName,\r\n                email: userData.email,\r\n                mobileNumber: userData.mobileNumber,\r\n                skypeID: userData.skypeID || \" \",\r\n                socialMediaID: userData.socialMediaID,\r\n                createdDate: (new Date(userData.createdAt)).toLocaleDateString(\"en-US\"),\r\n              }\r\n              rowsItem.push(userInfo);\r\n        }\r\n        \r\n        let list = rowsItem.map(user =>{\r\n            return (\r\n                <tr key={user.SNo}>\r\n                    <td>{user.userName}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.mobileNumber}</td>\r\n                    <td>{user.skypeID}</td>\r\n                    <td>{user.socialMediaID}</td>\r\n                    <td>{user.createdDate}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <>\r\n           \r\n            <div className=\"table-responsive card-table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>User</th>\r\n                            <th>Email</th>\r\n                            <th>Mobile no.</th>\r\n                            <th>Skype ID</th>\r\n                            <th>Social Media Link</th>\r\n                            <th>Application Date</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{list}</tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default NewApplicationData;","import React, { Component } from 'react';\r\nimport  { Redirect, Link } from 'react-router-dom';\r\nimport { Card, CardBody, Col, Row } from 'reactstrap';\r\n//import { PeopleAlt, LocalShipping, MailOutline, SupervisorAccount, Link } from '@material-ui/icons';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport './dashboard.css'\r\n\r\nimport NewUserData from './NewUsersData';\r\nimport NewApplicationData from './NewApplicationData';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     loading: false,\r\n      dashBoardStats: {organizationCount: 0, usersCount: 0, foodTruckCount: 0, enquiryCount:0 },\r\n      userList: [],\r\n      enquiryList:[],\r\n      vaApplicationList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.setState( { loading: true}, () => {\r\n\r\n      commonService.getAPIWithAccessToken('dashboard')\r\n        .then( res => {\r\n          if( undefined === res.data.data || !res.data.status ){\r\n            this.setState( {loading: false });\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          const dashData = res.data.data;\r\n          this.setState({ loading:false, dashBoardStats:dashData, lineGraphLabels:dashData.foodTruckGraph.labels, foodTruckData:dashData.foodTruckGraph.data, enquiryData:dashData.enquiryGraph.data  })\r\n        }\r\n        )\r\n\r\n      commonService.getAPIWithAccessToken('organization?pageNo=1&pageSize=10')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }  \r\n          const responseData = res.data.data;\r\n          this.setState({loading:false, userList: responseData.profileList});\r\n        } )\r\n        \r\n      commonService.getAPIWithAccessToken('va-application?pageNo=1&pageSize=10')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }\r\n          //console.log(res.data.data);\r\n          this.setState({loading:false, vaApplicationList: res.data.data.requestList});\r\n      } )\r\n      \r\n    } )\r\n  }\r\n \r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  render() {\r\n    const role = localStorage.getItem( 'role' );\r\n    if ( role!=='admin' ) {\r\n      if(role === \"recruitmentAdmin\")\r\n        return ( <Redirect to={`/admin/va-request`} noThrow /> )\r\n      else if(role === \"recruitmentTeam\")\r\n        return ( <Redirect to={`/admin/va-request`} noThrow /> )\r\n      else if(role === \"marketingTeam\")\r\n        return ( <Redirect to={`/admin/scheduled-booking`} noThrow /> )\r\n\t\t} else {\r\n      return (\r\n        <div className=\"animated fadeIn admin-dashboard\">\r\n          <div className=\"overview-info\">\r\n            <Row>\r\n            <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n              <div className=\"card-bg-info card-bg-1\">\r\n                <div className=\"card-bg-icon\">\r\n                  <img src=\"/images/user.svg\" height=\"35\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-bg-content\">\r\n                  <h2 className=\"text-value\">100</h2>\r\n                  <p>Total Users</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n              <div className=\"card-bg-info card-bg-2\">\r\n                <div className=\"card-bg-icon\">\r\n                  <img src=\"/images/timezone.svg\" height=\"35\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-bg-content\">\r\n                  <h2 className=\"text-value\">20</h2>\r\n                  <p>Total Request</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n              <div className=\"card-bg-info card-bg-3\">\r\n                <div className=\"card-bg-icon\">\r\n                  <img src=\"/images/task.svg\" height=\"35\" alt=\"\" />\r\n                </div>\r\n                <div className=\"card-bg-content\">\r\n                  <h2 className=\"text-value\">200</h2>\r\n                  <p>Total VA Applications</p>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"12\" sm=\"6\" lg=\"3\">\r\n              <div className=\"card-bg-info card-bg-4\">\r\n                  <div className=\"card-bg-icon\">\r\n                  <img src=\"/images/payment.svg\" height=\"35\" alt=\"\" />\r\n                  </div>\r\n                  <div className=\"card-bg-content\">\r\n                    <h2 className=\"text-value\">$300</h2>\r\n                    <p>Total Payment</p>\r\n                  </div>\r\n              </div>\r\n            </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"Enquiries-info\">\r\n            {/* New Enquiries Data */}\r\n            <Row>\r\n              <Col>\r\n                <Card className=\"vd-card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"mr-auto\">\r\n                          <h4 className=\"card-title\"> New VA Applications</h4>\r\n                      </div>\r\n                      <div className=\"add-option-info\">\r\n                        <Link to=\"/admin/va-application\" className=\"btn-add\" title=\"View All Applications\">View All</Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <CardBody>\r\n                    <NewApplicationData data={this.state.vaApplicationList} />\r\n                  </CardBody>              \r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n\r\n          <div className=\"Users-info\">\r\n            {/* New Users Data */}\r\n            <Row>\r\n              <Col>\r\n                <Card className=\"vd-card\">\r\n                  <div className=\"card-header\">\r\n                    <div className=\"d-flex align-items-center\">\r\n                      <div className=\"mr-auto\">\r\n                          <h4 className=\"card-title\"> Recent Joined Members</h4>\r\n                      </div>\r\n                      <div className=\"add-option-info\">\r\n                        <Link to=\"/admin/organization\" className=\"btn-add view-all-btn\" title=\"View All Members\">View All</Link>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <CardBody>\r\n                    <NewUserData data={this.state.userList} />\r\n                  </CardBody>              \r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </div>      \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass OrganizationData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editOrganizationItem(rowIndex){    \r\n    this.props.editOrganizationAction(rowIndex);\r\n  }\r\n  deleteOrganizationItem(rowIndex){    \r\n    this.props.deleteOrganizationAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];    \r\n    for(const [i, orgnization] of this.props.data.entries()){\r\n      console.log(i);\r\n      let orgInfo = {\r\n        organizationName: orgnization.organizationName,\r\n        authId: orgnization.authId,\r\n        firstName: orgnization.firstName +' '+ orgnization.lastName,\r\n        email: orgnization.email,\r\n        phoneNumber: orgnization.phoneNumber || \" \",\r\n        address: orgnization.address || \" \",\r\n        createdAt: (new Date(orgnization.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: orgnization.status ? \"Active\" : \"Inactive\",   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'User Name',\r\n        name: 'firstName',\r\n      },\r\n      {\r\n        label: 'Organization',\r\n        name: 'organizationName',\r\n      },\r\n      {\r\n        label: 'Email ID',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Address',\r\n        name: 'address',\r\n      },\r\n      {\r\n        label: 'Registered on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editOrganizationItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n                <Link className=\"btn-view\" to={`/admin/organization/manage-listing/${rowsItem[i].authId}`}><i className=\"fa fa-list\"></i> </Link>\r\n                <a href=\"#!\" className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteOrganizationItem(i) };}} ><i className=\"fa fa-trash\"></i></a></p>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-client-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Clients\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default OrganizationData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport { FormErrors } from '../../Formerrors/Formerrors';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport OrganizationData from './OrganizationData';\r\nimport './Organization.css'\r\n\r\nclass Organization extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      organizationList: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formProccessing: false,\r\n      formField: {organization_name: '', email: '', first_name: '', last_name: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      formErrors: {organization_name: '', email: '', first_name: '', last_name: '', error: ''},\r\n      formValid: false,\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterLocation: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''},\r\n    } \r\n    this.handleEditOrganization = this.handleEditOrganization.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteOrganization = this.handleDeleteOrganization.bind(this);\r\n    this.filterOragnizationList = this.filterOragnizationList.bind(this);\r\n  }\r\n  // Fetch the organization List\r\n  componentDidMount() { \r\n    this.organizationList();\r\n  }\r\n  /*organization List API*/\r\n  organizationList(filterItem = {}) {\r\n    let organizationQuery = \"?pageSize=10000\";\r\n    console.log(filterItem);\r\n    if(filterItem.filterOrgName !== undefined && filterItem.filterOrgName !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&organizationName=\"+filterItem.filterOrgName: \"?organizationName=\"+filterItem.filterOrgName;\r\n    if(filterItem.filterLocation !== undefined && filterItem.filterLocation !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&location=\"+filterItem.filterLocation: \"?location=\"+filterItem.filterLocation;\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"?emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      organizationQuery += (organizationQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization'+organizationQuery)\r\n        .then( res => {\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, organizationList: res.data.data.profileList});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.first_name, \r\n        \"lastName\": formInputField.last_name, \r\n        \"mobileNumber\": formInputField.mobileNumber, \r\n        \"phoneNumber\": formInputField.phoneNumber, \r\n        \"organizationName\": formInputField.organization_name,\r\n        \"address\": formInputField.address,\r\n        \"address2\": formInputField.address2,\r\n        \"city\": formInputField.city,\r\n        \"state\": formInputField.state,\r\n        \"country\": formInputField.country,\r\n        \"postalCode\": formInputField.postalCode\r\n      };\r\n      \r\n      if(this.state.address)\r\n        formData['address'] = this.state.address;\r\n      \r\n      if(this.state.address2)\r\n        formData['address2'] = this.state.address2;\r\n      \r\n      if(this.state.country)\r\n        formData['country'] = this.state.country;\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n       const organizationInfo = this.state.organizationList[rowIndex];\r\n       formData['profileId'] = organizationInfo.profileId;\r\n        commonService.putAPIWithAccessToken('organization', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('organization', formData)\r\n        .then( res => {           \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {         \r\n      case 'organization_name':        \r\n        fieldValidationErrors.organization_name = (value !== '') ? '' : ' is required';\r\n        break; \r\n      case 'email':        \r\n        fieldValidationErrors.email = (value !== '') ? '' : ' is required';\r\n        break; \r\n      case 'first_name':        \r\n        fieldValidationErrors.contact_person = (value !== '') ? '' : ' is required';\r\n        break; \r\n      case 'last_name':\r\n        fieldValidationErrors.contact_person = (value !== '') ? '' : ' is required';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    this.setState({formValid: \r\n      (formErrors.organization_name === \"\"  && formErrors.email === \"\" && formErrors.first_name === \"\" && formField.organization_name !== \"\" && formField.first_name !== \"\" && formField.email !== \"\") \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formValid: false,\r\n      formField: {organization_name: '', email: '', first_name: '', last_name: '', mobileNumber:'', phoneNumber: '', address: '', address2:'', city:'', state:'', country:'', postalCode:'' },\r\n      formErrors: {organization_name: '', email: '', first_name: '', last_name: '', error: ''}\r\n    });\r\n  }\r\n  /* Edit organization*/\r\n  handleEditOrganization(rowIndex){\r\n      const organizationInfo = this.state.organizationList[rowIndex];\r\n      const formField = {\r\n        organization_name: organizationInfo.organizationName,\r\n        email: organizationInfo.email, \r\n        first_name: organizationInfo.firstName, \r\n        last_name: organizationInfo.lastName, \r\n        phoneNumber: organizationInfo.phoneNumber,\r\n        mobileNumber: organizationInfo.mobileNumber,\r\n        address: organizationInfo.address,\r\n        address2: organizationInfo.address2,\r\n        city: organizationInfo.city,\r\n        state: organizationInfo.state,\r\n        country: organizationInfo.country,\r\n        postalCode: organizationInfo.postalCode\r\n      };\r\n      const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( organizationInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n        this.changeProfileStatus(organizationInfo.profileId, organizationInfo.status )} >{ ( organizationInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n      \r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  /* Change Profile status*/\r\n  changeProfileStatus(profileId,status){\r\n    this.setState( { loading: true}, () => {\r\n      const formData = {\r\n        \"profileId\": profileId,\r\n        \"status\": (status ? false : true ),\r\n      };\r\n      commonService.putAPIWithAccessToken('organization/status', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, loading: false});\r\n          toast.success(res.data.message);\r\n          this.organizationList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n  }\r\n\r\n  /* Delete organization*/\r\n  handleDeleteOrganization(rowIndex){\r\n\r\n    const orgInfo = this.state.organizationList[rowIndex];\r\n    //console.log(orgInfo);return;\r\n    let formdata = { \"profileId\":orgInfo.profileId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'organization',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.organizationList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n    \r\n  }\r\n  filterOragnizationList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.organizationList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterOragnization = () => {\r\n    this.setState({\r\n      filterItem: { filter_organization_id: '', filterOrgName: '', filterMobile: '', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: ''}\r\n    });\r\n    this.organizationList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    \r\n    const { organizationList, loading, modal, formProccessing, changeStatusBtn, filterItem } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Clients List</strong>\r\n                <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"filterOrgName\">Organization</Label>\r\n                          <Input id=\"filterOrgName\" name=\"filterOrgName\" placeholder=\"Organization Name\" value={this.state.filterItem.filterOrgName}  onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"custom_search\">Email ID / Name</Label>\r\n                          <Input type=\"text\" placeholder=\"Search By Email ID / Name\" id=\"custom_search\" name=\"custom_search\" value={this.state.filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterMobile\">Mobile no.</Label>\r\n                          <Input type=\"text\" placeholder=\"Search By Mobile no.\" name=\"filterMobile\" value={this.state.filterItem.filterMobile} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Active</option>\r\n                            <option value=\"0\">Inactive</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterOragnizationList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterOragnization}><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>  \r\n                  </Col>\r\n                  <Col lg={12}>\r\n                    <OrganizationData data={organizationList} editOrganizationAction={this.handleEditOrganization} deleteOrganizationAction={this.handleDeleteOrganization} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>  \r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>Client's Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"first_name\">First Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Name *\" id=\"first_name\" name=\"first_name\" value={this.state.formField.first_name} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"last_name\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Name *\" id=\"last_name\" name=\"last_name\" value={this.state.formField.last_name} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organization_name\">Organization Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Organization Name *\" id=\"organization_name\" name=\"organization_name\" value={this.state.formField.organization_name} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email *\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"mobileNumber\">Mobile Number</Label>            \r\n                    <Input type=\"text\" placeholder=\"Personal Contact Number \" id=\"mobileNumber\" name=\"mobileNumber\" value={this.state.formField.mobileNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Business Phone</Label>            \r\n                    <Input type=\"text\" placeholder=\"Business Contact Number\" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address\">Street Address </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address Line 1\" id=\"address\" name=\"address\" value={this.state.formField.address} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"address2\">Street Address Line 2 </Label>            \r\n                    <Input type=\"text\" placeholder=\"Street Address Line 2\" id=\"address2\" name=\"address2\" value={this.state.formField.address2} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"city\">City </Label>            \r\n                    <Input type=\"text\" placeholder=\"City\" id=\"city\" name=\"city\" value={this.state.formField.city} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup>\r\n                    <Label htmlFor=\"state\">State</Label>            \r\n                    <Input type=\"text\" placeholder=\"State\" id=\"state\" name=\"state\" value={this.state.formField.state} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"postalCode\">Postal Code </Label>            \r\n                    <Input type=\"text\" placeholder=\"Postal Code\" id=\"postalCode\" name=\"postalCode\" value={this.state.formField.postalCode} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"country\">Country </Label>            \r\n                    <Input type=\"text\" placeholder=\"Country\" id=\"country\" name=\"country\" value={this.state.formField.country} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {changeStatusBtn}\r\n              <Button color=\"primary\" type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Organization;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass UsersData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editUserRow(rowIndex){    \r\n    this.props.editUserAction(rowIndex);\r\n  }\r\n  deleteUserRow(rowIndex){    \r\n    this.props.deleteUserAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];\r\n    let count = 0;\r\n    for(const [i, userData] of this.props.data.entries()){\r\n      count = count+i;\r\n      let userInfo = {\r\n        firstName: userData.firstName +' '+ userData.lastName,\r\n        email: userData.email,\r\n        phoneNumber: userData.phoneNumber || \" \",\r\n        address: userData.address || \" \",\r\n        role: (userData.role ==='admin' ? \"Super Admin\" : userData.role.charAt(0).toUpperCase() + userData.role.substring(1) ),\r\n        createdAt: (new Date(userData.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: userData.status ? \"Active\" : \"Inactive\",   \r\n      }      \r\n      rowsItem.push(userInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'User',\r\n        name: 'firstName',\r\n      },\r\n      {\r\n        label: 'Email ID',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n      },\r\n      {\r\n        label: 'Role',\r\n        name: 'role',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Registered on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editUserRow(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n                <a href=\"#!\" className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteUserRow(i) };}} ><i className=\"fa fa-trash\"></i></a></div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'virdrop-users-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Users List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersData;","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { FormErrors } from '../../Formerrors/Formerrors';\r\nimport Loader from '../../Loader/Loader';\r\nimport UsersData from './UsersData';\r\nimport './Users.css'\r\n\r\nclass Users extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      userList: [],\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formProccessing: false,\r\n      formField: {profileId:'', email: '', first_name: '', last_name: '', phoneNumber: '', userType:'admin' },\r\n      formErrors: { email: '', first_name: '', last_name: '', error: ''},\r\n      formValid: false,\r\n      profileImage:'',\r\n      address: '',\r\n      latitude:'',\r\n      longitude:'',\r\n      filterItem: { filterPhone:'', filterLocation: '', custom_search: '', filterFrom:'',  filterTo:'', filterStatus:''}\r\n    }\r\n    this.handleEditUser = this.handleEditUser.bind(this);\r\n    this.filterUserList = this.filterUserList.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteUser = this.handleDeleteUser.bind(this);\r\n  }\r\n  componentDidMount() { \r\n    this.userList({});\r\n  }\r\n\r\n  /*User List API*/\r\n  userList(filterItem = {}) {\r\n    let filterQuery = \"?roleType=admin&pageSize=20000\";\r\n    if(filterItem.custom_search !== undefined && filterItem.custom_search !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.custom_search: \"&emailOrName=\"+filterItem.custom_search;\r\n    if(filterItem.filterPhone !== undefined && filterItem.filterPhone !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&phoneNumber=\"+filterItem.filterPhone: \"&phoneNumber=\"+filterItem.phoneNumber;\r\n    if(filterItem.filterLocation !== undefined && filterItem.filterLocation !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&location=\"+filterItem.filterLocation: \"&location=\"+filterItem.filterLocation;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n      this.setState( { loading: true}, () => {\r\n        commonService.getAPIWithAccessToken('profile/list'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }\r\n          this.setState({loading:false, userList: res.data.data.profileList});\r\n        } )\r\n        .catch( err => {\r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message); \r\n          }  \r\n        } )\r\n    } )\r\n  }\r\n\r\n   /* Input Field On changes*/\r\n   changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField });\r\n  };\r\n\r\n  /* Edit User*/\r\n  handleEditUser(rowIndex){\r\n    const userInfo = this.state.userList[rowIndex];\r\n    const formField = {\r\n      profileId:userInfo.profileId,\r\n      email: userInfo.email, \r\n      first_name: userInfo.firstName, \r\n      last_name: userInfo.lastName, \r\n      phoneNumber: userInfo.phoneNumber, \r\n      address: userInfo.address,\r\n      userType: userInfo.role\r\n    };\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( userInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(userInfo.profileId, userInfo.status )} >{ ( userInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      if(formInputField.email==='' || formInputField.first_name==='' || formInputField.userType===''){\r\n        this.setState( { formProccessing: false} );\r\n        toast.error(\"Please fill all required fields!\");\r\n        return;\r\n      }\r\n      const formData = {\r\n        \"email\": formInputField.email,\r\n        \"firstName\": formInputField.first_name, \r\n        \"lastName\": formInputField.last_name, \r\n        \"phoneNumber\": formInputField.phoneNumber,\r\n        \"role\": formInputField.userType,\r\n      };\r\n      \r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n       const userInfo = this.state.userList[rowIndex];\r\n       formData['profileId'] = userInfo.profileId;\r\n       commonService.putAPIWithAccessToken('profile', formData)\r\n       .then( res => {\r\n         if ( undefined === res.data.data || !res.data.status ) {\r\n           this.setState( { formProccessing: false} );\r\n           toast.error(res.data.message);\r\n           return;\r\n         }\r\n         this.setState({ modal: false, formProccessing: false});\r\n         toast.success(res.data.message);\r\n         this.userList();\r\n       } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }else{\r\n        commonService.postAPIWithAccessToken('organization', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.userList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n\r\n        \r\n    } );\r\n  };\r\n\r\n  \r\n  /* Change Profile status*/\r\n  changeProfileStatus(profileId,status){\r\n    this.setState( { loading: true}, () => {\r\n      const formData = {\r\n        \"profileId\": profileId,\r\n        \"status\": (status ? false : true ),\r\n      };\r\n      commonService.putAPIWithAccessToken('profile/status', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, loading: false});\r\n          toast.success(res.data.message);\r\n          this.userList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } );\r\n  }\r\n\r\n  handleDeleteUser(rowIndex){\r\n    const rowInfo = this.state.userList[rowIndex];\r\n    const delFormData = {\r\n      \"profileId\": rowInfo.profileId,\r\n    };\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( `profile`, delFormData)\r\n        .then( res => {\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          this.setState({ loading: false});\r\n          this.userList();\r\n          toast.success(res.data.message);\r\n        } )\r\n        .catch( err => {                   \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }  \r\n\r\n \r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formValid: false,\r\n      formField: { profileId:'', email: '', first_name: '', last_name: '', phoneNumber: '', userType: 'admin' },\r\n      formErrors: { email: '', first_name: '', last_name: '', error: ''}\r\n    });\r\n  }\r\n\r\n  filterUserList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.userList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterPhone:'', filterLocation: '', custom_search: '', filterFrom:'',  filterTo:'', filterStatus:''}\r\n    });\r\n    this.userList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userList, loading, modal, changeStatusBtn, formProccessing, filterItem } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading) \r\n      loaderElement = <Loader />\r\n\r\n      const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn user-dashboard\">\r\n        <ToastContainer />\r\n        {loaderElement}\r\n        \r\n        <Card>\r\n          <CardHeader className=\"mainHeading\">\r\n            <strong>Manage Admin Users</strong>\r\n            <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add User</Button>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className=\"filterRow\">                      \r\n                  <Col md={\"3\"} className=\"pl-3\">\r\n                    <FormGroup> \r\n                      <Label>Email ID / Name</Label>\r\n                      <Input type=\"text\" placeholder=\"Search By Email ID / Name\" id=\"custom_search\" name=\"custom_search\" value={filterItem.custom_search} onChange={this.changeFilterHandler} />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"3\"}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"filterPhone\">Phone no.</Label>\r\n                      <Input id=\"filterPhone\" name=\"filterPhone\" placeholder=\"Phone no.\" value={filterItem.filterPhone}  onChange={this.changeFilterHandler} />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"1\"}>\r\n                    <FormGroup> \r\n                      <Label>Status</Label>\r\n                      <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                        <option value=\"\">All</option>\r\n                        <option value=\"1\">Active</option>\r\n                        <option value=\"0\">Inactive</option>\r\n                      </Input>\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date From</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date To</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"1\"} className=\"p-0\">\r\n                    <FormGroup> \r\n                      <Label>&nbsp;</Label><br />\r\n                      <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterUserList}><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                      <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm}><i className=\"fa fa-refresh\"></i></Button>\r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col md={12}>\r\n                <UsersData data={userList} editUserAction={this.handleEditUser} deleteUserAction={this.handleDeleteUser} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>User Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"first_name\">First Name *</Label>            \r\n                    <Input type=\"text\" placeholder=\"First Name\" id=\"first_name\" name=\"first_name\" value={this.state.formField.first_name} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"last_name\">Last Name</Label>            \r\n                    <Input type=\"text\" placeholder=\"Last Name\" id=\"last_name\" name=\"last_name\" value={this.state.formField.last_name} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"email\">Email *</Label>            \r\n                    <Input type=\"text\" placeholder=\"Email\" id=\"email\" name=\"email\" value={this.state.formField.email} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"phoneNumber\">Contact Number</Label>            \r\n                    <Input type=\"text\" placeholder=\"Contact Number \" id=\"phoneNumber\" name=\"phoneNumber\" value={this.state.formField.phoneNumber} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"userType\">Role *</Label>            \r\n                    <Input type=\"select\" id=\"userType\" name=\"userType\" value={this.state.formField.userType} onChange={this.changeHandler} required>\r\n                      <option value=\"admin\">Super Admin</option>\r\n                      <option value=\"recruitmentAdmin\">Recruitment Admin</option>\r\n                      <option value=\"recruitmentTeam\">Recruitment Team</option>\r\n                      <option value=\"marketingTeam\">Marketing Team</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>                \r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {changeStatusBtn}\r\n              <Button color=\"primary\" disabled={formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n       \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Label } from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport Loader from '../../Loader/Loader';\r\n\r\nclass User extends Component {\r\n  constructor( props ){\r\n    super( props );\r\n\r\n    this.state = {\r\n      profileInfo: {},\r\n      loading: false,\r\n      profileId: \"\"\r\n    };\r\n  }\r\n  componentDidMount() {\r\n  const { match: { params } } = this.props;\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('profile/public/'+params.profileId)\r\n        .then( res => {\r\n          console.log(res);\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);  \r\n            this.props.history.push('/admin/users');  \r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, profileInfo: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);    \r\n          }\r\n        } )\r\n    } )\r\n    \r\n  }\r\n  render() {\r\n\r\n    const { profileInfo, loading } = this.state; \r\n    let loaderElement ='';\r\n      \r\n    if(loading)\r\n        loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong><i className=\"icon-info pr-1\"></i>User Profile</strong>\r\n                <Link to=\"/admin/dashboard\" className=\"btn btn-sm btn-secondary pull-right\"><i className=\"fa fa-arrow-left\"></i> Back</Link>\r\n              </CardHeader>\r\n              <CardBody className=\"profileInfo\">\r\n                  {loaderElement}\r\n                  <ToastContainer />\r\n                  <Row>\r\n                    <Col md={4}><Label className=\"h6\">First name: </Label><span> {profileInfo.firstName || 'N/A'}</span></Col>\r\n                    <Col md={8}><Label className=\"h6\">Last name: </Label><span> {profileInfo.lastName || 'N/A'}</span></Col>\r\n                    <Col md={4}><Label className=\"h6\">Email: </Label><span> {profileInfo.email || 'N/A' }</span></Col>\r\n                    <Col md={8}><Label className=\"h6\">Phone: </Label><span> {profileInfo.phoneNumber || 'N/A'}</span></Col>\r\n                    <Col md={12}><Label className=\"h6\">Address: </Label><span> {profileInfo.address || 'N/A'}</span></Col>\r\n                  </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default User;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass EnquiryListData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n\r\n  /* Delete Enquiry Info */\r\n  deleteEnquiryItem(rowIndex){    \r\n    this.props.deleteEnquiryAction(rowIndex);\r\n  }\r\n \r\n\r\n  render() {\r\n    \r\n    let rowsItem = []; \r\n   \r\n    for(const [i, enquiry] of this.props.data.entries()){\r\n      //console.log(i);\r\n      let resInfo = {\r\n        contactPerson: enquiry.contactPerson,\r\n        email: enquiry.email,\r\n        phoneNumber: enquiry.phone || \" \",\r\n        message: enquiry.message || \" \",\r\n        subject: enquiry.subject,\r\n        createdAt: (new Date(enquiry.createdAt)).toLocaleDateString(\"en-US\"),\r\n        indexVal: i,\r\n        enquiryId: enquiry.id,\r\n      }      \r\n      rowsItem.push(resInfo);\r\n    }\r\n\r\n    const columns = [ \r\n        {\r\n          label: 'User',\r\n          name: 'contactPerson',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          name: 'email',\r\n        },\r\n        {\r\n          label: 'Phone no.',\r\n          name: 'phoneNumber',\r\n        },\r\n        {\r\n          label: 'Interested on',\r\n          name: 'subject',\r\n        },\r\n        {\r\n          label: 'Message',\r\n          name: 'message',\r\n        },\r\n        {\r\n          label: 'Created on',\r\n          name: 'createdAt',\r\n        },\r\n        {\r\n          name: \"action\",\r\n          label: \" Action \",\r\n          options: {\r\n            filter: false,\r\n            sort: false,\r\n            download: false,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              let i = tableMeta.rowIndex;\r\n              return (\r\n                <div className=\"actionBtnGroup\"><Button className=\"btn-delete btn-danger\" size='sm' onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteEnquiryItem(i) };}} title=\"Delete Inquiry\"><i className=\"fa fa-trash\"></i> </Button></div>\r\n              );\r\n            }\r\n          }\r\n        },\r\n    ];\r\n    \r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'contact-enquiry-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Contact Inquiries\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnquiryListData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, Col, Row, Button, Input, FormGroup, Label } from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport EnquiryData from './EnquiryListData';\r\nimport Loader from '../../../Loader/Loader';\r\n\r\nclass EnquiryListing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      enquiryLists: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      filterItem: { filterContactPerson: '', filterPhoneNumber:'', filterFrom:'',  filterTo:'' },    \r\n    } \r\n    this.handleDeleteEnquiry = this.handleDeleteEnquiry.bind(this);\r\n    this.filterEnquiryList = this.filterEnquiryList.bind(this);\r\n  }\r\n\r\n  // Fetch the Enquiry List\r\n  componentDidMount() {     \r\n    this.enquiryLists({});   \r\n  }\r\n\r\n  /* Enquiry List API */\r\n  enquiryLists(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterContactPerson !== undefined && filterItem.filterContactPerson !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&contactPerson=\"+filterItem.filterContactPerson: \"&contactPerson=\"+filterItem.filterContactPerson;\r\n    \r\n      if(filterItem.filterPhoneNumber !== undefined && filterItem.filterPhoneNumber !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&phoneNumber=\"+filterItem.filterPhoneNumber: \"&phoneNumber=\"+filterItem.filterContactPerson;\r\n    \r\n      if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('common/contact-us'+filterQuery)\r\n        .then( res => {       \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n          this.setState({loading:false, enquiryLists: res.data.data});              \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            //this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  } \r\n  \r\n  handleDeleteEnquiry(rowIndex){\r\n    const rowInfo = this.state.enquiryLists[rowIndex];\r\n    const delFormData = {\r\n      \"id\": rowInfo.id,\r\n    };\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( `common/contact-us/`, delFormData)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.enquiryLists();\r\n        } )\r\n        .catch( err => {                   \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }  \r\n\r\n  filterEnquiryList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.enquiryLists(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filter_organization_id: '', filterFrom:'',  filterTo:'', filterStatus:'' }\r\n    });\r\n    this.enquiryLists();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    const { enquiryLists, loading, filterItem } = this.state;\r\n       \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"user-dashboard\">\r\n        {loaderElement}\r\n        <Card className=\"vd-card \">\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className=\"filterRow\">                      \r\n                  <Col md={\"3\"} className=\"pl-3\">\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterContactPerson\">Contact Person</Label>            \r\n                      <Input type=\"text\" placeholder=\"Contact person\" id=\"filterContactPerson\" name=\"filterContactPerson\" value={filterItem.filterContactPerson} onChange={this.changeFilterHandler} />\r\n                    </FormGroup> \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterEmail\">Email ID</Label>            \r\n                      <Input type=\"email\" placeholder=\"Phone number\" id=\"filterEmail\" name=\"filterEmail\" value={filterItem.filterEmail} onChange={this.changeFilterHandler} />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterPhoneNumber\">Phone no.</Label>            \r\n                      <Input type=\"text\" placeholder=\"Phone number\" id=\"filterPhoneNumber\" name=\"filterPhoneNumber\" value={filterItem.filterPhoneNumber} onChange={this.changeFilterHandler} />\r\n                    </FormGroup> \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date From</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date To</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"1\"} className=\"p-0\">\r\n                    <FormGroup> \r\n                      <Label>&nbsp;</Label><br />\r\n                      <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEnquiryList} title=\"Filter Inquiries\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                      <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Clear Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              \r\n              <Col md={12}>\r\n                <EnquiryData data={enquiryLists} deleteEnquiryAction={this.handleDeleteEnquiry} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>\r\n            </Row> \r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default EnquiryListing;","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass SubscriptionData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Store Info */\r\n  editSubscriptionItem(rowIndex){    \r\n    this.props.editSubscriptionAction(rowIndex);\r\n  }\r\n\r\n  deleteSubscriptionItem(rowIndex){    \r\n    this.props.deleteSubscriptionAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    \r\n    let rowsItem = [];\r\n    for(const [i, plan] of this.props.data.entries()){\r\n      let pmon = plan.planVariation[0];\r\n      let pyear = plan.planVariation[1];\r\n      let orgInfo = {   \r\n        planId: plan.planId,      \r\n        planName: plan.planName,        \r\n        amount: ( pmon!==undefined ? '$'+pmon.amount+' Monthly, $'+pyear.amount+' Yearly' : '' ),\r\n        userAccess: plan.advertisementAccess || \" \",      \r\n        description: plan.description || \" \",\r\n        status: plan.status ? 'Active' : 'Inactive',   \r\n        action: <p><button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n          this.editSubscriptionItem(i)} title=\"Edit Subscription\"><i className=\"fa fa-pencil\"></i> </button></p>,       \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Plan Name',\r\n        name: 'planName',\r\n      },     \r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'No. of listing',\r\n        name: 'userAccess',\r\n      },\r\n      {\r\n        label: 'Description',\r\n        name: 'description',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: false,\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Plan List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubscriptionData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, FormFeedback, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport SubscriptionData from './SubscriptionData';\r\nimport './Subscription.css'\r\n\r\nclass AdvertiserSubscription extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      planList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formField: { plan_name: '', monthlyAmount: '', yearlyAmount: '', plan_type:0, advertisementAccess: '', description: '', isTrail: false, trail_days: 0},\r\n      formErrors: { plan_name: '', monthlyAmount: '', yearlyAmount: '', plan_type:0, advertisementAccess: '', description: '', error: ''},\r\n      formValid: true,     \r\n    } \r\n    this.handleEditSubscription = this.handleEditSubscription.bind(this);\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    \r\n  }\r\n  // Fetch the Plan List\r\n  componentDidMount() {     \r\n    this.planList();\r\n  }\r\n  /*Plan List API*/\r\n  planList(filterItem = {}) {\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('subscription?planType=0')\r\n        .then( res => {\r\n          \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, planList: res.data.data});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  \r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    if(this.validateForm() === false)\r\n      return false;\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      console.log(formInputField);\r\n      const formData = {       \r\n        \"planType\": 0,\r\n        \"planName\": formInputField.plan_name, \r\n        \"planVariation\": [{amount: Number(formInputField.monthlyAmount) , duration:1}, {amount: Number(formInputField.yearlyAmount), duration:4 } ],\r\n        \"advertisementAccess\": Number(formInputField.advertisementAccess), \r\n        \"description\": formInputField.description\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        const planInfo = this.state.planList[rowIndex];\r\n        commonService.putAPIWithAccessToken('subscription/'+planInfo.planId, formData)\r\n        .then( res => {         \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.planList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n      else{\r\n        commonService.postAPIWithAccessToken('subscription', formData)\r\n        .then( res => {\r\n         \r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.planList();\r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField; \r\n    formField[name] = value;\r\n    const isValid = event.target.validity.valid;\r\n    const validationMessage = event.target.validationMessage;    \r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value, isValid, validationMessage) });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  validateField(fieldName, value, isValid, errorMessage) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    if(!isValid)\r\n        fieldValidationErrors[fieldName] = errorMessage;\r\n    else\r\n        fieldValidationErrors[fieldName] = '';\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    return (formErrors.plan_name === \"\" && formField.plan_name !== \"\" && formErrors.monthlyAmount === \"\" && formField.monthlyAmount !== \"\"\r\n        && formErrors.advertisementAccess === \"\" && formField.advertisementAccess !== \"\"\r\n        && formErrors.description === \"\" && formField.description !== \"\"\r\n        && formErrors.yearlyAmount === \"\" && formField.yearlyAmount !== \"\"\r\n        ) \r\n      ? true : false;\r\n  }\r\n  \r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: true,\r\n      changeStatusBtn: '',\r\n      formField: { plan_name: '', monthlyAmount: '', yearlyAmount: '', duration: '', plan_type:'', advertisementAccess: '', description: '', isTrail: false, trail_days: 0},\r\n      formErrors: { plan_name: '', monthlyAmount: '', yearlyAmount: '', duration: '', plan_type:'', advertisementAccess: '', description: '', error: ''},\r\n    });\r\n  }\r\n  /* Edit Subscription*/\r\n  handleEditSubscription(rowIndex){\r\n      const planInfo = this.state.planList[rowIndex];\r\n      let pmon = planInfo.planVariation[0];\r\n      let pyear = planInfo.planVariation[1];\r\n      \r\n      const formField = {\r\n        planId: planInfo.planId, \r\n        plan_name: planInfo.planName, \r\n        monthlyAmount: ( pmon!==undefined ? pmon.amount : '' ), \r\n        yearlyAmount: ( pyear!==undefined ? pyear.amount : '' ), \r\n        advertisementAccess: planInfo.advertisementAccess, \r\n        description: planInfo.description };\r\n      const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( planInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n        this.changeSubscriptionStatus(planInfo.planId, planInfo.status )} >{ ( planInfo.status ? 'Change to Inactive' : 'Change to Active' )}</Button>\r\n\r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n  /* Change Subscription status*/\r\n  changeSubscriptionStatus(planId,status){\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      const formData = {\r\n        \"status\": (status ? false : true ),\r\n      };\r\n      commonService.putAPIWithAccessToken('subscription/update-status/'+planId, formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          this.setState({ modal: false, loading: false});\r\n          toast.success(res.data.message);\r\n          this.planList();        \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } );\r\n    \r\n  }\r\n  \r\n  render() {\r\n\r\n    const { planList, loading, modal, formProccessing, formErrors, changeStatusBtn } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n   \r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Advertiser  Plan List</strong> <Button color=\"button\" className=\"categoryAdd btn-primary\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New</Button>\r\n              </CardHeader>\r\n              <CardBody>                \r\n                <Row>                 \r\n                  <Col md={12}>\r\n                    <SubscriptionData data={planList} editSubscriptionAction={this.handleEditSubscription} deleteSubscriptionAction={this.handleDeleteSubscription} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.toggle}>Plan </ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>              \r\n              <Row>                \r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"plan_name\">Plan Name *</Label>\r\n                    <Input type=\"text\" placeholder=\"Plan Name\" id=\"plan_name\" name=\"plan_name\" value={this.state.formField.plan_name} onChange={this.changeHandler} required />\r\n                    <FormFeedback>{formErrors.plan_name}</FormFeedback>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"advertisementAccess\">Number of Ads *</Label>            \r\n                    <Input type=\"text\" placeholder=\"Number of Advertisement\" pattern=\"[0-9]*\" id=\"advertisementAccess\" name=\"advertisementAccess\" value={this.state.formField.advertisementAccess} onChange={this.changeHandler} required />\r\n                    <FormFeedback>{formErrors.advertisementAccess}</FormFeedback>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"monthlyAmount\">Monthly Amount ($) *</Label>            \r\n                    <Input type=\"text\" placeholder=\"Monthly Amount *\" id=\"monthlyAmount\" name=\"monthlyAmount\" value={this.state.formField.monthlyAmount} onChange={this.changeHandler} required />\r\n                    <FormFeedback>{formErrors.monthlyAmount}</FormFeedback>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"yearlyAmount\">Yearly Amount ($) *</Label>            \r\n                    <Input type=\"text\" placeholder=\"Yearly Amount *\" id=\"yearlyAmount\" name=\"yearlyAmount\" value={this.state.formField.yearlyAmount} onChange={this.changeHandler} required />\r\n                    <FormFeedback>{formErrors.yearlyAmount}</FormFeedback>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"12\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"description\">Plan Description</Label>            \r\n                    <Input type=\"textarea\" placeholder=\"Plan Description\" name=\"description\" value={this.state.formField.description} onChange={this.changeHandler} required />\r\n                    <FormFeedback>{formErrors.description}</FormFeedback>\r\n                  </FormGroup>  \r\n                </Col>\r\n                \r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              {changeStatusBtn}\r\n              <Button color=\"primary\" disabled={!this.state.formValid || formProccessing} type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default AdvertiserSubscription;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport { FormErrors } from '../../Formerrors/Formerrors';\r\n\r\nimport './ChangePassword.css'\r\n\r\nclass ChangePassword extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      formField: {old_password: '', new_password: '', confirm_password: ''},\r\n      formErrors: {old_password: '', new_password: '', confirm_password: '', error: ''},\r\n      formValid: false,\r\n      loading: false,\r\n    };\r\n    this.submitHandler = this.submitHandler.bind(this);\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { loading: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"oldPassword\": formInputField.old_password,\r\n        \"newPassword\": formInputField.new_password\r\n      };\r\n      \r\n      commonService.postAPIWithAccessToken('auth/change-password', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }           \r\n          this.setState({ loading: false, formField: {old_password: '', new_password: '', confirm_password: ''},\r\n      formErrors: {old_password: '', new_password: '', confirm_password: '', error: ''}, formValid: false});\r\n          toast.success(res.data.message);\r\n          \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n    \r\n  };\r\n\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n  \r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {         \r\n      case 'old_password':        \r\n        fieldValidationErrors.old_password = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'new_password':        \r\n        fieldValidationErrors.new_password = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'confirm_password':        \r\n        fieldValidationErrors.confirm_password = (value !== '') ? '' : ' is required';\r\n        break;               \r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {   \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    if(formField.new_password !== formField.confirm_password) {\r\n      formErrors.error = \"New password and confirm password deos not match!\";\r\n      this.setState({formValid: false, formErrors: formErrors});\r\n      return \r\n    }\r\n    this.setState({formValid: \r\n        (formErrors.confirm_password === \"\"  && formErrors.new_password === \"\" && formErrors.old_password === \"\" && formField.old_password !== \"\" && formField.new_password !== \"\" && formField.confirm_password !== \"\" ) \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, formField, formValid } = this.state;\r\n    let loaderElement = '';\r\n    if(loading)\r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row className=\"justify-content-center\">\r\n          <Col lg={5}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Change Password</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                \r\n                {loaderElement}\r\n                <Form onSubmit={this.submitHandler} noValidate>                  \r\n                  <FormErrors formErrors={this.state.formErrors} />\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"old_password\">Old Password</Label>            \r\n                    <Input value={formField.old_password} name=\"old_password\" onChange={this.changeHandler} type=\"password\" id=\"old_password\" label=\"Old Password*\" required />\r\n                  </FormGroup>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"new_password\">New Password</Label>            \r\n                    <Input value={formField.new_password} name=\"new_password\" onChange={this.changeHandler} type=\"password\" id=\"new_password\" label=\"New Password*\" required />\r\n                  </FormGroup>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"confirm_password\">Confirm Password</Label>            \r\n                    <Input value={formField.confirm_password} name=\"confirm_password\" onChange={this.changeHandler} type=\"password\" id=\"confirm_password\" label=\"Confirm Password*\" required />\r\n                  </FormGroup>\r\n                  \r\n                \r\n                  <Button color=\"primary\"  disabled={!formValid} type=\"submit\">Update</Button>\r\n                  \r\n                </Form>\r\n                  \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>        \r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass TransactionData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Row Info */\r\n  editDataItem(rowIndex){    \r\n    this.props.editDataAction(rowIndex);\r\n  }\r\n \r\n\r\n  render() {\r\n    \r\n    let rowsItem = []; \r\n   \r\n    for(const [i, enquiry] of this.props.data.entries()){\r\n      let resInfo = {\r\n        userName: enquiry.userName,\r\n        subscriberId: enquiry.transactionId,\r\n        planName: enquiry.planName,\r\n        invoiceId: enquiry.invoiceId,\r\n        amount: '$'+enquiry.amount,\r\n        status: ( enquiry.isPaid ? \"Success\" : \"Failed\"),   \r\n        createdAt: (new Date(enquiry.createdAt)).toLocaleDateString(\"en-US\"),\r\n        indexVal: i,\r\n      }      \r\n      rowsItem.push(resInfo);\r\n    }\r\n\r\n    const columns = [ \r\n        { label: 'User', name: 'userName' },\r\n        { label: 'Transaction ID', name: 'subscriberId' },\r\n        { label: 'Invoice ID', name: 'invoiceId' },\r\n        { label: 'Amount', name: 'amount' },\r\n        { label: 'Status', name: 'status' },\r\n        { label: 'Created on', name: 'createdAt' },\r\n        /*{\r\n          name: \"action\",\r\n          label: \"Action\",\r\n          options: {\r\n            filter: false,\r\n            sort: false,\r\n            download: false,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              let i = tableMeta.rowIndex;\r\n              return (\r\n                <Button className=\"btn-edit btn-info\" size='sm' disabled={this.state.buttonProcessing} onClick={() => \r\n                  this.editDataItem(i)}><i className=\"fa fa-eye\"></i> </Button>\r\n              );\r\n            }\r\n          }\r\n        },*/\r\n    ];\r\n\r\n    \r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'transaction-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Processing........\" : \"Sorry, no matching records found\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Transaction List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionData;","import React, { Component } from 'react';\r\nimport { \r\n  Card, CardBody, Col, Row, Form, Input, FormGroup, Label,\r\n  Modal, ModalHeader, ModalBody\r\n} from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport ReviewData from './UserTransactionData';\r\nimport Loader from '../../Loader/Loader';\r\n\r\n\r\nclass TransactionLists extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      dataLists: [],\r\n      formProccessing: false,\r\n      loading: true,\r\n      rowIndex: -1,\r\n      formField: { transactionProfileId: '', amount:'', planName: '', planTypeLabel:'', planDuration:'', status:'', startDate:'', endDate:'', createdAt:'' },\r\n    } \r\n    this.handleEditData = this.handleEditData.bind(this);\r\n  }\r\n\r\n  componentDidMount() {     \r\n    const { match : { params } } = this.props;\r\n    let foodtruckId = '';\r\n    if(params.foodtruckId!== undefined){\r\n      foodtruckId = params.foodtruckId;\r\n    }\r\n    this.itemLists({filter_foodTruckId: foodtruckId});\r\n  }\r\n\r\n  /* Transaction List API */\r\n  itemLists(filterItem = {}) {\r\n    let strWalkQuery = \"?pageSize=10000\";\r\n    if(filterItem.filter_foodTruckId !== undefined && filterItem.filter_foodTruckId !== \"\" ) \r\n      strWalkQuery += (strWalkQuery !==\"\" ) ? \"/\"+filterItem.filter_foodTruckId : \"/\"+filterItem.filter_foodTruckId;\r\n    \r\n      this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('statistics/overall-payment-history/'+strWalkQuery)\r\n        .then( res => {\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, dataLists: res.data.data.listItem});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  \r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formField: {  transactionProfileId: '', planDuration: '', planTypeLabel:'', amount:'', status:'', startDate:'', endDate:'', createdAt:'' },\r\n    });\r\n  }\r\n\r\n  /* To edit review details/ change status */\r\n  handleEditData(rowIndex){\r\n      const rowData = this.state.dataLists[rowIndex];\r\n      const formField = {\r\n          subscriberId: rowData.subscriberId,\r\n          transactionProfileId: rowData.transactionProfileId,\r\n          planDuration: rowData.planDuration,\r\n          amount: '$'+rowData.amount,\r\n          planName: rowData.planName,\r\n          planTypeLabel: rowData.planTypeLabel,\r\n          startDate: (new Date(rowData.startDate)).toLocaleDateString(\"en-US\"),\r\n          endDate: (new Date(rowData.endDate)).toLocaleDateString(\"en-US\"),\r\n          createdAt: (new Date(rowData.createdAt)).toLocaleDateString(\"en-US\"),\r\n          status: rowData.statusLabel,\r\n      }\r\n      this.setState({rowIndex: rowIndex, formField: formField, modal: true });\r\n  }\r\n\r\n  \r\n  render() {\r\n    const { dataLists, loading, modal, formField  } = this.state;\r\n        \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"user-dashboard\">\r\n        {loaderElement}\r\n        <Card>\r\n          <CardBody>\r\n            \r\n            <Row>\r\n              \r\n              <Col md={12}>\r\n                <ReviewData data={dataLists} editDataAction={this.handleEditData} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>\r\n            </Row> \r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} size=\"lg\" className=\"full-width-modal-section equiry-modal\">\r\n          <ModalHeader toggle={this.toggle}>Transaction Details</ModalHeader>\r\n          <Form noValidate className=\"texQueForm\">\r\n            <ModalBody>\r\n              \r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"subscriberId\">Subscription Id</Label>            \r\n                    <Input type=\"text\" placeholder=\"Subscriber Id\" id=\"subscriberId\" name=\"subscriberId\" value={formField.transactionProfileId} disabled />\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planTypeLabel\">Plan Type</Label>            \r\n                    <Input type=\"text\" placeholder=\"Transaction Type\" id=\"planTypeLabel\" value={formField.planTypeLabel} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"amount\">Amount</Label>            \r\n                    <Input type=\"text\" id=\"amount\" name=\"amount\" value={formField.amount} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planDuration\">Duration</Label>            \r\n                    <Input type=\"text\" placeholder=\"Transaction ProfileId\" id=\"planDuration\" value={formField.planDuration} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"startDate\">Start Date</Label>            \r\n                    <Input type=\"text\" id=\"startDate\" name=\"startDate\" value={formField.startDate} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"endDate\">End Date</Label>            \r\n                    <Input type=\"text\" id=\"endDate\" name=\"endDate\" value={formField.endDate} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"createdAt\">Created On</Label>            \r\n                    <Input type=\"text\" id=\"createdAt\" name=\"createdAt\" value={formField.createdAt} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"status\">Status</Label>            \r\n                    <Input type=\"text\" name=\"status\" id=\"status\" value={ formField.status } disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n              </Row>\r\n            </ModalBody>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n  \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default TransactionLists;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass SubscribedAdvertiserListData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editUserRow(rowIndex){    \r\n    this.props.editUserAction(rowIndex);\r\n  }\r\n  deleteUserRow(rowIndex){    \r\n    this.props.deleteUserAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];    \r\n    for(const [i, userData] of this.props.data.entries()){\r\n      console.log(i);\r\n      let userInfo = {\r\n        userName: userData.userName,\r\n        email: userData.email,\r\n        phoneNumber: userData.phoneNumber,\r\n        planName: userData.planName || \" \",\r\n        transactionProfileId: userData.transactionProfileId,\r\n        status: userData.statusLabel,\r\n        amount: '$'+userData.amount,\r\n        startDate: (new Date(userData.startDate)).toLocaleDateString(\"en-US\"),\r\n        endDate: (new Date(userData.endDate)).toLocaleDateString(\"en-US\")\r\n      }      \r\n      rowsItem.push(userInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'Advertiser Name',\r\n        name: 'userName',\r\n      },\r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n        options: { display: false}\r\n      },\r\n      {\r\n        label: 'Plan',\r\n        name: 'planName',\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'Subscription ID',\r\n        name: 'transactionProfileId',\r\n        options: { display: false}\r\n      },\r\n      {\r\n        label: 'Start Date',\r\n        name: 'startDate',\r\n      },\r\n      {\r\n        label: 'End Date',\r\n        name: 'endDate',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editUserRow(i)} title=\"View Subscriber Info\"><i className=\"fa fa-eye\"></i> </button>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'texque-subscribed-advertiser-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Subscribed Advertiser List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubscribedAdvertiserListData;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport UsersData from './SubscribedAdvertiserListData';\r\n\r\nclass SubscribedAdvertiserList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      userList: [],\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formField: {profileId:'', userName: '', transactionProfileId: '', amount: '', planName: '', planDuration: '', startDate:'', endDate:'', status:'' },\r\n    }\r\n\r\n    this.handleEditUser = this.handleEditUser.bind(this);\r\n  }\r\n  componentDidMount() { \r\n    this.userList();\r\n  }\r\n\r\n  /*User List API*/\r\n  userList() {\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken(`statistics/advertiser-list`)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }\r\n          this.setState({loading:false, userList: res.data.data.listItem});\r\n        } )\r\n        .catch( err => {   \r\n               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message); \r\n          }  \r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* Edit User*/\r\n  handleEditUser(rowIndex){\r\n    const userInfo = this.state.userList[rowIndex];\r\n    const formField = {\r\n      profileId:userInfo.profileId,\r\n      userName: userInfo.userName, \r\n      transactionProfileId: userInfo.transactionProfileId, \r\n      amount: userInfo.amount, \r\n      planName: userInfo.planName, \r\n      planDuration: userInfo.planDuration,\r\n      startDate: userInfo.startDate,\r\n      endDate: userInfo.endDate,\r\n      status: userInfo.statusLabel\r\n    };\r\n\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( userInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(userInfo.profileId, userInfo.status )} >{ ( userInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formField: {profileId:'', userName: '', transactionProfileId: '', amount: '', planName: '', planDuration: '', startDate:'', endDate:'', status:'' },\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userList, loading, modal } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading) \r\n      loaderElement = <Loader />\r\n\r\n      //const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <ToastContainer />\r\n                {loaderElement}\r\n                <UsersData data={userList} editUserAction={this.handleEditUser} deleteUserAction={this.handleDeleteUser} dataTableLoadingStatus = {this.state.loading} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>Subscribed Advertiser Info</ModalHeader>\r\n          <Form noValidate>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"userName\">Advertiser Name</Label>            \r\n                    <Input type=\"text\" id=\"userName\" name=\"userName\" value={this.state.formField.userName} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"transactionProfileId\">Subscription ID</Label>            \r\n                    <Input type=\"text\" id=\"transactionProfileId\" name=\"transactionProfileId\" value={this.state.formField.transactionProfileId} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planName\">Plan Name</Label>            \r\n                    <Input type=\"text\" id=\"planName\" name=\"planName\" value={this.state.formField.planName} disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planDuration\">Plan Duration</Label>            \r\n                    <Input type=\"text\" id=\"planDuration\" name=\"planDuration\" value={this.state.formField.planDuration} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"amount\">Amount</Label>            \r\n                    <Input type=\"text\" id=\"amount\" name=\"amount\" value={`$`+this.state.formField.amount} disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"status\">Status</Label>            \r\n                    <Input type=\"text\" id=\"status\" name=\"status\" value={this.state.formField.status} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"startDate\">Start Date</Label>            \r\n                    <Input type=\"text\" id=\"startDate\" name=\"startDate\" value={(new Date(this.state.formField.startDate)).toLocaleDateString(\"en-US\") } disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"endDate\">End Date</Label>            \r\n                    <Input type=\"text\" id=\"endDate\" name=\"endDate\" value={(new Date(this.state.formField.endDate)).toLocaleDateString(\"en-US\") } disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Close</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubscribedAdvertiserList;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass SubscribedOwnerListData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: [],\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  \r\n  editUserRow(rowIndex){    \r\n    this.props.editUserAction(rowIndex);\r\n  }\r\n  deleteUserRow(rowIndex){    \r\n    this.props.deleteUserAction(rowIndex);\r\n  }\r\n  \r\n  render() {\r\n   \r\n    let rowsItem = [];    \r\n    for(const [i, userData] of this.props.data.entries()){\r\n      console.log(i);\r\n      let userInfo = {\r\n        userName: userData.userName,\r\n        email: userData.email,\r\n        phoneNumber: userData.phoneNumber,\r\n        planName: userData.planName || \" \",\r\n        transactionProfileId: userData.transactionProfileId,\r\n        status: userData.statusLabel,\r\n        amount: '$'+userData.amount,\r\n        startDate: (new Date(userData.startDate)).toLocaleDateString(\"en-US\"),\r\n        endDate: (new Date(userData.endDate)).toLocaleDateString(\"en-US\"),\r\n      }      \r\n      rowsItem.push(userInfo);\r\n    }      \r\n    const columns = [      \r\n      {\r\n        label: 'Owner Name',\r\n        name: 'userName',\r\n      },\r\n      {\r\n        label: 'Email',\r\n        name: 'email',\r\n      },\r\n      {\r\n        label: 'Phone no.',\r\n        name: 'phoneNumber',\r\n        options: { display: false}\r\n      },\r\n      {\r\n        label: 'Plan',\r\n        name: 'planName',\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'Subscription ID',\r\n        name: 'transactionProfileId',\r\n        options: { display: false}\r\n      },\r\n      {\r\n        label: 'Start Date',\r\n        name: 'startDate',\r\n      },\r\n      {\r\n        label: 'End Date',\r\n        name: 'endDate',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editUserRow(i)} title=\"View Subscriber Info\"><i className=\"fa fa-eye\"></i> </button>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'texque-subscribed-owner-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Subscribed Food Truck Owner List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubscribedOwnerListData;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\n\r\nimport Loader from '../../Loader/Loader';\r\nimport UsersData from './SubscribedOwnerListData';\r\n\r\nclass SubscribedOwnerList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      userList: [],\r\n      rowIndex: -1,\r\n      changeStatusBtn:'',\r\n      formField: {profileId:'', userName: '', transactionProfileId: '', amount: '', planName: '', planDuration: '', startDate:'', endDate:'', status:'' },\r\n    }\r\n\r\n    this.handleEditUser = this.handleEditUser.bind(this);\r\n  }\r\n  componentDidMount() { \r\n    this.userList();\r\n  }\r\n\r\n  /*User List API*/\r\n  userList() {\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken(`statistics/subscriber-list`)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( {  loading: false } );\r\n            toast.error(res.data.message);    \r\n            return;\r\n          }\r\n          this.setState({loading:false, userList: res.data.data.listItem});\r\n        } )\r\n        .catch( err => {   \r\n               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message); \r\n          }  \r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* Edit User*/\r\n  handleEditUser(rowIndex){\r\n    const userInfo = this.state.userList[rowIndex];\r\n    const formField = {\r\n      profileId:userInfo.profileId,\r\n      userName: userInfo.userName, \r\n      transactionProfileId: userInfo.transactionProfileId, \r\n      amount: userInfo.amount, \r\n      planName: userInfo.planName, \r\n      planDuration: userInfo.planDuration,\r\n      startDate: userInfo.startDate,\r\n      endDate: userInfo.endDate,\r\n      status: userInfo.statusLabel\r\n    };\r\n\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( userInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(userInfo.profileId, userInfo.status )} >{ ( userInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      changeStatusBtn: '',\r\n      formField: {profileId:'', userName: '', transactionProfileId: '', amount: '', planName: '', planDuration: '', startDate:'', endDate:'', status:'' },\r\n    });\r\n  }\r\n\r\n  render() {\r\n\r\n    const { userList, loading, modal } = this.state;     \r\n    let loaderElement = '';\r\n    if(loading) \r\n      loaderElement = <Loader />\r\n\r\n      //const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardBody>\r\n                <ToastContainer />\r\n                {loaderElement}\r\n                <UsersData data={userList} editUserAction={this.handleEditUser} deleteUserAction={this.handleDeleteUser} dataTableLoadingStatus = {this.state.loading} />\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section organization-modal\">\r\n          <ModalHeader toggle={this.toggle}>Subscribed Food Truck Owner Info</ModalHeader>\r\n          <Form noValidate>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"userName\">Owner Name</Label>            \r\n                    <Input type=\"text\" id=\"userName\" name=\"userName\" value={this.state.formField.userName} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"transactionProfileId\">Subscription ID</Label>            \r\n                    <Input type=\"text\" id=\"transactionProfileId\" name=\"transactionProfileId\" value={this.state.formField.transactionProfileId} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planName\">Plan Name</Label>            \r\n                    <Input type=\"text\" id=\"planName\" name=\"planName\" value={this.state.formField.planName} disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"planDuration\">Plan Duration</Label>            \r\n                    <Input type=\"text\" id=\"planDuration\" name=\"planDuration\" value={this.state.formField.planDuration} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"amount\">Amount</Label>            \r\n                    <Input type=\"text\" id=\"amount\" name=\"amount\" value={`$`+this.state.formField.amount} disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"status\">Status</Label>            \r\n                    <Input type=\"text\" id=\"status\" name=\"status\" value={this.state.formField.status} disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"startDate\">Start Date</Label>            \r\n                    <Input type=\"text\" id=\"startDate\" name=\"startDate\" value={(new Date(this.state.formField.startDate)).toLocaleDateString(\"en-US\") } disabled/>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>  \r\n                  <FormGroup> \r\n                    <Label htmlFor=\"endDate\">End Date</Label>            \r\n                    <Input type=\"text\" id=\"endDate\" name=\"endDate\" value={(new Date(this.state.formField.endDate)).toLocaleDateString(\"en-US\") } disabled />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>           \r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Close</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default SubscribedOwnerList;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass VaApplicationData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n\r\n  deleteItem(rowIndex){    \r\n    this.props.deleteItemAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    let count=0;\r\n    let rowsItem = [];\r\n    for(const [i, item] of this.props.data.entries()){\r\n      let itemInfo = {   \r\n        vaApplicationId: item.vaApplicationId,\r\n        userName: item.firstName+' '+item.lastName,      \r\n        email: item.email,\r\n        mobileNumber: item.mobileNumber || \" \",\r\n        skillSet1: item.skillSet1 + (item.rateSkill1 !=='' ? \" (\"+item.rateSkill1+\")\" :''  ) || \" \",\r\n        skillSet2: item.skillSet2 + (item.rateSkill2 !=='' ? \" (\"+item.rateSkill2+\")\" :''  ) || \" \",\r\n        skillSet3: item.skillSet3 + (item.rateSkill3 !=='' ? \" (\"+item.rateSkill3+\")\" :''  ) || \" \",\r\n        createdAt: (new Date(item.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: ( item.status === 1) ? \"Pending\" : ((item.status === 2)  ? \"Approved\" : \"Rejected\")\r\n      }      \r\n      rowsItem.push(itemInfo);\r\n      count = count+i;\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Name',\r\n        name: 'userName',\r\n      },     \r\n      { label: 'Email', name: 'email' },\r\n      { label: 'Mobile no.', name: 'mobileNumber'},\r\n      { label: 'Skill Set 1 (Rating)', name: 'skillSet1'},\r\n      { label: 'Skill Set 2 (Rating)', name: 'skillSet2'},\r\n      { label: 'Skill Set 3 (Rating)', name: 'skillSet3'},\r\n      { label: 'Status', name: 'status'},\r\n      { label: 'Created on', name: 'createdAt'},\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div className=\"actionBtnGroup\"><Link className=\"btn-edit\" disabled={this.state.buttonProcessing} to={`/admin/va-application/${rowsItem[i].vaApplicationId}`}><i className=\"fa fa-pencil\"></i> </Link>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if(window.confirm('Are you sure you want to delete this record?')){ this.deleteItem(i) };}} ><i className=\"fa fa-trash\"></i></button></div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-application-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"VA Application List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VaApplicationData;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Input, FormGroup, Label } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport Loader from '../../Loader/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport VaApplicationData from './VaApplicationData';\r\n\r\nclass ApplicationList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      itemList: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      filterItem: { filterApplicationId: '', filterFirstName: '', filterEmail: '', filterSkill:'', filterRating:'', filterFrom:'',  filterTo:'', filterStatus:'' },\r\n    } \r\n    this.handleDeleteRecord = this.handleDeleteRecord.bind(this);\r\n    this.filterItemList = this.filterItemList.bind(this);\r\n  }\r\n\r\n  componentDidMount() { \r\n    this.itemList({});\r\n  }\r\n  /*VA Application List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterFirstName !== undefined && filterItem.filterFirstName !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&firstName=\"+filterItem.filterFirstName: \"&firstName=\"+filterItem.filterFirstName;\r\n    if(filterItem.filterEmail !== undefined && filterItem.filterEmail !== \"\" ) \r\n     filterQuery += (filterQuery !==\"\" ) ? \"&email=\"+filterItem.filterEmail: \"&email=\"+filterItem.filterEmail;\r\n    if(filterItem.filterSkill !== undefined && filterItem.filterSkill !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&filterSkill=\"+filterItem.filterSkill: \"&filterSkill=\"+filterItem.filterSkill;\r\n    if(filterItem.filterRating !== undefined && filterItem.filterRating !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&filterRating=\"+filterItem.filterRating: \"&filterRating=\"+filterItem.filterRating;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-application'+filterQuery)\r\n        .then( res => {\r\n           \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n\r\n          this.setState({loading:false, itemList: res.data.data.requestList});     \r\n         \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  filterItemList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  \r\n  /* Delete Food Truck*/\r\n  handleDeleteRecord(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"vaApplicationId\":itemInfo.vaApplicationId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'va-application',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterFirstName: '', filterEmail: '', filterSkill:'', filterRating:'', filterFrom:'',  filterTo:'', filterStatus:'' }\r\n    });\r\n    this.itemList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, itemList, filterItem } = this.state;\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Application List</strong>\r\n                <Link className=\"categoryAdd btn btn-sm btn-primary\" to=\"/admin/va-application/add-new-va\"><i className=\"fa fa-plus\"></i> Add New VA</Link>\r\n              </CardHeader>\r\n              <CardBody>\r\n                \r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterFirstName\">Name</Label>\r\n                          <Input type=\"text\" placeholder=\"Search by Name\" id=\"filterFirstName\" name=\"filterFirstName\" value={filterItem.filterFirstName} onChange={this.changeFilterHandler} />   \r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterEmail\">Search by Email</Label>            \r\n                          <Input type=\"text\" placeholder=\"Search by Email Address\" id=\"filterEmail\" name=\"filterEmail\" value={filterItem.filterEmail} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterSkill\">Skill</Label>            \r\n                          <Input type=\"text\" id=\"filterSkill\" name=\"filterSkill\" value={filterItem.filterSkill} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterRating\">Rating</Label>            \r\n                          <Input type=\"number\" min=\"1\" max=\"10\" placeholder=\"\" id=\"filterRating\" name=\"filterRating\" value={filterItem.filterRating} onChange={this.changeFilterHandler} />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                         <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"2\">Approved</option>\r\n                            <option value=\"1\">Pending</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList} title=\"Filter VA Application\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Reset Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>             \r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <VaApplicationData data={itemList} deleteItemAction={this.handleDeleteRecord} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default ApplicationList;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Form, Button, Input, FormGroup, Label, FormFeedback, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport Loader from '../../Loader/Loader';\r\nimport \"./../../Pages/Frontend/BeAVirtdropVA/BecomeVirtdropPage.css\";\r\n\r\nconst skillArr = ['ECommerce','Data Entry and Research','SEO','Content Writing and Copywriting','Photo & Video Editing','Customer Support','Social Media Marketing and Management','Real Estate','Web Development and Graphics','Telesales and Telemarketing','Lead Generation','Others'];\r\n\r\n\r\nclass EditVaApplication extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      vaApplicationId: '',\r\n      requestStatus:'',\r\n      formField: { authId:'', firstName: '', lastName: '', email:'', mobileNumber:'', skypeID:'', socialMediaID:'', platform:'', portfolioLink:'', status:'', skillSet:'',skillSet1:'', skillSet2:'', skillSet3:'', rateSkill1:'', rateSkill2:'', rateSkill3:'', referenceName:'', referenceEmail:'', notes:'' },\r\n      applicationFiles: {audioFile:'', resumeCV:'', intentLetter:'', internetSpeedScreenshot:'' },\r\n      audioFile:'',\r\n      resumeCV:'',\r\n      intentLetter:'',\r\n      internetSpeedScreenshot:'',\r\n      successMessage: '',\r\n      dropDownOpen: '',\r\n      loading: false,\r\n      errors: {}\r\n    } \r\n    this.submitFormData = this.submitFormData.bind(this);\r\n  }\r\n\r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;    \r\n    if(params.vaApplicationId !== undefined && params.vaApplicationId !==\"\") {\r\n      this.setState({vaApplicationId: params.vaApplicationId});\r\n      this.getApplicationInfo(params.vaApplicationId);\r\n    }else \r\n      this.props.history.push('/admin/va-application');\r\n  }\r\n  \r\n  \r\n  getApplicationInfo(vaApplicationId){\r\n    this.setState( { loading: true}, () => {\r\n        commonService.getAPIWithAccessToken('va-application/'+vaApplicationId)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          const appDetail = res.data.data;\r\n          let formField = this.state.formField;\r\n          formField.firstName = appDetail.firstName;\r\n          formField.lastName = appDetail.lastName;\r\n          formField.email = appDetail.email;\r\n          formField.mobileNumber = appDetail.mobileNumber;\r\n          formField.skypeID = appDetail.skypeID;\r\n          formField.socialMediaID = appDetail.socialMediaID;\r\n          formField.platform = appDetail.platform;\r\n          formField.portfolioLink = appDetail.portfolioLink;\r\n          formField.status = appDetail.status;\r\n\r\n          formField.skillSet1 = appDetail.skillSet1;\r\n          formField.skillSet2 = appDetail.skillSet2;\r\n          formField.skillSet3 = appDetail.skillSet3;\r\n          formField.rateSkill1 = appDetail.rateSkill1;\r\n          formField.rateSkill2 = appDetail.rateSkill2;\r\n          formField.rateSkill3 = appDetail.rateSkill3;\r\n          formField.referenceName = appDetail.referenceName;\r\n          formField.referenceEmail = appDetail.referenceEmail;\r\n          formField.notes = appDetail.notes;\r\n         \r\n          let applicationFiles = this.state.applicationFiles;\r\n          applicationFiles.audioFileName = appDetail.audioFileName;\r\n          applicationFiles.audioFile = appDetail.audioFile;\r\n          applicationFiles.resumeCVName = appDetail.resumeCVName;\r\n          applicationFiles.resumeCV = appDetail.resumeCV;\r\n          applicationFiles.intentLetterName = appDetail.intentLetterName;\r\n          applicationFiles.intentLetter = appDetail.intentLetter;\r\n          applicationFiles.internetSpeedScreenshotName = appDetail.internetSpeedScreenshotName;\r\n          applicationFiles.internetSpeedScreenshot = appDetail.internetSpeedScreenshot;\r\n          \r\n          const statusBtn = <Button type=\"button\" size=\"sm\" className={ ( appDetail.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n            this.changeFoodTruckStatus(appDetail.vaApplicationId, appDetail.status )} >{ ( appDetail.status ? 'Un-Approve Application' : 'Approve Application' )}</Button>\r\n          \r\n          this.setState({ loading: false, appDetail: appDetail, changeStatusBtn:statusBtn, formValid: true, formField: formField, applicationFiles: applicationFiles});\r\n        } )\r\n        .catch( err => {               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }\r\n          else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n  }\r\n\r\n  submitFormData(e) {\r\n    e.preventDefault();\r\n    e.target.className += \" was-validated\";\r\n      if (this.validateForm()) {\r\n        const formInputField = this.state.formField;\r\n        const formData = new FormData();\r\n        formData.append('vaApplicationId', this.state.vaApplicationId);\r\n        formData.append('firstName', formInputField.firstName);\r\n        formData.append('lastName', formInputField.lastName);\r\n        formData.append('email', formInputField.email.toLowerCase());\r\n        formData.append('mobileNumber', formInputField.mobileNumber);\r\n        formData.append('skypeID', formInputField.skypeID);\r\n        formData.append('socialMediaID', formInputField.socialMediaID);\r\n        formData.append('platform', formInputField.platform);\r\n        formData.append('portfolioLink', formInputField.portfolioLink);\r\n        formData.append('status', formInputField.status);\r\n        \r\n        if(formInputField.skillSet1 !== \"\")\r\n          formData.append('skillSet1', formInputField.skillSet1);\r\n        if(formInputField.skillSet2 !== \"\")\r\n          formData.append('skillSet2', formInputField.skillSet2);\r\n        if(formInputField.skillSet3 !== \"\")\r\n          formData.append('skillSet3', formInputField.skillSet3);\r\n        if(formInputField.rateSkill1 !== \"\")\r\n          formData.append('rateSkill1', formInputField.rateSkill1);\r\n        if(formInputField.rateSkill2 !== \"\")\r\n          formData.append('rateSkill2', formInputField.rateSkill2);\r\n        if(formInputField.rateSkill3 !== \"\")\r\n          formData.append('rateSkill3', formInputField.rateSkill3);\r\n        if(formInputField.referenceName !== \"\")\r\n          formData.append('referenceName', formInputField.referenceName);\r\n        if(formInputField.referenceEmail !== \"\")\r\n          formData.append('referenceEmail', formInputField.referenceEmail);\r\n        if(formInputField.notes !== \"\")\r\n          formData.append('notes', formInputField.notes);\r\n        \r\n        if(this.state.audioFile !== \"\")\r\n          formData.append('audioFile', this.state.audioFile);\r\n        if(this.state.resumeCV !== \"\")\r\n          formData.append('resumeCV', this.state.resumeCV);\r\n        if(this.state.intentLetter !== \"\")\r\n          formData.append('intentLetter', this.state.intentLetter);\r\n        if(this.state.internetSpeedScreenshot !== \"\")\r\n          formData.append('internetSpeedScreenshot', this.state.internetSpeedScreenshot);\r\n        \r\n        this.setState( { loading: true }, () => {\r\n           commonService.putAPIWithAccessToken( `va-application`, formData )\r\n            .then( res => {\r\n              if ( undefined === res.data || !res.data.status ) {\r\n                this.setState( { loading: false } );\r\n                toast.error(res.data.message);\r\n                return;\r\n              }\r\n              this.setState({loading: false, successMessage:res.data.message, errors:'' });\r\n              this.props.history.push('/admin/va-application/');\r\n              toast.success(res.data.message);\r\n              window.scrollTo(0, 0);\r\n            } )\r\n            .catch( err => {\r\n              toast.error(err.message);\r\n              this.setState( { loading: false} );\r\n            } )\r\n        } )\r\n      }else{\r\n        //console.log(\"Outside validation area.\");\r\n      }\r\n  };\r\n \r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField, } );\r\n  };\r\n\r\n  handleSkillChange = e => {\r\n    const { name } = e.target;\r\n    this.setState(prevState => ({\r\n      checkboxes: {\r\n        ...prevState.checkboxes,\r\n        [name]: !prevState.checkboxes[name]\r\n      }\r\n    }));\r\n  };\r\n\r\n  handleAudioFileChange = (e) => { this.setState({ audioFile: e.target.files[0] }) };\r\n  handleResumeCVeChange = (e) => { this.setState({ resumeCV: e.target.files[0] }) };\r\n  handleIntentLetterChange = (e) => { this.setState({ intentLetter: e.target.files[0] }) };\r\n  handleInternetSpeedScreenshotChange = (e) => { this.setState({ internetSpeedScreenshot: e.target.files[0] }) };\r\n  \r\n\r\n  validateForm() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    let formField = this.state.formField;\r\n    if (!formField.firstName) {\r\n        formIsValid = false;\r\n        errors[\"firstName\"] = \"*Please enter first name.\";\r\n    }\r\n    if (typeof formField.firstName !== \"undefined\") {\r\n        if (!formField.firstName.match(/^[a-zA-Z ]*$/)) {\r\n            formIsValid = false;\r\n            errors[\"firstName\"] = \"*Please enter alphabet characters only.\";\r\n        }\r\n    }\r\n    if (!formField.lastName) {\r\n      formIsValid = false;\r\n      errors[\"lastName\"] = \"*Please enter last name.\";\r\n    }\r\n    if (!formField.email) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter your email-ID.\";\r\n    }\r\n    if (typeof formField.email !== \"undefined\") {\r\n        //regular expression for email validation\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(formField.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n        }\r\n    }\r\n  \r\n    if (!formField.mobileNumber) {\r\n      formIsValid = false;\r\n      errors[\"mobileNumber\"] = \"*Please enter your mobile no.\";\r\n    }\r\n    if (typeof formField.mobileNumber !== \"undefined\") {\r\n      if (!formField.mobileNumber.match(/^[0-9]{10}$/)) {\r\n          formIsValid = false;\r\n          errors[\"mobileNumber\"] = \"*Please enter valid mobile no.\";\r\n      }\r\n    }\r\n   \r\n    if (!formField.skypeID) {\r\n      formIsValid = false;\r\n      errors[\"skypeID\"] = \"*This field is required\";\r\n    }\r\n    \r\n    if (!formField.platform) {\r\n      formIsValid = false;\r\n      errors[\"platform\"] = \"*This field is required\";\r\n    }\r\n\r\n    if(formIsValid=== false)\r\n      window.scrollTo(0, 0);\r\n    \r\n    this.setState({\r\n      loading: false,\r\n      errors: errors\r\n    });\r\n    return formIsValid;\r\n  }\r\n  \r\n  toggle = () => {\r\n    this.setState({\r\n      dropDownOpen: !this.state.dropDownOpen,\r\n    })\r\n  }\r\n\r\n  changeApplicationStatus = (requestStatus) => {\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      \r\n      const statusFormData = {\r\n        \"vaApplicationId\": this.state.vaApplicationId,\r\n        \"status\": requestStatus,\r\n      };\r\n      \r\n      //create profile if not created \r\n      const formField = this.state.formField;\r\n      const userData = {\r\n        \"email\": formField.email.toLowerCase(),\r\n        \"firstName\": formField.firstName, \r\n        \"lastName\": formField.lastName, \r\n        \"mobileNumber\": formField.mobileNumber,\r\n        \"role\": 'va_member'\r\n      }\r\n      let authId = this.state.formField.authId;\r\n      if(authId==='' && requestStatus===2){\r\n        commonService.postAPIWithAccessToken('organization', userData).then( res => {\r\n          if ( undefined === res.data.data || !res.data.status || !res.data.authInfo ) { \r\n            //this.setState( { formProccessing: false} );\r\n            //toast.error(res.data.message);\r\n            //return;\r\n          }\r\n          if( res.data.authInfo ) { \r\n            authId = res.data.authInfo.authId;\r\n          }else{\r\n            authId = res.data.data.authId;\r\n          }\r\n          \r\n          statusFormData.authId = authId;\r\n          commonService.putAPIWithAccessToken('va-application/status', statusFormData)\r\n          .then( res => {\r\n            if ( undefined === res.data.data || !res.data.status ) {           \r\n              this.setState( { loading: false} );\r\n              toast.error(res.data.message);\r\n              return;\r\n            } \r\n            this.setState({ loading: false});\r\n            toast.success(res.data.message);\r\n            this.getApplicationInfo(this.state.vaApplicationId);        \r\n          } )\r\n          .catch( err => {         \r\n            if(err.response !== undefined && err.response.status === 401) {\r\n              localStorage.clear();\r\n              this.props.history.push('/login');\r\n            }else\r\n              this.setState( { loading: false } );\r\n              toast.error(err.message);\r\n          } )\r\n\r\n        } )\r\n      }else{\r\n        if(requestStatus !== undefined && requestStatus===3){\r\n          let deleteFormdata = { \"vaApplicationId\":this.state.vaApplicationId }\r\n          commonService.deleteAPIWithAccessToken( 'va-application',deleteFormdata).then( res => {\r\n            this.setState({loading: false});\r\n            if ( undefined === res.data || !res.data.status ) {            \r\n              toast.error(res.data.message);\r\n              return;\r\n            } \r\n            this.props.history.push('/admin/va-application');  \r\n            toast.success(res.data.message);\r\n          } )\r\n          .catch( err => {       \r\n            if(err.response !== undefined && err.response.status === 401) {\r\n              localStorage.clear();\r\n              this.props.history.push('/login');\r\n            }else{\r\n              this.setState( { loading: false } );\r\n              toast.error(err.message);\r\n            }\r\n          } )\r\n        }else{\r\n        commonService.putAPIWithAccessToken('va-application/status', statusFormData)\r\n          .then( res => {\r\n            if ( undefined === res.data.data || !res.data.status ) {           \r\n              this.setState( { loading: false} );\r\n              toast.error(res.data.message);\r\n              return;\r\n            } \r\n            this.setState({ loading: false});\r\n            toast.success(res.data.message);\r\n            this.getApplicationInfo(this.state.vaApplicationId);        \r\n          } )\r\n          .catch( err => {         \r\n            if(err.response !== undefined && err.response.status === 401) {\r\n              localStorage.clear();\r\n              this.props.history.push('/login');\r\n            }else\r\n              this.setState( { loading: false } );\r\n              toast.error(err.message);\r\n          } )\r\n        }\r\n      }\r\n\r\n      \r\n    } );\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, formField, applicationFiles, errors } = this.state;\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Edit VA Application</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={this.submitFormData} noValidate>\r\n                    <div  className=\"form-service-listing\">\r\n                        <h2>Personal Information</h2>\r\n                        <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"firstName\">First Name *</Label>\r\n                            <Input type=\"text\" name=\"firstName\" id=\"firstName\" invalid={errors['firstName'] !== undefined && errors['firstName'] !== \"\"} value={formField.firstName} onChange={this.changeHandler} placeholder=\"First Name\" required />\r\n                            <FormFeedback>{errors['firstName']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"lastName\">Last Name *</Label>\r\n                            <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={formField.lastName} invalid={errors['lastName'] !== undefined && errors['lastName'] !== \"\"} onChange={this.changeHandler} placeholder=\"Last Name\" required />\r\n                            <FormFeedback>{errors['lastName']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"mobileNumber\">Mobile Number *</Label>\r\n                                <Input type=\"number\" name=\"mobileNumber\" min={1} step=\"1\" id=\"mobileNumber\" invalid={errors['mobileNumber'] !== undefined && errors['mobileNumber'] !== \"\"} placeholder=\"Mobile no.\" value={formField.mobileNumber} onChange={this.changeHandler} required />\r\n                                <FormFeedback>{errors['mobileNumber']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"email\">Email Address *</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" invalid={errors['email'] !== undefined && errors['email'] !== \"\"} value={formField.email} onChange={this.changeHandler} required />\r\n                            <FormFeedback>{errors['email']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"skypeID\">Skype ID *</Label>\r\n                            <Input type=\"text\" name=\"skypeID\" invalid={errors['skypeID'] !== undefined && errors['skype'] !== \"\"} id=\"skypeID\" value={formField.skypeID} onChange={this.changeHandler} placeholder=\"Skype ID\" required />\r\n                            <FormFeedback>{errors['skypeID']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>  \r\n                            <FormGroup>\r\n                            <Label htmlFor=\"socialMediaID\">Social Media IDs (optional)</Label>\r\n                            <Input type=\"text\" name=\"socialMediaID\" id=\"socialMediaID\" value={formField.socialMediaID} placeholder=\"Social Media IDs\" onChange={this.changeHandler} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <FormGroup>\r\n                            <Label>Platforms, Tools, Systems , CRM *</Label>\r\n                            <Input type=\"textarea\" name=\"platform\" value={formField.platform} placeholder=\"Platforms, Tools, Systems, CRM\" onChange={this.changeHandler} required />\r\n                            <FormFeedback>{errors['platform']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <Label>Website/ Portfolio Links </Label>\r\n                            <Input type=\"text\" name=\"portfolioLink\" value={formField.portfolioLink} placeholder=\"Website/ Portfolio Links\" onChange={this.changeHandler} />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"form-service-listing\">\r\n                      <Row>\r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 1</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet1\" value={formField.skillSet1} onChange={this.changeHandler} required invalid={errors['skillSet1'] !== undefined && errors['skillSet1'] !== \"\"}>\r\n                                  <option value=\"\">Select Skill 1 *</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                                <FormFeedback>{errors['skillSet1']}</FormFeedback>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill1\" value={formField.rateSkill1} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>    \r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 2</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet2\" value={formField.skillSet2} onChange={this.changeHandler}>\r\n                                  <option value=\"\">Select Skill 2</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill2\" value={formField.rateSkill2} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>\r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 3</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet3\" value={formField.skillSet3} onChange={this.changeHandler}>\r\n                                  <option value=\"\">Select Skill 3</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill3\" value={formField.rateSkill3} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>  \r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"form-service-listing\">\r\n                    <h2>Upload</h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Audio Clip/File</h3>\r\n                                { applicationFiles.audioFile!=='' ? <p className=\"text-center\"><a href={ applicationFiles.audioFile } target=\"_blank\" rel=\"noopener noreferrer\">{ applicationFiles.audioFileName }</a></p> : '' }\r\n                                <Input type=\"file\" id=\"audioFile\" name=\"audioFile\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleAudioFileChange} />\r\n                                <label htmlFor=\"audioFile\">\r\n                                    <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.audioFile!=='' ? this.state.audioFile.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Resumes/CVS</h3>\r\n                                { applicationFiles.resumeCV!=='' ? <p className=\"text-center\"><a href={ applicationFiles.resumeCV } target=\"_blank\" rel=\"noopener noreferrer\">{ applicationFiles.resumeCVName }</a></p> : '' }\r\n                                <Input type=\"file\" id=\"resumeCV\" name=\"resumeCV\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleResumeCVeChange} />\r\n                                <label htmlFor=\"resumeCV\">\r\n                                    <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.resumeCV!=='' ? this.state.resumeCV.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                            <h3>Intent Letter </h3>\r\n                            { applicationFiles.intentLetter!=='' ? <p className=\"text-center\"><a href={ applicationFiles.intentLetter } target=\"_blank\" rel=\"noopener noreferrer\">{ applicationFiles.intentLetterName }</a></p> : '' }\r\n                            <Input type=\"file\" id=\"intentLetter\" name=\"intentLetter\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleIntentLetterChange} />\r\n                            <label htmlFor=\"intentLetter\">\r\n                                <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                <span>{ this.state.intentLetter!=='' ? this.state.intentLetter.name : 'Choose a file' }&hellip;</span>\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Internet Connection Speed screenshot </h3>\r\n                                { applicationFiles.internetSpeedScreenshot!=='' ? <p className=\"text-center\"><a href={ applicationFiles.internetSpeedScreenshot } target=\"_blank\" rel=\"noopener noreferrer\">{ applicationFiles.internetSpeedScreenshotName }</a></p> : '' }\r\n                                <Input type=\"file\" id=\"internetSpeedScreenshot\" name=\"internetSpeedScreenshot\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleInternetSpeedScreenshotChange} />\r\n                                <label htmlFor=\"internetSpeedScreenshot\"><figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.internetSpeedScreenshot!=='' ? this.state.internetSpeedScreenshot.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        {/* <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <Label>Status *</Label>\r\n                            <Input type=\"select\" name=\"status\" value={formField.status} onChange={this.changeHandler} required>\r\n                              <option value=\"1\">Pending</option>\r\n                              <option value=\"2\">Approve</option>\r\n                              <option value=\"3\">Reject</option>\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </Col> */}\r\n                    </div>\r\n                  </div>\r\n                  <div  className=\"form-service-listing\">\r\n                    <h2>References</h2>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"referenceName\">Name</Label>\r\n                          <Input type=\"text\" name=\"referenceName\" id=\"referenceName\" value={formField.referenceName} onChange={this.changeHandler} placeholder=\"Reference Name\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"referenceEmail\">Email</Label>\r\n                          <Input type=\"email\" name=\"referenceEmail\" id=\"referenceEmail\" value={formField.referenceEmail} onChange={this.changeHandler} placeholder=\"Reference Email\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"notes\">Notes</Label>\r\n                          <Input type=\"textarea\" name=\"notes\" id=\"notes\" value={formField.notes} onChange={this.changeHandler} placeholder=\"Notes\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-service-listing\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-md-6\">\r\n                            <strong>Application Status</strong> : &nbsp; \r\n                            <ButtonDropdown isOpen={this.state.dropDownOpen} toggle={this.toggle}>\r\n                              <DropdownToggle caret size=\"md\" color={ (formField.status===1) ? \"warning\" : ((formField.status ===2 )  ? \"success\" : \"danger\") }>\r\n                                { (formField.status===1) ? \"Pending\" : ((formField.status ===2 )  ? \"Approved\" : \"Rejected\") }\r\n                              </DropdownToggle>\r\n                              <DropdownMenu>\r\n                                <DropdownItem onClick={() => this.changeApplicationStatus(2)}>Approve Application</DropdownItem>\r\n                                <DropdownItem onClick={() => this.changeApplicationStatus(3)}>Reject Application</DropdownItem>\r\n                                <DropdownItem onClick={() => this.changeApplicationStatus(1)}>Pending</DropdownItem>\r\n                              </DropdownMenu>\r\n                            </ButtonDropdown>\r\n                          </div>\r\n                          <div className=\"col-md-6\">\r\n                              <div className=\"form-group pull-right\">\r\n                                  <Button className=\"submit-btn\">Save Changes</Button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditVaApplication;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass VaRequestData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Store Info */\r\n  editStoreItem(rowIndex){    \r\n    this.props.editItemAction(rowIndex);\r\n  }\r\n\r\n  deleteStoreItem(rowIndex){    \r\n    this.props.deleteItemAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    let count=0;\r\n    let rowsItem = [];\r\n    for(const [i, Store] of this.props.data.entries()){\r\n      let orgInfo = {   \r\n        organizationName: Store.organizationName,      \r\n        vaType: ( Store.vaType===1 ? 'Business Support' : 'Personal Assistance' ),\r\n        vaRequestId: Store.vaRequestId,\r\n        natureOfBusiness: Store.natureOfBusiness,\r\n        engagementType: ( Store.engagementType===1 ? 'Project-Based' : 'Ongoing Task' ),\r\n        numberOfVA: Store.numberOfVA || \" \",\r\n        createdAt: (new Date(Store.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: Store.status ? 'Active' : 'Inactive',   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n      count = count+i;\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Organization',\r\n        name: 'organizationName',\r\n      },\r\n      {\r\n        label: 'Type of VA',\r\n        name: 'vaType',\r\n      },     \r\n      {\r\n        label: 'Nature of Business',\r\n        name: 'natureOfBusiness',\r\n      },\r\n      {\r\n        label: 'Type of Engagement',\r\n        name: 'engagementType',\r\n      },\r\n      {\r\n        label: 'No. of VA',\r\n        name: 'numberOfVA',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Created on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div className=\"actionBtnGroup\" style={{width:'110px'}}>\r\n                <Link className=\"btn btn-info btn-edit\" to={`/admin/va-request/assign-va/${rowsItem[i].vaRequestId}`}><i className=\"fa fa-user-plus\"></i> </Link>\r\n                <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editStoreItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if(window.confirm('Are you sure you want to delete this record?')){ this.deleteStoreItem(i) };}} ><i className=\"fa fa-trash\"></i></button></div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-request-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Request lists\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VaRequestData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport { FormErrors } from '../../../Formerrors/Formerrors';\r\nimport Loader from '../../../Loader/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport VaRequestData from './VaRequestData';\r\nimport './VaRequest.css'\r\n\r\n\r\nclass VaRequestListing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      itemList: [],\r\n      organizationList: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { organizationId: '', vaRequestId:'', vaType: '', natureOfBusiness: '', engagementType:'', engagementDescription: '', numberOfVA:'', skillSet:''},\r\n      formErrors: { organizationId: '', vaType: '',  natureOfBusiness:'', engagementType:'', engagementDescription: '', error: ''},\r\n      formValid: false,\r\n      filterItem: { filter_organization_id: '', filterVaType: '', filterEngagementType: '', filterRating:'', filter_address:'', filterFrom:'',  filterTo:'', filterStatus:'', custom_search: '' },\r\n    } \r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.filterItemList = this.filterItemList.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n  }\r\n  \r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;\r\n    let organizationId = \"\";\r\n    if(params.organizationId !== undefined) {\r\n      organizationId = params.organizationId;\r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = params.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.itemList({filter_organization_id: organizationId});\r\n    this.organizationList();\r\n  }\r\n\r\n  /*VA Request List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filter_organization_id !== undefined && filterItem.filter_organization_id !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&organizationAuthId=\"+filterItem.filter_organization_id: \"&organizationAuthId=\"+filterItem.filter_organization_id;\r\n    if(filterItem.filterVaType !== undefined && filterItem.filterVaType !== \"\" ) \r\n     filterQuery += (filterQuery !==\"\" ) ? \"&vaType=\"+filterItem.filterVaType: \"&vaType=\"+filterItem.filterVaType;\r\n    if(filterItem.filterEngagementType !== undefined && filterItem.filterEngagementType !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&engagementType=\"+filterItem.filterEngagementType: \"&engagementType=\"+filterItem.filterEngagementType;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-request'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, itemList: res.data.data.requestList});\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /*Organization List API*/\r\n  organizationList() {\r\n    commonService.getAPIWithAccessToken('organization?pageSize=10000')\r\n      .then( res => {       \r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading: false } );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }   \r\n        this.setState({loading:false, organizationList: res.data.data.profileList});     \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }else \r\n          this.setState( { loading: false } );\r\n      } )\r\n  }\r\n\r\n  filterItemList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"organizationId\": formInputField.organizationId,\r\n        \"vaType\": formInputField.vaType,\r\n        \"natureOfBusiness\": formInputField.natureOfBusiness,\r\n        \"engagementType\": formInputField.engagementType,\r\n        \"engagementDescription\": formInputField.engagementDescription,\r\n        \"numberOfVA\": formInputField.numberOfVA,\r\n        \"skillSet\": formInputField.skillSet\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        formData['vaRequestId'] = formInputField.vaRequestId;\r\n       \r\n        commonService.putAPIWithAccessToken('va-request', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.itemList(); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }else{\r\n        commonService.postAPIWithAccessToken('va-request', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }           \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n\r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {      \r\n      case 'organizationId':        \r\n        fieldValidationErrors.organizationId = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'vaType':        \r\n        fieldValidationErrors.vaType = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'natureOfBusiness':        \r\n        fieldValidationErrors.natureOfBusiness = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'engagementType':        \r\n        fieldValidationErrors.engagementType = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'engagementDescription':        \r\n        fieldValidationErrors.engagementDescription = (value !== '') ? '' : ' is required';\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    this.setState({formValid: \r\n      (formErrors.truckName === \"\" && formField.truckName !== \"\") \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formField: { organizationId: '', vaRequestId:'', vaType: '', natureOfBusiness: '', engagementType:'', engagementDescription: '', numberOfVA:'', skillSet:'' },\r\n      formErrors: {organizationId: '', vaType: '', natureOfBusiness: '', engagementType:'', error: ''}\r\n    });\r\n  }\r\n\r\n  handleEditItem(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    const formField = {\r\n      vaRequestId: itemInfo.vaRequestId, \r\n      organizationId: itemInfo.organizationId,\r\n      vaType: itemInfo.vaType, \r\n      natureOfBusiness: itemInfo.natureOfBusiness, \r\n      engagementType: itemInfo.engagementType,\r\n      engagementDescription: itemInfo.engagementDescription,\r\n      skillSet: itemInfo.skillSet,\r\n      numberOfVA: itemInfo.numberOfVA,\r\n      status: itemInfo.status,\r\n    };\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( itemInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(itemInfo.vaRequestId, itemInfo.status )} >{ ( itemInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n  \r\n  /* Delete Record*/\r\n  handleDeleteItem(rowIndex){\r\n    const requestInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"vaRequestId\":requestInfo.vaRequestId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'va-request',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n\r\n  // Set address, latitude and longitude\r\n  setLatitudeLongitude(address, latLng){\r\n    this.setState({ latitude:latLng.lat, longitude:latLng.lng, address: address })\r\n  }\r\n  \r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filter_organization_id: '', filterVaType: '', filterEngagementType:'', filterFrom:'',  filterTo:'', filterStatus:'' }\r\n    });\r\n    this.itemList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { itemList, loading, modal, formProccessing, organizationList, filterItem } = this.state;\r\n\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Request List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add VA Request</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                \r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter_organization_id\">Organization</Label>            \r\n                          <Input type=\"select\" placeholder=\"Organization *\" id=\"filter_organization_id\" name=\"filter_organization_id\" value={filterItem.filter_organization_id} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">All</option>\r\n                            {organizationList.map((organizationInfo, index) =>\r\n                              <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup> \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterVaType\">Type of VA</Label>\r\n                          <Input type=\"select\" name=\"filterVaType\" id=\"filterVaType\" value={filterItem.filterVaType} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Business Support</option>\r\n                            <option value=\"2\">Personal Assistance</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterEngagementType\">Type of engagement</Label>            \r\n                          <Input type=\"select\" name=\"filterEngagementType\" id=\"filterEngagementType\" value={filterItem.filterEngagementType} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Project-Based</option>\r\n                            <option value=\"2\">Ongoing Task</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Active</option>\r\n                            <option value=\"0\">Inactive</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList} title=\"Filter VA Request\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Reset Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <VaRequestData data={itemList} editItemAction={this.handleEditItem} deleteItemAction={this.handleDeleteItem} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.toggle}>Add New VA Request</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"organizationId\">Organization</Label>            \r\n                    <Input type=\"select\" placeholder=\"Organization *\" id=\"organizationId\" name=\"organizationId\" value={this.state.formField.organizationId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Organization</option>\r\n                      {organizationList.map((organizationInfo, index) =>\r\n                        <SetOrganizationDropDownItem key={index} organizationInfo={organizationInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <label htmlFor=\"vaType\">Type of Virtual Assistance *</label>\r\n                    <Input type=\"select\" name=\"vaType\" id=\"vaType\" className=\"form-control\" value={this.state.formField.vaType} onChange={this.changeHandler} required>\r\n                      <option value=\"1\">Business Support</option>\r\n                      <option value=\"2\">Personal Assistance</option>\r\n                    </Input>      \r\n                  </FormGroup> \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"natureOfBusiness\">Nature of Business *</Label>            \r\n                    <Input type=\"text\" placeholder=\"Nature of Business\" id=\"natureOfBusiness\" name=\"natureOfBusiness\" value={this.state.formField.natureOfBusiness} onChange={this.changeHandler}  />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <label htmlFor=\"engagementType\">Type of Engagement *</label>\r\n                    <Input type=\"select\" name=\"engagementType\" id=\"engagementType\" value={this.state.formField.engagementType} onChange={this.changeHandler} required>\r\n                      <option value=\"1\">Project-Based</option>\r\n                      <option value=\"2\">Ongoing Task</option>\r\n                    </Input>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"12\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"engagementDescription\">Engagement Description </Label>   \r\n                    <Input type=\"textarea\" name=\"engagementDescription\" id=\"engagementDescription\" value={this.state.formField.engagementDescription} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"numberOfVA\">How many VAs do you need?</Label>            \r\n                    <Input type=\"number\" id=\"numberOfVA\" name=\"numberOfVA\" value={this.state.formField.numberOfVA} onChange={this.changeHandler} />\r\n                  </FormGroup>              \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"skillSet\">Skill Sets and Other Requirements</Label>            \r\n                    <Input type=\"text\" id=\"skillSet\" name=\"skillSet\" value={this.state.formField.skillSet} onChange={this.changeHandler} />\r\n                  </FormGroup>              \r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetOrganizationDropDownItem (props) {\r\n  const organizationInfo = props.organizationInfo;\r\n  return (<option value={organizationInfo.authId} >{organizationInfo.organizationName}</option>)\r\n}\r\n\r\nexport default VaRequestListing;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass ScheduledBookingData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n\r\n  /* Delete Enquiry Info */\r\n  deleteEnquiryItem(rowIndex){    \r\n    this.props.deleteEnquiryAction(rowIndex);\r\n  }\r\n \r\n\r\n  render() {\r\n    let rowsItem = []; \r\n    for(const [i, enquiry] of this.props.data.entries()){\r\n      //console.log(i);\r\n      let resInfo = {\r\n        contactPerson: enquiry.firstName+' '+enquiry.lastName,\r\n        email: enquiry.email,\r\n        phoneNumber: enquiry.phoneNumber || \" \",\r\n        companyName: enquiry.companyName || \" \",\r\n        scheduledOn: (new Date(enquiry.scheduledDate)).toLocaleDateString(\"en-US\",{ year: 'numeric', month: 'long', day: 'numeric' })+' @ '+enquiry.scheduledTime,\r\n        createdAt: (new Date(enquiry.createdAt)).toLocaleDateString(\"en-US\"),\r\n        indexVal: i,\r\n        bookingId: enquiry.id,\r\n      }\r\n      rowsItem.push(resInfo);\r\n    }\r\n\r\n    const columns = [ \r\n        {\r\n          label: 'User',\r\n          name: 'contactPerson',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          name: 'email',\r\n        },\r\n        {\r\n          label: 'Phone no.',\r\n          name: 'phoneNumber',\r\n        },\r\n        {\r\n          label: 'Company name',\r\n          name: 'companyName',\r\n        },\r\n        {\r\n          label: 'Scheduled on',\r\n          name: 'scheduledOn',\r\n        },\r\n        {\r\n          label: 'Created on',\r\n          name: 'createdAt',\r\n        },\r\n        {\r\n          name: \"action\",\r\n          label: \" Action \",\r\n          options: {\r\n            filter: false,\r\n            sort: false,\r\n            download: false,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              let i = tableMeta.rowIndex;\r\n              return (\r\n                <div className=\"actionBtnGroup\"><Button className=\"btn-delete btn-danger\" size='sm' onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteEnquiryItem(i) };}} title=\"Delete Inquiry\"><i className=\"fa fa-trash\"></i> </Button></div>\r\n              );\r\n            }\r\n          }\r\n        },\r\n    ];\r\n    \r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'scheduled-booking-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Scheduled Booking Data\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduledBookingData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, Col, Row, Button, Input, FormGroup, Label } from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ScheduledBookingData from './ScheduledBookingData';\r\nimport Loader from '../../Loader/Loader';\r\n\r\nclass ScheduledBooking extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      enquiryLists: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      filterItem: { filterContactPerson: '', filterPhoneNumber:'', filterFrom:'',  filterTo:'' },    \r\n    } \r\n    this.handleDeleteEnquiry = this.handleDeleteEnquiry.bind(this);\r\n    this.filterEnquiryList = this.filterEnquiryList.bind(this);\r\n  }\r\n\r\n  // Fetch the Enquiry List\r\n  componentDidMount() {     \r\n    this.enquiryLists({});   \r\n  }\r\n\r\n  /* Enquiry List API */\r\n  enquiryLists(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterContactPerson !== undefined && filterItem.filterContactPerson !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&firstName=\"+filterItem.filterContactPerson: \"&firstName=\"+filterItem.filterContactPerson;\r\n    \r\n      if(filterItem.filterPhoneNumber !== undefined && filterItem.filterPhoneNumber !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&phoneNumber=\"+filterItem.filterPhoneNumber: \"&phoneNumber=\"+filterItem.filterContactPerson;\r\n    \r\n      if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('booking'+filterQuery)\r\n        .then( res => {       \r\n          console.log(res);\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n          this.setState({loading:false, enquiryLists: res.data.data.bookingList});\r\n        } )\r\n        .catch( err => {\r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  } \r\n  \r\n  handleDeleteEnquiry(rowIndex){\r\n    const rowInfo = this.state.enquiryLists[rowIndex];\r\n    const delFormData = {\r\n      \"bookingId\": rowInfo.bookingId,\r\n    };\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( `booking`, delFormData)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.enquiryLists();\r\n        } )\r\n        .catch( err => {                   \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }  \r\n\r\n  filterEnquiryList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.enquiryLists(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterContactPerson:'', filterEmail: '', filterPhoneNumber:'', filterFrom:'',  filterTo:'', filterStatus:'' }\r\n    });\r\n    this.enquiryLists();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    const { enquiryLists, loading, filterItem } = this.state;\r\n       \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"user-dashboard\">\r\n        {loaderElement}\r\n        <Card className=\"vd-card \">\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className=\"filterRow\">                      \r\n                  <Col md={\"3\"} className=\"pl-3\">\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterContactPerson\">User</Label>            \r\n                      <Input type=\"text\" placeholder=\"User name\" id=\"filterContactPerson\" name=\"filterContactPerson\" value={filterItem.filterContactPerson} onChange={this.changeFilterHandler} />\r\n                    </FormGroup> \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterEmail\">Email ID</Label>            \r\n                      <Input type=\"email\" placeholder=\"Email ID\" id=\"filterEmail\" name=\"filterEmail\" value={filterItem.filterEmail} onChange={this.changeFilterHandler} />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterPhoneNumber\">Phone no.</Label>            \r\n                      <Input type=\"text\" placeholder=\"Phone number\" id=\"filterPhoneNumber\" name=\"filterPhoneNumber\" value={filterItem.filterPhoneNumber} onChange={this.changeFilterHandler} />\r\n                    </FormGroup> \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date From</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date To</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"1\"} className=\"p-0\">\r\n                    <FormGroup> \r\n                      <Label>&nbsp;</Label><br />\r\n                      <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEnquiryList} title=\"Filter Inquiries\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                      <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Clear Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              \r\n              <Col md={12}>\r\n                <ScheduledBookingData data={enquiryLists} deleteEnquiryAction={this.handleDeleteEnquiry} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>\r\n            </Row> \r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default ScheduledBooking;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\n\r\nclass VAMemberList extends Component{\r\n    constructor(props){\r\n        super(props);   \r\n        this.state = {\r\n          buttonProcessing: false,\r\n          rowIndex: '',\r\n          dataTableItem: [],\r\n          checkAll: false,\r\n          checkedItems: []\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange = (index,e) => {\r\n        let checkedItems = this.state.checkedItems;\r\n        let checkAll = this.state.checkAll;\r\n        if(index === \"All\") {\r\n            checkAll = e.target.checked;\r\n            checkedItems = checkAll ?  this.props.data.map( (info, i) =>{ return info.authId;}) : [];\r\n        }else {\r\n            if(e.target.checked && checkedItems.indexOf(index) < 0){\r\n                checkedItems.push(index);\r\n            }else if(!e.target.checked)\r\n                checkedItems.splice(checkedItems.indexOf(index), 1);\r\n        }\r\n        this.setState({checkedItems: checkedItems, checkAll: checkAll});\r\n      \r\n      };\r\n\r\n    assignUser = () => {\r\n        let authIds = this.state.checkedItems;\r\n        if(authIds.length === 0){\r\n            toast.error('Please select at least one VA User');\r\n            return;\r\n        }\r\n        const formData = {\r\n            \"vaRequestId\": this.props.vaRequestId,\r\n            \"clientId\": this.props.clientId,\r\n            \"authIds\": authIds,\r\n        };\r\n        \r\n        this.setState( { loading: true }, () => {\r\n            commonService.postAPIWithAccessToken( `va-assignment`, formData )\r\n             .then( res => {\r\n                //console.log(res); return;\r\n               if ( undefined === res.data || !res.data.status ) {\r\n                 this.setState( { loading: false } );\r\n                 toast.error(res.data.message);\r\n                 return;\r\n               }\r\n               //this.props.history.push('/admin/va-request/');\r\n               this.setState( { loading: false } );\r\n               toast.success(res.data.message);\r\n               window.scrollTo(0, 0);\r\n             } )\r\n             .catch( err => {\r\n               toast.error(err.message);\r\n               this.setState( { loading: false} );\r\n             } )\r\n        } )\r\n        \r\n    } \r\n\r\n    render(){\r\n        const { loading } = this.state;\r\n        let loaderElement = '';\r\n        if(loading)        \r\n          loaderElement = <Loader />\r\n    \r\n        let rowsItem = []; \r\n        for(const [i, userData] of this.props.data.entries()){\r\n            let userInfo = {\r\n                SNo:i,\r\n                authId:userData.authId,\r\n                userName: userData.firstName+' '+userData.lastName,\r\n                email: userData.email,\r\n                skillSet: userData.skillSet,\r\n            }\r\n            rowsItem.push(userInfo);\r\n        }\r\n        \r\n        let list = rowsItem.map((user, index) =>{\r\n            return (\r\n                <tr key={user.SNo}>\r\n                    <td><input type=\"checkbox\"  onChange={(e) => {this.handleChange(user.authId, e)}} checked = {this.state.checkedItems.indexOf(user.authId) > -1  ? true : false} /></td>\r\n                    <td>{user.SNo+1}</td>\r\n                    <td>{user.userName}</td>\r\n                    <td>{user.email}</td>\r\n                    <td>{user.skillSet}</td>\r\n                </tr>\r\n            );\r\n        });\r\n\r\n        return (\r\n           \r\n            <>           \r\n            {loaderElement}\r\n            <div className=\"table-responsive card-table\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th><input type=\"checkbox\" name=\"checkAll\" checked = {this.state.checkAll} onChange={(e) => {this.handleChange(\"All\", e)}} /></th>\r\n                            <th>S&nbsp;no.</th>\r\n                            <th>User</th>\r\n                            <th>Email</th>\r\n                            <th>Skills</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{list}</tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"form-group mt-3\">\r\n                <Link className=\"btn btn-danger\" to=\"/admin/va-request\">Cancel</Link> &nbsp;\r\n                <button className=\"btn btn-success\" onClick={() => this.assignUser() }>Assign</button>\r\n            </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default VAMemberList;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Input, FormGroup, Label, FormFeedback, InputGroup, InputGroupAddon } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport Loader from '../../../Loader/Loader';\r\n\r\nimport NewApplicationData from './VaMemberList';\r\n//import { Link } from 'react-router-dom';\r\n\r\n\r\nclass AssignRequest extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      vaRequestId: '',\r\n      clientId: '',\r\n      formField: { organizationId: '', organizationName:'', userName:'', vaRequestId:'', vaType: '', natureOfBusiness: '', engagementType:'', engagementDescription: '', numberOfVA:'', skillSet:'' },\r\n      filterItem: { emailOrName: '' },\r\n      vaApplicationList:[],\r\n      loading: false,\r\n      errors: {}\r\n    } \r\n    //this.submitFormData = this.submitFormData.bind(this);\r\n    this.filterVaMemberList = this.filterVaMemberList.bind(this);\r\n  }\r\n\r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;    \r\n    if(params.vaRequestId !== undefined && params.vaRequestId !==\"\") {\r\n      this.setState({vaRequestId: params.vaRequestId});\r\n      this.getRequestInfo(params.vaRequestId);\r\n    }else \r\n      this.props.history.push('/admin/va-request');\r\n\r\n    this.itemList();\r\n  }\r\n  \r\n  getRequestInfo(vaRequestId){\r\n    this.setState( { loading: true}, () => {\r\n        commonService.getAPIWithAccessToken('va-request/'+vaRequestId)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          } \r\n          const itemInfo = res.data.data;\r\n          const formField = {\r\n            vaRequestId: itemInfo.vaRequestId, \r\n            organizationId: itemInfo.organizationId,\r\n            organizationName: itemInfo.organizationName,\r\n            userName: itemInfo.userName,\r\n            vaType: itemInfo.vaType, \r\n            natureOfBusiness: itemInfo.natureOfBusiness, \r\n            engagementType: itemInfo.engagementType,\r\n            engagementDescription: itemInfo.engagementDescription,\r\n            skillSet: itemInfo.skillSet,\r\n            numberOfVA: itemInfo.numberOfVA,\r\n            status: itemInfo.status,\r\n          };\r\n          this.setState({vaRequestId: vaRequestId, clientId: itemInfo.authId, formField: formField, modal: true,loading: false, formValid: true});\r\n          \r\n        } )\r\n        .catch( err => {               \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n        } )\r\n    } );\r\n  }\r\n\r\n  /*VA Member List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=50\";\r\n    if(filterItem.emailOrName !== undefined && filterItem.emailOrName !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&emailOrName=\"+filterItem.emailOrName: \"&emailOrName=\"+filterItem.emailOrName;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-application/va-member'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, vaApplicationList: res.data.data.requestList});\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  filterVaMemberList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n\r\n  /* Delete Record*/\r\n  handleDeleteRecord(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"vaApplicationId\":itemInfo.vaApplicationId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'va-application',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    const { loading, formField, errors } = this.state;\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Assignment</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                \r\n                    <div  className=\"form-service-listing\">\r\n                        <h2>Client Details:</h2>\r\n                        <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"userName\">Name </Label>\r\n                            <Input type=\"text\" name=\"userName\" id=\"userName\" value={formField.userName} onChange={this.changeHandler} placeholder=\"Client Name\" readOnly />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"organizationName\">Organization </Label>\r\n                            <Input type=\"text\" name=\"organizationName\" id=\"organizationName\" value={formField.organizationName} onChange={this.changeHandler} placeholder=\"Organization Name\" readOnly />\r\n                            </FormGroup>\r\n                        </Col>\r\n                      </Row>\r\n                      <h2>Request Details:</h2>\r\n                      <Row>  \r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                              <Label htmlFor=\"vaType\">VA Type *</Label>\r\n                              <Input type=\"select\" name=\"vaType\" id=\"vaType\" className=\"form-control\" value={this.state.formField.vaType} onChange={this.changeHandler} readOnly>\r\n                                <option value=\"1\">Business Support</option>\r\n                                <option value=\"2\">Personal Assistance</option>\r\n                              </Input>      \r\n                            </FormGroup> \r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"natureOfBusiness\">Nature of Business *</Label>\r\n                            <Input type=\"text\" name=\"natureOfBusiness\" id=\"natureOfBusiness\" placeholder=\"Task Scope\" invalid={errors['natureOfBusiness'] !== undefined && errors['natureOfBusiness'] !== \"\"} value={formField.natureOfBusiness} onChange={this.changeHandler} readOnly />\r\n                            <FormFeedback>{errors['natureOfBusiness']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                          <FormGroup> \r\n                            <label htmlFor=\"engagementType\">Type of Engagement *</label>\r\n                            <Input type=\"select\" name=\"engagementType\" id=\"engagementType\" value={this.state.formField.engagementType} onChange={this.changeHandler} readOnly>\r\n                              <option value=\"1\">Project-Based</option>\r\n                              <option value=\"2\">Ongoing Task</option>\r\n                            </Input>\r\n                          </FormGroup>  \r\n                        </Col>\r\n                        <Col md={6}>  \r\n                          <FormGroup> \r\n                            <Label htmlFor=\"engagementDescription\">Engagement Description </Label>   \r\n                            <Input type=\"textarea\" className=\"form-control\" name=\"engagementDescription\" id=\"engagementDescription\" value={this.state.formField.engagementDescription} onChange={this.changeHandler}  readOnly />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        <Col md={\"6\"}>\r\n                          <FormGroup> \r\n                            <Label htmlFor=\"numberOfVA\">No. of VA Required</Label>            \r\n                            <Input type=\"number\" id=\"numberOfVA\" name=\"numberOfVA\" value={this.state.formField.numberOfVA} onChange={this.changeHandler} readOnly />\r\n                          </FormGroup>              \r\n                        </Col>\r\n                        <Col md={\"6\"}>\r\n                          <FormGroup> \r\n                            <Label htmlFor=\"skillSet\">Skills Required</Label>            \r\n                            <Input type=\"text\" id=\"skillSet\" name=\"skillSet\" value={this.state.formField.skillSet} onChange={this.changeHandler}  readOnly />\r\n                          </FormGroup>              \r\n                        </Col>\r\n                      </Row>\r\n                      <h2 className=\"mt-5\">VA Assignment:</h2>\r\n                      \r\n                      <div className=\"Enquiries-info\">\r\n                        {/* New Enquiries Data */}\r\n                        <Row>\r\n                          <Col md=\"12\">\r\n                            <Card className=\"vd-card\">\r\n                              <div className=\"card-header\">\r\n                                <div className=\"d-flex align-items-center\">\r\n                                  <div className=\"mr-auto\">\r\n                                  <InputGroup>\r\n                                    <Input placeholder=\"Filter by name or email...\" name=\"emailOrName\" value={this.state.filterItem.emailOrName} onChange={this.changeFilterHandler} />\r\n                                    <InputGroupAddon addonType=\"prepend\"><Button onClick={this.filterVaMemberList}><i className=\"fa fa-search\"></i></Button></InputGroupAddon>\r\n                                  </InputGroup>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                              <CardBody>\r\n                                <NewApplicationData data={this.state.vaApplicationList} vaRequestId={this.state.vaRequestId} clientId={this.state.clientId} />\r\n                              </CardBody>              \r\n                            </Card>\r\n                          </Col>\r\n                          \r\n                        </Row>\r\n                      </div>\r\n                    </div>  \r\n                  \r\n\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default AssignRequest;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n//import {Link} from \"react-router-dom\";\r\n\r\nclass VaTaskData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Info */\r\n  editStoreItem(rowIndex){    \r\n    this.props.editItemAction(rowIndex);\r\n  }\r\n\r\n  deleteStoreItem(rowIndex){    \r\n    this.props.deleteItemAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    let count=0;\r\n    let rowsItem = [];\r\n    for(const [i, Store] of this.props.data.entries()){\r\n      let orgInfo = {   \r\n        projectId: Store.projectId,\r\n        title: Store.title,\r\n        description: Store.description,\r\n        vaName: Store.vaName || \" \",\r\n        createdAt: (new Date(Store.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: Store.status ? 'Active' : 'Inactive',   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n      count = count+i;\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Task name',\r\n        name: 'title',\r\n      },\r\n      {\r\n        label: 'Description',\r\n        name: 'description',\r\n      },\r\n      {\r\n        label: 'VA name',\r\n        name: 'vaName',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Created on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div className=\"actionBtnGroup\" style={{width:'110px'}}>\r\n                <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editStoreItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if(window.confirm('Are you sure you want to delete this record?')){ this.deleteStoreItem(i) };}} ><i className=\"fa fa-trash\"></i></button></div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-task-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Task list\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VaTaskData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport { FormErrors } from '../../../Formerrors/Formerrors';\r\nimport Loader from '../../../Loader/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport VaTaskData from './VaTaskData';\r\n\r\n\r\nclass VaTaskListing extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      itemList: [],\r\n      clientList:[],\r\n      vaLists: [],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { taskId: '', clientId: '', vaAuthId: '', projectId: '', title: '', description:'' },\r\n      formErrors: { clientId: '', projectId: '',  title:'', description: '', error: ''},\r\n      formValid: false,\r\n      filterItem: { filterVaAuth:'', filterProjectId:'', filterTitle: '', filterFrom:'',  filterTo:''}\r\n    } \r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.filterItemList = this.filterItemList.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n  }\r\n  \r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;\r\n    let organizationId = \"\";\r\n    if(params.organizationId !== undefined) {\r\n      organizationId = params.organizationId;\r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = params.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.itemList({filter_organization_id: organizationId});\r\n    this.vaListItem({});\r\n    this.clientListItem({});\r\n  }\r\n\r\n  /*VA Request List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterProjectId !== undefined && filterItem.filterProjectId !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&projectId=\"+filterItem.filterProjectId: \"&projectId=\"+filterItem.filterProjectId;\r\n    if(filterItem.filterTitle !== undefined && filterItem.filterTitle !== \"\" ) \r\n     filterQuery += (filterQuery !==\"\" ) ? \"&title=\"+filterItem.filterTitle: \"&title=\"+filterItem.filterTitle;\r\n    if(filterItem.filterEngagementType !== undefined && filterItem.filterEngagementType !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&engagementType=\"+filterItem.filterEngagementType: \"&engagementType=\"+filterItem.filterEngagementType;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-task'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, itemList: res.data.data.requestList});\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* Client List API */\r\n  clientListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, clientList: res.data.data.profileList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }  \r\n  /* VA List API */\r\n  vaListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-assignment/clients-va?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, vaLists: res.data.data.requestList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  filterItemList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className = \" was-validated\";\r\n    const formInputField = this.state.formField;\r\n    if( formInputField.clientId==='' || formInputField.vaAuthId==='' || formInputField.title==='' || formInputField.description===''){\r\n      toast.error(\"Please fill are mandatory fields!\");\r\n      return;\r\n    }\r\n      \r\n    this.setState( { formProccessing: true}, () => {\r\n      const formData = {\r\n        \"vaAuthId\": formInputField.vaAuthId,\r\n        \"organizationId\": formInputField.clientId,\r\n        \"projectId\": formInputField.projectId,\r\n        \"title\": formInputField.title,\r\n        \"description\": formInputField.description\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        formData['vaTaskId'] = formInputField.vaTaskId;\r\n       \r\n        commonService.putAPIWithAccessToken('va-task', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.itemList(); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }else{\r\n        commonService.postAPIWithAccessToken('va-task', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }           \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n\r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {      \r\n      case 'clientId':        \r\n        fieldValidationErrors.clientId = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'vaAuthId':        \r\n        fieldValidationErrors.vaAuthId = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'title':        \r\n        fieldValidationErrors.title = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'description':        \r\n        fieldValidationErrors.description = (value !== '') ? '' : ' is required';\r\n        break;      \r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    this.setState({formValid: \r\n      (formErrors.title === \"\" && formField.title !== \"\" && formErrors.vaAuthId === \"\" && formField.vaAuthId !== \"\") \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formField: { taskId: '', clientId: '', vaAuthId: '', projectId: '', title: '', description:'' },\r\n      formErrors: {clientId: '', vaAuthId: '', projectId: '', title: '', description:'', error: ''}\r\n    });\r\n  }\r\n\r\n  handleEditItem(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    const formField = {\r\n      clientId: itemInfo.authId,\r\n      vaAuthId: itemInfo.vaAuthId,\r\n      vaTaskId: itemInfo.vaTaskId,\r\n      projectId: itemInfo.projectId,\r\n      title: itemInfo.title,\r\n      description: itemInfo.description,\r\n    };\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( itemInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(itemInfo.vaRequestId, itemInfo.status )} >{ ( itemInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n  \r\n  /* Delete Record*/\r\n  handleDeleteItem(rowIndex){\r\n    const requestInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"vaTaskId\":requestInfo.vaTaskId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'va-task',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n  \r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterFrom:'',  filterTo:'', filterProjectId:'', filterTitle:''}\r\n    });\r\n    this.itemList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { itemList, loading, modal, formProccessing, clientList, vaLists, filterItem, formField } = this.state;\r\n\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Task List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add New Task</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filter\">VA User</Label>            \r\n                          <Input type=\"select\" placeholder=\"Filter by VA \" id=\"filterVaAuth\" name=\"filter_organization_id\" value={filterItem.filter} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">All</option>\r\n                            {vaLists.map((vaInfo, index) =>\r\n                              <SetVaDropDownItem key={index} vaInfo={vaInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup> \r\n                      </Col>\r\n                      {/* <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterProjectId\">Project</Label>\r\n                          <Input type=\"select\" name=\"filterProjectId\" id=\"filterProjectId\" value={filterItem.filterProjectId} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Project 1</option>\r\n                            <option value=\"2\">Project 2</option>\r\n                            <option value=\"3\">Project 3</option>\r\n                            <option value=\"4\">Project 4</option>\r\n                          </Input>\r\n                        </FormGroup>\r\n                      </Col> */}\r\n                      <Col md={\"4\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterTitle\">Task Name</Label>            \r\n                          <Input type=\"text\" name=\"filterTitle\" id=\"filterTitle\" value={filterItem.filterTitle} onChange={this.changeFilterHandler}>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"1\">Active</option>\r\n                            <option value=\"0\">Inactive</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList} title=\"Filter VA Request\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Reset Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <VaTaskData data={itemList} editItemAction={this.handleEditItem} deleteItemAction={this.handleDeleteItem} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.toggle}>VA Task Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"clientId\">Client *</Label>            \r\n                    <Input type=\"select\" id=\"clientId\" name=\"clientId\" value={formField.clientId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select Client</option>\r\n                      {clientList.map((clientInfo, index) =>\r\n                        <SetClientDropDownItem key={index} clientInfo={clientInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup> \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"vaAuthId\">VirDrop VA *</Label>            \r\n                    <Input type=\"select\" id=\"vaAuthId\" name=\"vaAuthId\" value={formField.vaAuthId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select VA</option>\r\n                      {vaLists.map((vaInfo, index) =>\r\n                        <SetVaDropDownItem key={index} vaInfo={vaInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup>  \r\n                </Col>\r\n                {/* <Col md={\"6\"}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"projectId\">Project </label>\r\n                    <Input type=\"select\" name=\"projectId\" id=\"projectId\" className=\"form-control\" value={formField.projectId} onChange={this.changeHandler}>\r\n                      <option value=\"1\">Project 1</option>\r\n                      <option value=\"2\">Project 2</option>\r\n                      <option value=\"3\">Project 3</option>\r\n                      <option value=\"4\">Project 4</option>\r\n                    </Input>\r\n                  </div>\r\n                </Col> */}\r\n                <Col md={\"12\"}>\r\n                  <FormGroup>\r\n                    <label htmlFor=\"title\">Task Name *</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" className=\"form-control\" placeholder=\"Task Name\" value={formField.title} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"12\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"description\">Description *</Label>\r\n                    <Input type=\"textarea\" name=\"description\" className=\"form-control\" value={formField.description} onChange={this.changeHandler} required></Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" type=\"submit\">{formProccessing ? processingBtnText : 'Submit' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetVaDropDownItem (props) {\r\n  const vaUserInfo = props.vaInfo;\r\n  return (<option value={vaUserInfo.authId} >{vaUserInfo.firstName+' '+vaUserInfo.lastName}</option>)\r\n}\r\n\r\nfunction SetClientDropDownItem (props) {\r\n  const vaClientInfo = props.clientInfo;\r\n  return (<option value={vaClientInfo.authId} >{vaClientInfo.firstName+' '+vaClientInfo.lastName}</option>)\r\n}\r\n\r\nexport default VaTaskListing;\r\n","import React, { Component } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport MUIDataTable from \"mui-datatables\";\r\n\r\nclass SubscribersData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n\r\n  /* Delete Enquiry Info */\r\n  deleteEnquiryItem(rowIndex){    \r\n    this.props.deleteEnquiryAction(rowIndex);\r\n  }\r\n \r\n\r\n  render() {\r\n    \r\n    let rowsItem = []; \r\n   \r\n    for(const [i, enquiry] of this.props.data.entries()){\r\n      //console.log(i);\r\n      let resInfo = {\r\n        contactPerson: enquiry.contactPerson || \" \",\r\n        email: enquiry.email,\r\n        sno: i+1,\r\n        createdAt: (new Date(enquiry.createdAt)).toLocaleDateString(\"en-US\"),\r\n        indexVal: i,\r\n        enquiryId: enquiry.id,\r\n      }      \r\n      rowsItem.push(resInfo);\r\n    }\r\n\r\n    const columns = [ \r\n        {\r\n          label: 'S no.',\r\n          name: 'sno',\r\n        },\r\n        {\r\n          label: 'Email',\r\n          name: 'email',\r\n        },\r\n        {\r\n          label: 'Contact Person',\r\n          name: 'contactPerson',\r\n        },\r\n        {\r\n          label: 'Subscribed on',\r\n          name: 'createdAt',\r\n        },\r\n        {\r\n          name: \"action\",\r\n          label: \" Action \",\r\n          options: {\r\n            filter: false,\r\n            sort: false,\r\n            download: false,\r\n            customBodyRender: (value, tableMeta, updateValue) => {\r\n              let i = tableMeta.rowIndex;\r\n              return (\r\n                <div className=\"actionBtnGroup\"><Button className=\"btn-delete btn-danger\" size='sm' onClick={() => { if(window.confirm('Are you sure you want to delete this record?')){ this.deleteEnquiryItem(i) };}} title=\"Delete Inquiry\"><i className=\"fa fa-trash\"></i> </Button></div>\r\n              );\r\n            }\r\n          }\r\n        },\r\n    ];\r\n    \r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'ebook-downloads-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"eBook Downloads\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubscribersData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, Col, Row, Button, Input, FormGroup, Label } from 'reactstrap';\r\n\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport SubscribersData from './SubscribersData';\r\nimport Loader from '../../Loader/Loader';\r\n\r\nclass NewsletterSubscribersList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      enquiryLists: [],\r\n      loading: true,\r\n      rowIndex: -1,\r\n      filterItem: { filterContactPerson: '', filterEmail:'', filterFrom:'',  filterTo:'' },    \r\n    } \r\n    this.handleDeleteEnquiry = this.handleDeleteEnquiry.bind(this);\r\n    this.filterEnquiryList = this.filterEnquiryList.bind(this);\r\n  }\r\n\r\n  // Fetch the Enquiry List\r\n  componentDidMount() {     \r\n    this.enquiryLists({});   \r\n  }\r\n\r\n  /* Enquiry List API */\r\n  enquiryLists(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterContactPerson !== undefined && filterItem.filterContactPerson !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&contactPerson=\"+filterItem.filterContactPerson: \"&contactPerson=\"+filterItem.filterContactPerson;\r\n    \r\n      if(filterItem.filterEmail !== undefined && filterItem.filterEmail !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&email=\"+filterItem.filterEmail: \"&email=\"+filterItem.filterEmail;\r\n    \r\n      if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('common/newsletter'+filterQuery)\r\n        .then( res => {       \r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }   \r\n          this.setState({loading:false, enquiryLists: res.data.data});              \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            //this.props.history.push('/login');\r\n          }\r\n          else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  } \r\n  \r\n  handleDeleteEnquiry(rowIndex){\r\n    const rowInfo = this.state.enquiryLists[rowIndex];\r\n    const delFormData = {\r\n      \"id\": rowInfo.id,\r\n    };\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( `common/newsletter/`, delFormData)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.enquiryLists();\r\n        } )\r\n        .catch( err => {                   \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }  \r\n\r\n  filterEnquiryList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.enquiryLists(filterItem);\r\n  }\r\n  \r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterEmail: '', filterFrom:'',  filterTo:'', filterContactPerson:'' }\r\n    });\r\n    this.enquiryLists();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n    const { enquiryLists, loading, filterItem } = this.state;\r\n       \r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"user-dashboard\">\r\n        {loaderElement}\r\n        <Card className=\"vd-card \">\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={12}>\r\n                <Row className=\"filterRow\">                      \r\n                  <Col md={\"3\"}>\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterEmail\">Email ID</Label>            \r\n                      <Input type=\"email\" placeholder=\"Email Address\" id=\"filterEmail\" name=\"filterEmail\" value={filterItem.filterEmail} onChange={this.changeFilterHandler} />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={\"3\"} className=\"pl-3\">\r\n                    <FormGroup> \r\n                      <Label htmlFor=\"filterContactPerson\">Contact Person</Label>            \r\n                      <Input type=\"text\" placeholder=\"Contact person\" id=\"filterContactPerson\" name=\"filterContactPerson\" value={filterItem.filterContactPerson} onChange={this.changeFilterHandler} />\r\n                    </FormGroup> \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date From</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"2\"}>\r\n                    <FormGroup> \r\n                      <Label>Date To</Label>\r\n                      <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                    </FormGroup>  \r\n                  </Col>\r\n                  <Col md={\"1\"} className=\"p-0\">\r\n                    <FormGroup> \r\n                      <Label>&nbsp;</Label><br />\r\n                      <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterEnquiryList} title=\"Filter Inquiries\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                      <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Clear Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                    </FormGroup>             \r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              \r\n              <Col md={12}>\r\n                <SubscribersData data={enquiryLists} deleteEnquiryAction={this.handleDeleteEnquiry} dataTableLoadingStatus = {this.state.loading} />\r\n              </Col>\r\n            </Row> \r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewsletterSubscribersList;","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n//import {Link} from \"react-router-dom\";\r\n\r\nclass VaTimesheetData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Info */\r\n  editDataItem(rowIndex){    \r\n    this.props.editItemAction(rowIndex);\r\n  }\r\n\r\n  deleteDataItem(rowIndex){    \r\n    this.props.deleteItemAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    let count=0;\r\n    let rowsItem = [];\r\n    for(const [i, Store] of this.props.data.entries()){\r\n      let orgInfo = {   \r\n        projectId: Store.projectId,\r\n        title: Store.taskName,\r\n        duration: Store.duration,\r\n        billingHours: Store.billingHours || 0,\r\n        vaName: Store.vaName || \" \",\r\n        clientName: Store.clientName || \" \",\r\n        createdAt: (new Date(Store.createdAt)).toLocaleDateString(\"en-US\"),\r\n        status: (Store.status===2 ? 'Completed' : 'Active'),   \r\n      }      \r\n      rowsItem.push(orgInfo);\r\n      count = count+i;\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Task name',\r\n        name: 'title',\r\n      },\r\n      {\r\n        label: 'VA name',\r\n        name: 'vaName',\r\n      },\r\n      {\r\n        label: 'Client',\r\n        name: 'clientName',\r\n      },\r\n      {\r\n        label: 'Total working hours',\r\n        name: 'duration',\r\n      },\r\n      {\r\n        label: 'Billing hours',\r\n        name: 'billingHours',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Created on',\r\n        name: 'createdAt',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div className=\"actionBtnGroup\" style={{width:'110px'}}>\r\n                <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editDataItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n              <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if(window.confirm('Are you sure you want to delete this record?')){ this.deleteDataItem(i) };}} ><i className=\"fa fa-trash\"></i></button></div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'va-task-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"VA Timesheet List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default VaTimesheetData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport { FormErrors } from '../../../Formerrors/Formerrors';\r\nimport Loader from '../../../Loader/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport VaTimesheetData from './VaTimesheetData';\r\n\r\n\r\nclass VaTimesheetList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,      \r\n      itemList: [],\r\n      vaLists: [],\r\n      clientList:[],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { taskId: '', vaAuthId: '', clientId:'', projectId: '', title: '', description:'', billingHours:'', status:'' },\r\n      formErrors: { vaAuthId: '', projectId: '',  title:'', error: ''},\r\n      formValid: false,\r\n      filterItem: { filterVaAuth:'', filterClientId:'', filterProjectId:'', filterTitle: '', filterFrom:'',  filterTo:''}\r\n    } \r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.filterItemList = this.filterItemList.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n  }\r\n  \r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;\r\n    let organizationId = \"\";\r\n    if(params.organizationId !== undefined) {\r\n      organizationId = params.organizationId;\r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = params.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.itemList({filter_organization_id: organizationId});\r\n    this.vaListItem({});\r\n    this.clientListItem({});\r\n  }\r\n\r\n  /*VA Request List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterVaAuth !== undefined && filterItem.filterVaAuth !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&vaAuthId=\"+filterItem.filterVaAuth: \"&vaAuthId=\"+filterItem.filterVaAuth;\r\n    if(filterItem.filterClientId !== undefined && filterItem.filterClientId !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&clientId=\"+filterItem.filterClientId: \"&clientId=\"+filterItem.filterClientId;\r\n    if(filterItem.filterTitle !== undefined && filterItem.filterTitle !== \"\" ) \r\n     filterQuery += (filterQuery !==\"\" ) ? \"&taskName=\"+filterItem.filterTitle: \"&taskName=\"+filterItem.filterTitle;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('timesheet'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, itemList: res.data.data.requestList});\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* VA List API */\r\n  vaListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-assignment/clients-va?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, vaLists: res.data.data.requestList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* Client List API */\r\n  clientListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, clientList: res.data.data.profileList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  filterItemList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"vaAuthId\": formInputField.vaAuthId,\r\n        \"clientId\": formInputField.clientId,\r\n        \"projectId\": formInputField.projectId,\r\n        \"taskName\": formInputField.title,\r\n        \"notes\": formInputField.description,\r\n        \"billingHours\": formInputField.billingHours,\r\n        \"status\": formInputField.status\r\n      };\r\n      const rowIndex = this.state.rowIndex;\r\n      if(rowIndex > -1) {\r\n        formData['vaTaskId'] = formInputField.vaTaskId;\r\n       \r\n        commonService.putAPIWithAccessToken('timesheet', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({ modal: false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.itemList(); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }else{\r\n        formData['taskType'] = 1;\r\n        commonService.postAPIWithAccessToken('timesheet', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) { \r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }           \r\n          this.setState({ modal: false});\r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      }\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n\r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {      \r\n      case 'vaAuthId':        \r\n        fieldValidationErrors.vaAuthId = (value !== '') ? '' : ' is required';\r\n        break;\r\n      case 'vaTitle':        \r\n        fieldValidationErrors.vaTitle = (value !== '') ? '' : ' is required';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    this.setState({formValid: \r\n      (formErrors.title === \"\" && formField.vaAuthId !== \"\") \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formField: { taskId: '', vaAuthId: '', clientId:'', projectId: '', title: '', description:'', billingHours:'' },\r\n      formErrors: {vaAuthId: '', projectId: '', title: '', error: ''}\r\n    });\r\n  }\r\n\r\n  handleEditItem(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    const formField = {\r\n      vaAuthId: itemInfo.authId,\r\n      vaTaskId: itemInfo.vaTaskId,\r\n      clientId: itemInfo.clientId,\r\n      projectId: itemInfo.projectId,\r\n      title: itemInfo.taskName,\r\n      description: itemInfo.notes,\r\n      billingHours: itemInfo.billingHours,\r\n      status: itemInfo.status\r\n    };\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( itemInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(itemInfo.vaRequestId, itemInfo.status )} >{ ( itemInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n  \r\n  /* Delete Record*/\r\n  handleDeleteItem(rowIndex){\r\n    const requestInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"vaTaskId\":requestInfo.vaTaskId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'timesheet',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n  \r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterVaAuth:'',filterClientId:'', filterFrom:'',  filterTo:'', filterProjectId:'', filterTitle:''}\r\n    });\r\n    this.itemList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n  render() {\r\n\r\n    const { itemList, loading, modal, formProccessing, vaLists, clientList, filterItem, formField } = this.state;\r\n\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>VA Timesheet List</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.toggle}><i className=\"fa fa-plus\"></i> Add VA</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterVaAuth\">VA User</Label>            \r\n                          <Input type=\"select\" placeholder=\"Filter by VA \" id=\"filterVaAuth\" name=\"filterVaAuth\" value={filterItem.filterVaAuth} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">All</option>\r\n                            {vaLists.map((vaInfo, index) =>\r\n                              <SetVaDropDownItem key={index} vaInfo={vaInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup> \r\n                      </Col>\r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterClientId\">Client</Label>            \r\n                          <Input type=\"select\" placeholder=\"Filter by Client\" id=\"filterClientId\" name=\"filterClientId\" value={filterItem.filterClientId} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">All</option>\r\n                            {clientList.map((clientInfo, index) =>\r\n                              <SetClientDropDownItem key={index} clientInfo={clientInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup> \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterTitle\">Task Name</Label>            \r\n                          <Input type=\"text\" name=\"filterTitle\" id=\"filterTitle\" value={filterItem.filterTitle} onChange={this.changeFilterHandler}>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"}>\r\n                        <FormGroup> \r\n                          <Label>Status</Label>\r\n                          <Input type=\"select\" name=\"filterStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"0\">Active</option>\r\n                            <option value=\"2\">Completed</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList} title=\"Filter VA Request\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Reset Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <VaTimesheetData data={itemList} editItemAction={this.handleEditItem} deleteItemAction={this.handleDeleteItem} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.toggle}>VA Task Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"vaAuthId\">VirDrop VA *</Label>            \r\n                    <Input type=\"select\" id=\"vaAuthId\" name=\"vaAuthId\" value={formField.vaAuthId} onChange={this.changeHandler} required >\r\n                      <option value=\"\">Select VA</option>\r\n                      {vaLists.map((vaInfo, index) =>\r\n                        <SetVaDropDownItem key={index} vaInfo={vaInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"clientId\">Client</Label>            \r\n                    <Input type=\"select\" id=\"clientId\" name=\"clientId\" value={formField.clientId} onChange={this.changeHandler} >\r\n                      <option value=\"\">Select Client</option>\r\n                      {clientList.map((clientInfo, index) =>\r\n                        <SetClientDropDownItem key={index} clientInfo={clientInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup> \r\n                </Col>\r\n                {/* <Col md={\"6\"}>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"projectId\">Project </label>\r\n                    <Input type=\"select\" name=\"projectId\" id=\"projectId\" className=\"form-control\" value={formField.projectId} onChange={this.changeHandler}>\r\n                      <option value=\"1\">Project 1</option>\r\n                      <option value=\"2\">Project 2</option>\r\n                      <option value=\"3\">Project 3</option>\r\n                      <option value=\"4\">Project 4</option>\r\n                    </Input>\r\n                  </div>\r\n                </Col> */}\r\n                <Col md={\"12\"}>\r\n                  <FormGroup>\r\n                    <label htmlFor=\"title\">Task Name *</label>\r\n                    <input type=\"text\" name=\"title\" id=\"title\" className=\"form-control\" placeholder=\"Task Name\" value={formField.title} onChange={this.changeHandler} required />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <label htmlFor=\"billingHours\">Billing Hours</label>\r\n                    <input type=\"number\" name=\"billingHours\" id=\"billingHours\" className=\"form-control\" placeholder=\"Total billing hours\" value={formField.billingHours} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup> \r\n                    <Label>Status</Label>\r\n                    <Input type=\"select\" name=\"status\" value={formField.status} onChange={this.changeHandler}>\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"0\">Active</option>\r\n                      <option value=\"2\">Completed</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>  \r\n                <Col md={\"12\"}>\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"description\">Notes</Label>\r\n                    <Input type=\"textarea\" name=\"description\" className=\"form-control\" value={formField.description} onChange={this.changeHandler}></Input>\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" type=\"submit\">{formProccessing ? processingBtnText : 'Update' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetVaDropDownItem (props) {\r\n  const vaUserInfo = props.vaInfo;\r\n  return (<option value={vaUserInfo.authId} >{vaUserInfo.firstName+' '+vaUserInfo.lastName}</option>)\r\n}\r\nfunction SetClientDropDownItem (props) {\r\n  const vaClientInfo = props.clientInfo;\r\n  return (<option value={vaClientInfo.authId} >{vaClientInfo.firstName+' '+vaClientInfo.lastName}</option>)\r\n}\r\n\r\nexport default VaTimesheetList;\r\n","import React, { Component } from 'react';\r\nimport MUIDataTable from \"mui-datatables\";\r\n//import {Link} from \"react-router-dom\";\r\n\r\nclass BillingData extends Component {\r\n  \r\n  constructor(props){\r\n    super(props);   \r\n    this.state = {\r\n      buttonProcessing: false,\r\n      rowIndex: '',\r\n      dataTableItem: []\r\n    };\r\n    \r\n  }\r\n  componentDidMount() {   \r\n  }\r\n  /* Edit Info */\r\n  editDataItem(rowIndex){    \r\n    this.props.editItemAction(rowIndex);\r\n  }\r\n\r\n  deleteDataItem(rowIndex){    \r\n    this.props.deleteItemAction(rowIndex);\r\n  }\r\n  payInvoiceItem(rowIndex){    \r\n    this.props.payInvoiceAction(rowIndex);\r\n  }\r\n\r\n  render() {\r\n    let count=0;\r\n    let rowsItem = [];\r\n    for(const [i, Store] of this.props.data.entries()){\r\n      let orgInfo = {   \r\n        invoiceId: Store.invoiceId,\r\n        title: Store.taskName,\r\n        amount: '$'+Store.amount,\r\n        billingHours: Store.billingHours || 0,\r\n        clientName: Store.clientName || \" \",\r\n        billingDuration: ( Store.billingFrom+' - '+Store.billingTo),\r\n        status: (Store.status===1 ? 'Paid' : 'Unpaid'),\r\n        invoiceAttachment: (Store.invoiceAttachment!=='' ? <a href={Store.invoiceAttachment} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-sm btn-primary\" title=\"Download Invoice\"><i className=\"fa fa-file-pdf-o \"></i></a>  : ''),\r\n      }\r\n      rowsItem.push(orgInfo);\r\n      count = count+i;\r\n    }      \r\n    \r\n    const columns = [ \r\n      {\r\n        label: 'Invoice no.',\r\n        name: 'invoiceId',\r\n      },\r\n      {\r\n        label: 'Client',\r\n        name: 'clientName',\r\n      },\r\n      {\r\n        label: 'Billing Hours',\r\n        name: 'billingHours',\r\n      },\r\n      {\r\n        label: 'Amount',\r\n        name: 'amount',\r\n      },\r\n      {\r\n        label: 'Status',\r\n        name: 'status',\r\n      },\r\n      {\r\n        label: 'Billing Duration',\r\n        name: 'billingDuration',\r\n      },\r\n      {\r\n        label: 'Action',\r\n        name: 'action',\r\n        options: {\r\n          filter: false,\r\n          sort: false,\r\n          download: false,\r\n          customBodyRender: (value, tableMeta, updateValue) => {\r\n            let i = tableMeta.rowIndex;\r\n            return (\r\n              <div className=\"actionBtnGroup\" style={{width:'140px'}}>\r\n                {rowsItem[i].invoiceAttachment}&nbsp;\r\n                <button className=\"btn-edit\" disabled={this.state.buttonProcessing} onClick={() => \r\n                this.editDataItem(i)}><i className=\"fa fa-pencil\"></i> </button>\r\n                <button className=\"btn-delete\" disabled={this.state.buttonProcessing} onClick={() => {if(window.confirm('Are you sure you want to delete this record?')){ this.deleteDataItem(i) };}} ><i className=\"fa fa-trash\"></i></button>\r\n                <button className=\"btn-edit\" title=\"Pay Now\" onClick={() => {if(window.confirm('Are you sure you want to pay this invoice?')){ this.payInvoiceItem(i) };}} ><i className=\"fa fa-paypal\"></i></button>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    ];\r\n    const options = {\r\n      search: true,\r\n      filter: false,\r\n      searchOpen: false,\r\n      print: false,\r\n      download: true,\r\n      downloadOptions: {filename: 'billing-list.csv', separator: ','},\r\n      responsive: 'stacked',\r\n      selectableRows: 'none',\r\n      textLabels: {\r\n        body: {\r\n          noMatch: this.props.dataTableLoadingStatus ? \"Loading........\" : \"\",\r\n          toolTip: \"Sort\",\r\n          columnHeaderTooltip: column => `Sort for ${column.label}`\r\n        },\r\n      },\r\n      fixedHeaderOptions: { xAxis: false, yAxis: false }\r\n\r\n    };\r\n    \r\n    return (\r\n      <MUIDataTable\r\n        title={\"Invoice List\"}\r\n        data={rowsItem}\r\n        columns={columns}\r\n        options={options}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BillingData;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Button, Form, Input, FormGroup, Label, Modal, ModalHeader, ModalBody, ModalFooter} from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../../core/services/commonService';\r\nimport { FormErrors } from '../../../Formerrors/Formerrors';\r\nimport Loader from '../../../Loader/Loader';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport BillingData from './BillingData';\r\n\r\n\r\nclass BillingList extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      modal: false,\r\n      invoiceModal: false,\r\n      itemList: [],\r\n      clientList:[],\r\n      loading: true,\r\n      formProccessing: false,\r\n      rowIndex: -1,\r\n      formField: { invoiceId: '', clientName: '', notes: '', billingHours:'', billingDate:'', status:'' },\r\n      formErrors: { vaAuthId: '', projectId: '',  title:'', error: ''},\r\n      formValid: false,\r\n      filterItem: { filterVaAuth:'', filterClientId:'', filterProjectId:'', filterTitle: '', filterFrom:'',  filterTo:''},\r\n      invoiceField: { invoiceClientId:'', billingFromDate:'', billingToDate:'', billingDescription:''},\r\n    } \r\n    this.submitHandler = this.submitHandler.bind(this);\r\n    this.handleDeleteItem = this.handleDeleteItem.bind(this);\r\n    this.filterItemList = this.filterItemList.bind(this);\r\n    this.handleEditItem = this.handleEditItem.bind(this);\r\n    this.payInvoiceAdmin = this.payInvoiceAdmin.bind(this);\r\n    this.submitInvoiceHandler = this.submitInvoiceHandler.bind(this);\r\n    \r\n  }\r\n  \r\n  componentDidMount() { \r\n    const { match: { params } } = this.props;\r\n    let organizationId = \"\";\r\n    if(params.organizationId !== undefined) {\r\n      organizationId = params.organizationId;\r\n      let filterItem = this.state.filterItem;\r\n      filterItem.filter_organization_id = params.organizationId;\r\n      this.setState({filterItem: filterItem});\r\n    }\r\n    this.itemList({filter_organization_id: organizationId});\r\n    this.vaListItem({});\r\n    this.clientListItem({});\r\n  }\r\n\r\n  /*VA Request List API*/\r\n  itemList(filterItem = {}) {\r\n    let filterQuery = \"?pageSize=10000\";\r\n    if(filterItem.filterVaAuth !== undefined && filterItem.filterVaAuth !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&vaAuthId=\"+filterItem.filterVaAuth: \"&vaAuthId=\"+filterItem.filterVaAuth;\r\n    if(filterItem.filterClientId !== undefined && filterItem.filterClientId !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&clientId=\"+filterItem.filterClientId: \"&clientId=\"+filterItem.filterClientId;\r\n    if(filterItem.filterTitle !== undefined && filterItem.filterTitle !== \"\" ) \r\n     filterQuery += (filterQuery !==\"\" ) ? \"&invoiceId=\"+filterItem.filterTitle: \"&invoiceId=\"+filterItem.filterTitle;\r\n    if(filterItem.filterFrom !== undefined && filterItem.filterFrom !== \"\" ){\r\n      let newFromDate = this.getFormatDate( filterItem.filterFrom );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&start_date=\"+newFromDate : \"?start_date=\"+newFromDate;\r\n    }\r\n    if(filterItem.filterTo !== undefined && filterItem.filterTo !== \"\" ){\r\n      let newToDate = this.getFormatDate( filterItem.filterTo );\r\n      filterQuery += (filterQuery !==\"\" ) ? \"&end_date=\"+newToDate: \"?end_date=\"+newToDate;\r\n    }\r\n    if(filterItem.filterStatus !== undefined && filterItem.filterStatus !== \"\" ) \r\n      filterQuery += (filterQuery !==\"\" ) ? \"&status=\"+filterItem.filterStatus: \"?status=\"+filterItem.filterStatus;\r\n    \r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('billing'+filterQuery)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, itemList: res.data.data.rowList});\r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* VA List API */\r\n  vaListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('va-assignment/clients-va?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, vaLists: res.data.data.requestList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  /* Client List API */\r\n  clientListItem(filterItem = {}) {\r\n    this.setState( { loading: true}, () => {\r\n      commonService.getAPIWithAccessToken('organization?pageSize=1000')\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { loading: false } );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({loading:false, clientList: res.data.data.profileList}); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else {\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n    } )\r\n  }\r\n\r\n  filterItemList(){\r\n    const filterItem = this.state.filterItem;\r\n    this.itemList(filterItem);\r\n  }\r\n\r\n  /* Submit Form Handler*/\r\n  submitHandler (event) {\r\n    event.preventDefault();\r\n    event.target.className += \" was-validated\";\r\n    this.setState( { formProccessing: true}, () => {\r\n      const formInputField = this.state.formField;\r\n      const formData = {\r\n        \"invoiceId\": formInputField.invoiceId,\r\n        \"notes\": formInputField.notes,\r\n        \"status\": formInputField.status\r\n      };\r\n      \r\n      this.setState( { loading: true}, () => { \r\n        commonService.putAPIWithAccessToken('billing', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {\r\n            this.setState( { formProccessing: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          this.setState({ modal: false, loading:false, formProccessing: false});\r\n          toast.success(res.data.message);\r\n          this.itemList(); \r\n        } )\r\n        .catch( err => {         \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { formProccessing: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      })\r\n    } );\r\n    \r\n  };\r\n  /* Input Field On changes*/\r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField },\r\n                  () => { this.validateField(name, value) });\r\n  };\r\n\r\n  changeFilterHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const filterItem = this.state.filterItem\r\n    filterItem[name] = value;\r\n    this.setState({ filterItem: filterItem });\r\n  };\r\n\r\n  changeInvoiceHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const invoiceField = this.state.invoiceField\r\n    invoiceField[name] = value;\r\n    this.setState({ invoiceField: invoiceField });\r\n  };\r\n\r\n  /* Validate Form Field */\r\n  validateField(fieldName, value) {\r\n    let fieldValidationErrors = this.state.formErrors;\r\n    fieldValidationErrors.error = '';\r\n   \r\n    switch(fieldName) {      \r\n      case 'vaAuthId':        \r\n        fieldValidationErrors.vaAuthId = (value !== '') ? '' : ' is required';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    this.setState({formErrors: fieldValidationErrors,       \r\n                  }, this.validateForm);\r\n  }\r\n  /* Validate Form */\r\n  validateForm() {\r\n    \r\n    const formErrors = this.state.formErrors;\r\n    const formField = this.state.formField;\r\n    this.setState({formValid: \r\n      (formErrors.title === \"\" && formField.vaAuthId !== \"\") \r\n      ? true : false});\r\n  }\r\n  /* Set Error Class*/\r\n  errorClass(error) {\r\n    return(error.length === 0 ? '' : 'has-error');\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      rowIndex: -1,\r\n      formValid: false,\r\n      formField: { invoiceId: '', clientName: '', billingPeriod: '', notes: '', status:'', billingHours:'', billingDate:''},\r\n      formErrors: {vaAuthId: '', status: '', notes: '', error: ''}\r\n    });\r\n  }\r\n\r\n  invoiceToggle = () => {\r\n    this.setState({\r\n      invoiceModal: !this.state.invoiceModal,\r\n      invoiceField: { invoiceClientId:'', billingFromDate:'', billingToDate:'', billingDescription:''},\r\n    });\r\n  }\r\n\r\n  handleEditItem(rowIndex){\r\n    const itemInfo = this.state.itemList[rowIndex];\r\n    const formField = {\r\n      authId: itemInfo.authId,\r\n      invoiceId: itemInfo.invoiceId,\r\n      clientName: itemInfo.clientName,\r\n      amount: itemInfo.amount,\r\n      billingPeriod: itemInfo.billingTo+' - '+itemInfo.billingTo,\r\n      notes: itemInfo.notes,\r\n      billingHours: itemInfo.billingHours,\r\n      billingDate: itemInfo.billingDate,\r\n      status: itemInfo.status\r\n    };\r\n    const statusBtn = <Button type=\"button\" size=\"sm\" className={`changeStatusBtn `+( itemInfo.status ? 'btn-danger' : 'btn-success' )} onClick={() => \r\n      this.changeProfileStatus(itemInfo.vaRequestId, itemInfo.status )} >{ ( itemInfo.status ? 'De-Activate Account' : 'Activate Account' )}</Button>\r\n    \r\n    this.setState({rowIndex: rowIndex, formField: formField, modal: true, changeStatusBtn:statusBtn, formValid: true});\r\n  }\r\n  \r\n  /* Delete Record*/\r\n  handleDeleteItem(rowIndex){\r\n    const requestInfo = this.state.itemList[rowIndex];\r\n    let formdata = { \"invoiceId\":requestInfo.invoiceId }\r\n\r\n    this.setState( { loading: true}, () => {\r\n      commonService.deleteAPIWithAccessToken( 'billing',formdata)\r\n        .then( res => {\r\n          this.setState({loading: false});\r\n          if ( undefined === res.data || !res.data.status ) {            \r\n             toast.error(res.data.message);      \r\n            return;\r\n          }         \r\n          toast.success(res.data.message);\r\n          this.itemList();\r\n        } )\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n      } )\r\n    })\r\n  }\r\n\r\n  submitInvoiceHandler (event) {\r\n    event.preventDefault();\r\n    this.setState( { loading: true, invoiceFormProccessing: true}, () => {\r\n      const invoiveInputField = this.state.invoiceField;\r\n      const formData = {\r\n        \"clientId\": invoiveInputField.invoiceClientId,\r\n        \"billingFrom\": this.getFormatDate(invoiveInputField.billingFromDate),\r\n        \"billingTo\": this.getFormatDate(invoiveInputField.billingToDate),\r\n        \"billingDescription\": invoiveInputField.billingDescription,\r\n      };\r\n      \r\n      commonService.postAPIWithAccessToken('billing', formData).then( res => {\r\n        if ( undefined === res.data.data || !res.data.status ) {\r\n          this.setState( { loading:false, formProccessing: false} );\r\n          toast.error(res.data.message);\r\n          return;\r\n        }\r\n        this.setState({ invoiceModal: false,  loading:false, formProccessing: false});\r\n        toast.success(res.data.message);\r\n        this.itemList(); \r\n      } )\r\n      .catch( err => {         \r\n        if(err.response !== undefined && err.response.status === 401) {\r\n          localStorage.clear();\r\n          this.props.history.push('/login');\r\n        }else{\r\n          this.setState( {  loading:false, formProccessing: false } );\r\n          toast.error(err.message);\r\n        }\r\n      } ) \r\n    } );    \r\n  };\r\n\r\n  \r\n  setFilterFromDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterFrom = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n  setFilterToDate = date => {\r\n    let filterFormField = this.state.filterItem;\r\n    filterFormField.filterTo = date;\r\n    this.setState({ filterItem: filterFormField });\r\n  };\r\n\r\n  setBillingFromDate = date => {\r\n    let invoiceField = this.state.invoiceField;\r\n    invoiceField.billingFromDate = date;\r\n    this.setState({ invoiceField: invoiceField });\r\n  };\r\n  setBillingToDate = date => {\r\n    let invoiceField = this.state.invoiceField;\r\n    invoiceField.billingToDate = date;\r\n    this.setState({ invoiceField: invoiceField });\r\n  };\r\n\r\n  resetfilterForm = () => {\r\n    this.setState({\r\n      filterItem: { filterVaAuth:'',filterClientId:'', filterFrom:'',  filterTo:'', filterProjectId:'', filterTitle:''}\r\n    });\r\n    this.itemList();\r\n  }\r\n  \r\n  getFormatDate(date) {\r\n    var year = date.getFullYear().toString();\r\n    var month = (date.getMonth() + 101).toString().substring(1);\r\n    var day = (date.getDate() + 100).toString().substring(1);\r\n    return year + \"-\" + month + \"-\" + day;\r\n  }\r\n\r\n   /* Pay Invoice Item*/\r\n   payInvoiceAdmin(rowIndex){\r\n    const requestInfo = this.state.itemList[rowIndex];\r\n    \r\n    if(requestInfo.invoiceId!==''){\r\n      const formData = {\r\n        \"invoiceId\": requestInfo.invoiceId,\r\n      }\r\n      this.setState( { loading: true}, () => {\r\n        commonService.postAPIWithAccessToken('payment/pay', formData)\r\n        .then( res => {\r\n          if ( undefined === res.data.data || !res.data.status ) {           \r\n            this.setState( { loading: false} );\r\n            toast.error(res.data.message);\r\n            return;\r\n          }\r\n          if (typeof window !== 'undefined') {\r\n            window.location.href = res.data.data.redirectUrl;\r\n          }\r\n        })\r\n        .catch( err => {       \r\n          if(err.response !== undefined && err.response.status === 401) {\r\n            localStorage.clear();\r\n            this.props.history.push('/login');\r\n          }else{\r\n            this.setState( { loading: false } );\r\n            toast.error(err.message);\r\n          }\r\n        } )\r\n      })\r\n    }else{\r\n      this.setState( { loading: false } );\r\n      toast.error(\"Invalid Invoice ID.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { itemList, loading, modal, invoiceModal, formProccessing, clientList, filterItem, formField, invoiceField } = this.state;\r\n\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    const processingBtnText = <>Submit <i className=\"fa fa-spinner\"></i></>;\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Billing</strong> <Button color=\"primary\" className=\"categoryAdd\" type=\"button\" onClick={this.invoiceToggle}><i className=\"fa fa-plus\"></i> Create New Invoice</Button>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  <Col md={12}>\r\n                    <Row className=\"filterRow\">                      \r\n                      <Col md={\"2\"} className=\"pl-3\">\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterTitle\">Invoice no.</Label>            \r\n                          <Input type=\"text\" name=\"filterTitle\" id=\"filterTitle\" value={filterItem.filterTitle} onChange={this.changeFilterHandler}>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label htmlFor=\"filterClientId\">Client</Label>            \r\n                          <Input type=\"select\" placeholder=\"Filter by Client\" id=\"filterClientId\" name=\"filterClientId\" value={filterItem.filterClientId} onChange={this.changeFilterHandler} >\r\n                            <option value=\"\">All</option>\r\n                            {clientList.map((clientInfo, index) =>\r\n                              <SetClientDropDownItem key={index} clientInfo={clientInfo} />\r\n                            )}\r\n                          </Input>\r\n                        </FormGroup> \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Payment Status</Label>\r\n                          <Input type=\"select\" name=\"paymentStatus\" value={filterItem.filterStatus} onChange={this.changeFilterHandler}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"0\">Unpaid</option>\r\n                            <option value=\"2\">Paid</option>\r\n                          </Input>\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date From</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterFrom } onChange={this.setFilterFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"2\"}>\r\n                        <FormGroup> \r\n                          <Label>Date To</Label>\r\n                          <DatePicker className=\"form-control\" selected={ filterItem.filterTo } onChange={this.setFilterToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                        </FormGroup>  \r\n                      </Col>\r\n                      <Col md={\"1\"} className=\"p-0\">\r\n                        <FormGroup> \r\n                          <Label>&nbsp;</Label><br />\r\n                          <Button color=\"success\" type=\"button\" size=\"sm\" onClick={this.filterItemList} title=\"Filter VA Request\"><i className=\"fa fa-search\"></i></Button>&nbsp;\r\n                          <Button color=\"danger\" type=\"reset\" size=\"sm\" onClick={this.resetfilterForm} title=\"Reset Fields\"><i className=\"fa fa-refresh\"></i></Button>\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col md={12}>\r\n                    <BillingData data={itemList} editItemAction={this.handleEditItem} deleteItemAction={this.handleDeleteItem} payInvoiceAction={this.payInvoiceAdmin} dataTableLoadingStatus = {this.state.loading} />\r\n                  </Col>\r\n                </Row> \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <Modal isOpen={modal} toggle={this.toggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.toggle}>Invoice Info</ModalHeader>\r\n          <Form onSubmit={this.submitHandler} noValidate>\r\n            <ModalBody>\r\n              <FormErrors formErrors={this.state.formErrors} />\r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label><strong>Client:</strong> {formField.clientName}</Label>            \r\n                  </FormGroup> \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label><strong>Billing Period:</strong> {formField.billingPeriod}</Label>            \r\n                  </FormGroup> \r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <label><strong>Billing Hours:</strong> {formField.billingHours}</label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup>\r\n                    <label><strong>Amount:</strong> ${formField.amount}</label>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"12\">\r\n                  <FormGroup>\r\n                    <label><strong>Billing Date:</strong> {(new Date(formField.billingDate)).toLocaleDateString(\"en-US\")}</label>\r\n                  </FormGroup>\r\n                </Col>\r\n                \r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <label>Notes:</label>\r\n                    <input type=\"text\" name=\"notes\" id=\"notes\" className=\"form-control\" placeholder=\"Invoice notes\" value={formField.notes} onChange={this.changeHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                  <FormGroup> \r\n                    <Label>Status</Label>\r\n                    <Input type=\"select\" name=\"status\" value={formField.status} onChange={this.changeHandler}>\r\n                      <option value=\"\">Select Status</option>\r\n                      <option value=\"0\">Unpaid</option>\r\n                      <option value=\"1\">Paid</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>  \r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" type=\"submit\">{formProccessing ? processingBtnText : 'Update' }</Button>\r\n              <Button color=\"secondary\" onClick={this.toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n\r\n        <Modal isOpen={invoiceModal} toggle={this.invoiceToggle} className=\"full-width-modal-section store-modal\">\r\n          <ModalHeader toggle={this.invoiceToggle}>Create New Invoice</ModalHeader>\r\n          <Form onSubmit={this.submitInvoiceHandler} noValidate>\r\n            <ModalBody>\r\n              <Row>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup> \r\n                    <Label htmlFor=\"invoiceClientId\">Client *</Label>            \r\n                    <Input type=\"select\" id=\"invoiceClientId\" name=\"invoiceClientId\" value={invoiceField.invoiceClientId} onChange={this.changeInvoiceHandler} >\r\n                      <option value=\"\">Select Client</option>\r\n                      {clientList.map((clientInfo, index) =>\r\n                        <SetClientDropDownItem key={index} clientInfo={clientInfo} />\r\n                      )}\r\n                    </Input>\r\n                  </FormGroup> \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup>\r\n                    <label htmlFor=\"billingDescription\">Notes </label>\r\n                    <input type=\"text\" name=\"billingDescription\" id=\"billingDescription\" className=\"form-control\" placeholder=\"Invoice Notes\" value={formField.billingDescription} onChange={this.changeInvoiceHandler} />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup className=\"vd-datepicker\"> \r\n                    <Label>Billing From *</Label>\r\n                    <DatePicker className=\"form-control\" selected={ invoiceField.billingFromDate } onChange={this.setBillingFromDate} dateFormat=\"MM/dd/yyyy\" />\r\n                  </FormGroup>  \r\n                </Col>\r\n                <Col md={\"6\"}>\r\n                  <FormGroup className=\"vd-datepicker\"> \r\n                    <Label>Billing To *</Label>\r\n                    <DatePicker className=\"form-control\" selected={ invoiceField.billingToDate } onChange={this.setBillingToDate} dateFormat=\"MM/dd/yyyy\" />\r\n                  </FormGroup>  \r\n                </Col>\r\n              </Row>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" type=\"submit\">Generate Invoice</Button>\r\n              <Button color=\"secondary\" type=\"button\" onClick={this.invoiceToggle}>Cancel</Button>\r\n            </ModalFooter>\r\n          </Form>\r\n        </Modal>\r\n\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction SetClientDropDownItem (props) {\r\n  const vaClientInfo = props.clientInfo;\r\n  return (<option value={vaClientInfo.authId} >{vaClientInfo.firstName+' '+vaClientInfo.lastName}</option>)\r\n}\r\n\r\nexport default BillingList;\r\n","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardHeader, Col, Row, Form, Button, Input, FormGroup, Label, FormFeedback } from 'reactstrap';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport commonService from '../../../core/services/commonService';\r\nimport Loader from '../../Loader/Loader';\r\nimport \"./../../Pages/Frontend/BeAVirtdropVA/BecomeVirtdropPage.css\";\r\n\r\nconst skillArr = ['ECommerce','Data Entry and Research','SEO','Content Writing and Copywriting','Photo & Video Editing','Customer Support','Social Media Marketing and Management','Real Estate','Web Development and Graphics','Telesales and Telemarketing','Lead Generation','Others'];\r\n\r\n\r\nclass AddVaApplication extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      requestStatus:'',\r\n      formField: { firstName: '', lastName: '', email:'', mobileNumber:'', skypeID:'', socialMediaID:'', platform:'', portfolioLink:'', status:'', skillSet:'',skillSet1:'', skillSet2:'', skillSet3:'', rateSkill1:'', rateSkill2:'', rateSkill3:'', referenceName:'', referenceEmail:'', notes:'' },\r\n      applicationFiles: {audioFile:'', resumeCV:'', intentLetter:'', internetSpeedScreenshot:'' },\r\n      audioFile:'',\r\n      resumeCV:'',\r\n      intentLetter:'',\r\n      internetSpeedScreenshot:'',\r\n      successMessage: '',\r\n      loading: false,\r\n      errors: {}\r\n    } \r\n    this.submitFormData = this.submitFormData.bind(this);\r\n  }\r\n\r\n  componentDidMount() { \r\n\r\n  }\r\n  \r\n  submitFormData(e) {\r\n    e.preventDefault();\r\n    e.target.className += \" was-validated\";\r\n      if (this.validateForm()) {\r\n        const formInputField = this.state.formField;\r\n        const formData = new FormData();\r\n        formData.append('firstName', formInputField.firstName);\r\n        formData.append('lastName', formInputField.lastName);\r\n        formData.append('email', formInputField.email.toLowerCase());\r\n        formData.append('mobileNumber', formInputField.mobileNumber);\r\n        formData.append('skypeID', formInputField.skypeID);\r\n        formData.append('socialMediaID', formInputField.socialMediaID);\r\n        formData.append('platform', formInputField.platform);\r\n        formData.append('portfolioLink', formInputField.portfolioLink);\r\n\r\n        if(formInputField.skillSet1 !== \"\")\r\n          formData.append('skillSet1', formInputField.skillSet1);\r\n        if(formInputField.skillSet2 !== \"\")\r\n          formData.append('skillSet2', formInputField.skillSet2);\r\n        if(formInputField.skillSet3 !== \"\")\r\n          formData.append('skillSet3', formInputField.skillSet3);\r\n        if(formInputField.rateSkill1 !== \"\")\r\n          formData.append('rateSkill1', formInputField.rateSkill1);\r\n        if(formInputField.rateSkill2 !== \"\")\r\n          formData.append('rateSkill2', formInputField.rateSkill2);\r\n        if(formInputField.rateSkill3 !== \"\")\r\n          formData.append('rateSkill3', formInputField.rateSkill3);\r\n        if(formInputField.referenceName !== \"\")\r\n          formData.append('referenceName', formInputField.referenceName);\r\n        if(formInputField.referenceEmail !== \"\")\r\n          formData.append('referenceEmail', formInputField.referenceEmail);\r\n        if(formInputField.notes !== \"\")\r\n          formData.append('notes', formInputField.notes);\r\n        \r\n        \r\n        if(this.state.audioFile !== \"\")\r\n          formData.append('audioFile', this.state.audioFile);\r\n        if(this.state.resumeCV !== \"\")\r\n          formData.append('resumeCV', this.state.resumeCV);\r\n        if(this.state.intentLetter !== \"\")\r\n          formData.append('intentLetter', this.state.intentLetter);\r\n        if(this.state.internetSpeedScreenshot !== \"\")\r\n          formData.append('internetSpeedScreenshot', this.state.internetSpeedScreenshot);\r\n        \r\n        this.setState( { loading: true }, () => {\r\n           commonService.postAPI( `va-application`, formData )\r\n            .then( res => {\r\n              if ( undefined === res.data || !res.data.status ) {\r\n                this.setState( { loading: false } );\r\n                toast.error(res.data.message);\r\n                return;\r\n              }\r\n              this.setState({loading: false, successMessage:res.data.message, errors:'' });\r\n              this.props.history.push('/admin/va-application/');\r\n              toast.success(res.data.message);\r\n              window.scrollTo(0, 0);\r\n            } )\r\n            .catch( err => {\r\n              toast.error(err.message);\r\n              this.setState( { loading: false} );\r\n            } )\r\n        } )\r\n      }else{\r\n        //console.log(\"Outside validation area.\");\r\n      }\r\n  };\r\n \r\n  changeHandler = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    const formField = this.state.formField\r\n    formField[name] = value;\r\n    this.setState({ formField: formField, } );\r\n  };\r\n\r\n  handleAudioFileChange = (e) => { this.setState({ audioFile: e.target.files[0] }) };\r\n  handleResumeCVeChange = (e) => { this.setState({ resumeCV: e.target.files[0] }) };\r\n  handleIntentLetterChange = (e) => { this.setState({ intentLetter: e.target.files[0] }) };\r\n  handleInternetSpeedScreenshotChange = (e) => { this.setState({ internetSpeedScreenshot: e.target.files[0] }) };\r\n  \r\n\r\n  validateForm() {\r\n    let errors = {};\r\n    let formIsValid = true;\r\n    let formField = this.state.formField;\r\n    if (!formField.firstName) {\r\n        formIsValid = false;\r\n        errors[\"firstName\"] = \"*Please enter first name.\";\r\n    }\r\n    if (typeof formField.firstName !== \"undefined\") {\r\n        if (!formField.firstName.match(/^[a-zA-Z ]*$/)) {\r\n            formIsValid = false;\r\n            errors[\"firstName\"] = \"*Please enter alphabet characters only.\";\r\n        }\r\n    }\r\n    if (!formField.lastName) {\r\n      formIsValid = false;\r\n      errors[\"lastName\"] = \"*Please enter last name.\";\r\n    }\r\n    if (!formField.email) {\r\n        formIsValid = false;\r\n        errors[\"email\"] = \"*Please enter your email-ID.\";\r\n    }\r\n    if (typeof formField.email !== \"undefined\") {\r\n        //regular expression for email validation\r\n        var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n        if (!pattern.test(formField.email)) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n        }\r\n    }\r\n  \r\n    if (!formField.mobileNumber) {\r\n      formIsValid = false;\r\n      errors[\"mobileNumber\"] = \"*Please enter your mobile no.\";\r\n    }\r\n    if (typeof formField.mobileNumber !== \"undefined\") {\r\n      if (!formField.mobileNumber.match(/^[0-9]{10}$/)) {\r\n          formIsValid = false;\r\n          errors[\"mobileNumber\"] = \"*Please enter valid mobile no.\";\r\n      }\r\n    }\r\n   \r\n    if (!formField.skypeID) {\r\n      formIsValid = false;\r\n      errors[\"skypeID\"] = \"*This field is required\";\r\n    }\r\n    \r\n    if (!formField.platform) {\r\n      formIsValid = false;\r\n      errors[\"platform\"] = \"*This field is required\";\r\n    }\r\n\r\n    if(formIsValid=== false)\r\n      window.scrollTo(0, 0);\r\n    \r\n    this.setState({\r\n      loading: false,\r\n      errors: errors\r\n    });\r\n    return formIsValid;\r\n  }\r\n  \r\n  render() {\r\n\r\n    const { loading, formField, errors } = this.state;\r\n    let loaderElement = '';\r\n    if(loading)        \r\n      loaderElement = <Loader />\r\n\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          \r\n          {loaderElement}\r\n          <Col lg={12}>\r\n            <Card>\r\n              <CardHeader className=\"mainHeading\">\r\n                <strong>Add VA Application</strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Form onSubmit={this.submitFormData} noValidate>\r\n                    <div  className=\"form-service-listing\">\r\n                        <h2>Personal Information</h2>\r\n                        <Row>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"firstName\">First Name *</Label>\r\n                            <Input type=\"text\" name=\"firstName\" id=\"firstName\" invalid={errors['firstName'] !== undefined && errors['firstName'] !== \"\"} value={formField.firstName} onChange={this.changeHandler} placeholder=\"First Name\" required />\r\n                            <FormFeedback>{errors['firstName']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"lastName\">Last Name *</Label>\r\n                            <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={formField.lastName} invalid={errors['lastName'] !== undefined && errors['lastName'] !== \"\"} onChange={this.changeHandler} placeholder=\"Last Name\" required />\r\n                            <FormFeedback>{errors['lastName']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"mobileNumber\">Mobile Number *</Label>\r\n                                <Input type=\"number\" name=\"mobileNumber\" min={1} step=\"1\" id=\"mobileNumber\" invalid={errors['mobileNumber'] !== undefined && errors['mobileNumber'] !== \"\"} placeholder=\"Mobile no.\" value={formField.mobileNumber} onChange={this.changeHandler} required />\r\n                                <FormFeedback>{errors['mobileNumber']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"email\">Email Address *</Label>\r\n                            <Input type=\"email\" name=\"email\" id=\"email\" placeholder=\"Email Address\" invalid={errors['email'] !== undefined && errors['email'] !== \"\"} value={formField.email} onChange={this.changeHandler} required />\r\n                            <FormFeedback>{errors['email']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>\r\n                            <FormGroup>\r\n                            <Label htmlFor=\"skypeID\">Skype ID *</Label>\r\n                            <Input type=\"text\" name=\"skypeID\" invalid={errors['skypeID'] !== undefined && errors['skype'] !== \"\"} id=\"skypeID\" value={formField.skypeID} onChange={this.changeHandler} placeholder=\"Skype ID\" required />\r\n                            <FormFeedback>{errors['skypeID']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={3}>  \r\n                            <FormGroup>\r\n                            <Label htmlFor=\"socialMediaID\">Social Media IDs (optional)</Label>\r\n                            <Input type=\"text\" name=\"socialMediaID\" id=\"socialMediaID\" value={formField.socialMediaID} placeholder=\"Social Media IDs\" onChange={this.changeHandler} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                            <FormGroup>\r\n                            <Label>Platforms, Tools, Systems , CRM *</Label>\r\n                            <Input type=\"textarea\" name=\"platform\" value={formField.platform} placeholder=\"Platforms, Tools, Systems, CRM\" onChange={this.changeHandler} required />\r\n                            <FormFeedback>{errors['platform']}</FormFeedback>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md=\"12\">\r\n                          <FormGroup>\r\n                            <Label>Website/ Portfolio Links </Label>\r\n                            <Input type=\"text\" name=\"portfolioLink\" value={formField.portfolioLink} placeholder=\"Website/ Portfolio Links\" onChange={this.changeHandler} />\r\n                          </FormGroup>\r\n                        </Col>\r\n                        </Row>\r\n                    </div>\r\n                    <div className=\"form-service-listing\">\r\n                      <Row>\r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 1</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet1\" value={formField.skillSet1} onChange={this.changeHandler} required invalid={errors['skillSet1'] !== undefined && errors['skillSet1'] !== \"\"}>\r\n                                  <option value=\"\">Select Skill 1 *</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                                <FormFeedback>{errors['skillSet1']}</FormFeedback>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill1\" value={formField.rateSkill1} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>    \r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 2</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet2\" value={formField.skillSet2} onChange={this.changeHandler}>\r\n                                  <option value=\"\">Select Skill 2</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill2\" value={formField.rateSkill2} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>\r\n                        <Col md=\"4\" sm=\"12\">\r\n                          <h4>Skill Set 3</h4>\r\n                          <Row>\r\n                            <Col md=\"8\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"select\" name=\"skillSet3\" value={formField.skillSet3} onChange={this.changeHandler}>\r\n                                  <option value=\"\">Select Skill 3</option>\r\n                                  {skillArr.map((skill, index) =>\r\n                                  <option key={index} value={skill}>{skill}</option>\r\n                                  )}\r\n                                </Input>\r\n                              </FormGroup>\r\n                            </Col>\r\n                            <Col md=\"4\" sm=\"6\">\r\n                              <FormGroup>\r\n                                <Input type=\"number\" name=\"rateSkill3\" value={formField.rateSkill3} placeholder=\"Rating\" min=\"1\" max=\"10\" onChange={this.changeHandler} />\r\n                              </FormGroup>\r\n                            </Col>  \r\n                          </Row>\r\n                        </Col>  \r\n                      </Row>\r\n                    </div>\r\n\r\n                    <div className=\"form-service-listing\">\r\n                    <h2>Upload</h2>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Audio Clip/File</h3>\r\n                                <Input type=\"file\" id=\"audioFile\" name=\"audioFile\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleAudioFileChange} />\r\n                                <label htmlFor=\"audioFile\">\r\n                                    <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.audioFile!=='' ? this.state.audioFile.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Resumes/CVS</h3>\r\n                                <Input type=\"file\" id=\"resumeCV\" name=\"resumeCV\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleResumeCVeChange} />\r\n                                <label htmlFor=\"resumeCV\">\r\n                                    <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.resumeCV!=='' ? this.state.resumeCV.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                            <h3>Intent Letter </h3>\r\n                            <Input type=\"file\" id=\"intentLetter\" name=\"intentLetter\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleIntentLetterChange} />\r\n                            <label htmlFor=\"intentLetter\">\r\n                                <figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                <span>{ this.state.intentLetter!=='' ? this.state.intentLetter.name : 'Choose a file' }&hellip;</span>\r\n                            </label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-3\">\r\n                            <div className=\"file-box\">\r\n                                <h3>Internet Connection Speed screenshot </h3>\r\n                                <Input type=\"file\" id=\"internetSpeedScreenshot\" name=\"internetSpeedScreenshot\" className=\"inputfile inputfile-4\" data-multiple-caption=\"{count} files selected\" onChange={this.handleInternetSpeedScreenshotChange} />\r\n                                <label htmlFor=\"internetSpeedScreenshot\"><figure><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\"><path d=\"M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z\"/></svg></figure> \r\n                                    <span>{ this.state.internetSpeedScreenshot!=='' ? this.state.internetSpeedScreenshot.name : 'Choose a file' }&hellip;</span>\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n                        {/* <Col md=\"6\">\r\n                          <FormGroup>\r\n                            <Label>Status *</Label>\r\n                            <Input type=\"select\" name=\"status\" value={formField.status} onChange={this.changeHandler} required>\r\n                              <option value=\"1\">Pending</option>\r\n                              <option value=\"2\">Approve</option>\r\n                              <option value=\"3\">Reject</option>\r\n                            </Input>\r\n                          </FormGroup>\r\n                        </Col> */}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div  className=\"form-service-listing\">\r\n                    <h2>References</h2>\r\n                    <Row>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"referenceName\">Name</Label>\r\n                          <Input type=\"text\" name=\"referenceName\" id=\"referenceName\" value={formField.referenceName} onChange={this.changeHandler} placeholder=\"Reference Name\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={6}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"referenceEmail\">Email</Label>\r\n                          <Input type=\"email\" name=\"referenceEmail\" id=\"referenceEmail\" value={formField.referenceEmail} onChange={this.changeHandler} placeholder=\"Reference Email\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col md={12}>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"notes\">Notes</Label>\r\n                          <Input type=\"textarea\" name=\"notes\" id=\"notes\" value={formField.notes} onChange={this.changeHandler} placeholder=\"Notes\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"form-service-listing\">\r\n                      <div className=\"row\">\r\n                          <div className=\"col-md-12\">\r\n                              <div className=\"form-group pull-right\">\r\n                                  <Button className=\"submit-btn\">Submit</Button>\r\n                              </div>\r\n                          </div>\r\n                      </div>\r\n                  </div>\r\n\r\n                </Form>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddVaApplication;\r\n","import Dashboard from '../views/AdminDashboard/Dashboard/Dashboard';\r\nimport organizationList from '../views/AdminDashboard/Organization/Organization';\r\nimport UsersList from '../views/AdminDashboard/Users/Users'\r\nimport UserDetails from '../views/AdminDashboard/Users/User';\r\nimport EnquiryListing from '../views/AdminDashboard/Organization/Enquiry/EnquiryListing';\r\nimport AdvertiserPlans from '../views/AdminDashboard/Subscription/AdvertiserSubscription';\r\nimport ChangePassword from '../views/AdminDashboard/ChangePassword/ChangePassword';\r\nimport UserTransactionList from '../views/AdminDashboard/UserTransactions/UserTransactionList';\r\nimport SubscribedAdvertiserList from '../views/AdminDashboard/SubscribedUsers/SubscribedAdvertiserList';\r\nimport SubscribedOwnerList from '../views/AdminDashboard/SubscribedUsers/SubscribedOwnerList';\r\nimport ApplicationList from '../views/AdminDashboard/VaApplications/ApplicationLists.';\r\nimport EditVaApplication from '../views/AdminDashboard/VaApplications/EditVaApplication';\r\nimport VaRequestListing from '../views/AdminDashboard/Organization/VaRequest/VaRequestListing';\r\nimport ScheduledBooking from '../views/AdminDashboard/ScheduledBooking/ScheduledBooking';\r\nimport AssignRequest from '../views/AdminDashboard/Organization/VaRequest/AssignRequest';\r\nimport VaTaskListing from '../views/AdminDashboard/Organization/VaTask/VaTaskListing';\r\nimport SubscribersList from '../views/AdminDashboard/NewsletterSubscriber/NewsletterSubscribersList';\r\nimport VaTimesheetList from '../views/AdminDashboard/Organization/VaTimesheet/VaTimesheetList';\r\nimport BillingList from '../views/AdminDashboard/Organization/Billing/BillingList';\r\nimport AddVaApplication from '../views/AdminDashboard/VaApplications/AddVaApplication';\r\n\r\nconst adminRoutes = [\r\n  { path: '/admin/', exact: true, name: 'Admin' },\r\n  { path: '/admin/dashboard', exact: true, name: 'Dashboard', component: Dashboard },  \r\n  { path: '/admin/organization', exact: true, name: 'Manage Clients', component: organizationList },\r\n  { path: '/admin/users', exact: true, name: 'Manage Admin Users', component: UsersList },\r\n  { path: '/admin/user/:profileId', exact: true,  name: 'User Details', component: UserDetails },\r\n  { path: '/admin/va-application', exact: true, name: 'Manage VA Application', component: ApplicationList },\r\n  { path: '/admin/va-application/add-new-va', exact: true, name: 'Add New VA Application', component: AddVaApplication },\r\n  { path: '/admin/va-application/:vaApplicationId', exact: true, name: 'VA Application Details', component: EditVaApplication },\r\n  { path: '/admin/va-request', exact: true, name: 'Manage Request', component: VaRequestListing },\r\n  { path: '/admin/va-request/assign-va/:vaRequestId', exact: true, name: 'Assign VA Request', component: AssignRequest },\r\n  { path: '/admin/enquiries', exact: true, name: 'Manage Enquiries', component: EnquiryListing },\r\n  { path: '/admin/scheduled-booking', exact: true, name: 'Manage Discovery Call', component: ScheduledBooking },\r\n  { path: '/admin/subscription', exact: true, name: 'Manage Advertiser Subscription', component: AdvertiserPlans },\r\n  { path: '/admin/change-password', exact: true,  name: 'Change Password', component: ChangePassword },\r\n  { path: '/admin/transactions', exact: true, name: 'Manage Transactions', component: UserTransactionList },\r\n  { path: '/admin/subscribed', exact: true, name: 'Subscribed Owner', component: SubscribedOwnerList },\r\n  { path: '/admin/subscribed/advertisers', exact: true, name: 'Subscribed Advertiser', component: SubscribedAdvertiserList },\r\n  { path: '/admin/va-task', exact: true, name: 'Manage Task', component: VaTaskListing },\r\n  { path: '/admin/timesheet', exact: true, name: 'Manage Timesheet', component: VaTimesheetList },\r\n  { path: '/admin/newsletter', exact: true, name: 'eBook Downloads', component: SubscribersList },\r\n  { path: '/admin/billing', exact: true, name: 'Clients Billing', component: BillingList },\r\n\r\n\r\n];\r\n\r\nexport default adminRoutes;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultFooter extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span>Copyright  &copy; {(new Date().getFullYear())} VirDrop. All Rights Reserved.</span>\r\n        <span className=\"ml-auto\">Powered by <a href=\"https://www.niletechnologies.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Nile Technologies</a>.</span>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultFooter.propTypes = propTypes;\r\nDefaultFooter.defaultProps = defaultProps;\r\n\r\nexport default DefaultFooter;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UncontrolledDropdown, DropdownItem, DropdownMenu, DropdownToggle, Nav } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { AppNavbarBrand, AppSidebarToggler } from '@coreui/react';\r\nimport logo from './../../assets/images/logo.png';\r\nimport sygnet from './../../assets/images/logo-icon.png';\r\nimport UserAvtar from '../UserLayout/UserAvtar'\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nclass DefaultHeader extends Component {\r\n  render() {\r\n\r\n    // eslint-disable-next-line\r\n    const { children, ...attributes } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <AppSidebarToggler className=\"d-lg-none\" display=\"md\" mobile />\r\n        <AppNavbarBrand\r\n          full={{ src: logo, width: 88, height: 40, alt: 'TexQue Logo' }}\r\n          minimized={{ src: sygnet, width: 30, height: 30, alt: 'TexQue Logo' }}\r\n        />\r\n        <AppSidebarToggler className=\"d-md-down-none\" display=\"lg\" />\r\n\r\n        \r\n        <Nav className=\"ml-auto\" navbar>\r\n          <UncontrolledDropdown nav direction=\"down\">\r\n            <DropdownToggle nav>\r\n              <div className=\"admin-avatar\"><UserAvtar /></div>\r\n              <span className=\"admin-profile-username\">\r\n                {localStorage.getItem( 'userName' )} <span className=\"caret\"></span>\r\n              </span>\r\n            </DropdownToggle>\r\n            <DropdownMenu right>\r\n              <DropdownItem header tag=\"div\" className=\"text-center\"><strong>My Account</strong></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/dashboard\" className=\"profileDropDownLink\"><i className=\"fa fa-dashboard\"></i> Dashboard</Link></DropdownItem>\r\n              <DropdownItem><Link to=\"/admin/change-password\" className=\"profileDropDownLink\"><i className=\"fa fa-lock\"></i> Change Password</Link></DropdownItem>\r\n              <DropdownItem onClick={e => this.props.onLogout(e)}><i className=\"fa fa-sign-out\"></i> Logout</DropdownItem>\r\n            </DropdownMenu>\r\n          </UncontrolledDropdown>\r\n        </Nav>\r\n        \r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDefaultHeader.propTypes = propTypes;\r\nDefaultHeader.defaultProps = defaultProps;\r\n\r\nexport default DefaultHeader;\r\n","import React, { Component, Suspense } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as router from 'react-router-dom';\r\nimport { Container } from 'reactstrap';\r\nimport './App.scss';\r\n\r\nimport {\r\n  AppAside,\r\n  AppFooter,\r\n  AppHeader,\r\n  AppSidebar,\r\n  AppSidebarFooter,\r\n  AppSidebarForm,\r\n  AppSidebarHeader,\r\n  AppSidebarMinimizer,\r\n  AppBreadcrumb2 as AppBreadcrumb,\r\n  AppSidebarNav2 as AppSidebarNav,\r\n} from '@coreui/react';\r\n// sidebar nav config\r\n\r\nimport adminNavigation from './_adminNav';\r\nimport recruitmentAdminNavigation from './_recruitmentAdminNav';\r\nimport recruitmentTeamNavigation from './_recruitmentTeamNav';\r\nimport marketingTeamNavigation from './_marketingTeamNav';\r\n\r\n// routes config\r\nimport adminRoutes from '../../routes/adminRoutes';\r\nimport './AdminLayout.css';\r\n//import DefaultAside from './DefaultAside';\r\nimport DefaultFooter from './DefaultFooter';\r\nimport DefaultHeader from './DefaultHeader';\r\n\r\nclass AdminLayout extends Component {\r\n\r\n  loading = () => <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\r\n\r\n  signOut(e) {\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    this.props.history.push('/login')\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app dashboard-template\">\r\n        <AppHeader fixed>\r\n          <Suspense  fallback={this.loading()}>\r\n            <DefaultHeader onLogout={e=>this.signOut(e)}/>\r\n          </Suspense>\r\n        </AppHeader>\r\n        <div className=\"app-body admin-panel\">\r\n          <AppSidebar fixed display=\"lg\">\r\n            <AppSidebarHeader />\r\n            <AppSidebarForm />\r\n            <Suspense>\r\n            { (localStorage.getItem( 'role' ).toLowerCase() === \"admin\" ) && \r\n            <AppSidebarNav navConfig={adminNavigation} {...this.props} router={router}/>\r\n            }\r\n            { (localStorage.getItem( 'role' )=== \"recruitmentAdmin\" ) && \r\n              <AppSidebarNav navConfig={recruitmentAdminNavigation} {...this.props} router={router}/>  \r\n            }\r\n            { (localStorage.getItem( 'role' ) === \"recruitmentTeam\" ) && \r\n              <AppSidebarNav navConfig={recruitmentTeamNavigation} {...this.props} router={router}/>  \r\n            }\r\n            { (localStorage.getItem( 'role' ) === \"marketingTeam\" ) && \r\n              <AppSidebarNav navConfig={marketingTeamNavigation} {...this.props} router={router}/>  \r\n            }\r\n            </Suspense>\r\n            <AppSidebarFooter />\r\n            <AppSidebarMinimizer />\r\n          </AppSidebar>\r\n          <main className=\"main\">\r\n            <AppBreadcrumb appRoutes={adminRoutes} router={router}/>\r\n            <Container fluid>\r\n              <ToastContainer />\r\n              <Suspense fallback={this.loading()}>\r\n                <Switch>\r\n                  {adminRoutes.map((route, idx) => {\r\n                    return route.component ? (\r\n                      <Route\r\n                        key={idx}\r\n                        path={route.path}\r\n                        exact={route.exact}\r\n                        name={route.name}\r\n                        render={props => (\r\n                          <route.component {...props} />\r\n                        )} />\r\n                    ) : (null);\r\n                  })}                  \r\n                  <Redirect from=\"/admin\" to=\"/admin/dashboard\" />\r\n                </Switch>\r\n              </Suspense>\r\n            </Container>\r\n          </main>\r\n          <AppAside fixed>\r\n            <Suspense fallback={this.loading()}>\r\n              {/* <DefaultAside /> */}\r\n            </Suspense>\r\n          </AppAside>\r\n        </div>\r\n        <AppFooter>\r\n          <Suspense fallback={this.loading()}>\r\n            <DefaultFooter />\r\n          </Suspense>\r\n        </AppFooter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminLayout;\r\n","import React from 'react';\r\nimport './Formerrors.css';\r\nexport const FormErrors = ({formErrors}) =>\r\n  <div className='formErrors'>\r\n    {Object.keys(formErrors).map((fieldName, i) => {\r\n      if(formErrors[fieldName].length > 0){\r\n        let reqFieldName = fieldName.replace('_', ' ');\r\n        return (\r\n\r\n          <p key={i}>{reqFieldName} {formErrors[fieldName]}</p>\r\n        )        \r\n      } else {\r\n        return '';\r\n      }\r\n    })}\r\n  </div>"],"sourceRoot":""}